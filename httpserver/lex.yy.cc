
#line 3 "lex.yy.cc"

#define  YY_INT_ALIGNED short int

/* A lexical scanner generated by flex */

/* %not-for-header */
/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */
/* %ok-for-header */

#define FLEX_SCANNER
#define YY_FLEX_MAJOR_VERSION 2
#define YY_FLEX_MINOR_VERSION 6
#define YY_FLEX_SUBMINOR_VERSION 4
#if YY_FLEX_SUBMINOR_VERSION > 0
#define FLEX_BETA
#endif

/* %if-c++-only */
    /* The c++ scanner is a mess. The FlexLexer.h header file relies on the
     * following macro. This is required in order to pass the c++-multiple-scanners
     * test in the regression suite. We get reports that it breaks inheritance.
     * We will address this in a future release of flex, or omit the C++ scanner
     * altogether.
     */
    #define yyFlexLexer yyFlexLexer
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* First, we deal with  platform-specific or compiler-specific issues. */

/* begin standard C headers. */
/* %if-c-only */
/* %endif */

/* %if-tables-serialization */
/* %endif */
/* end standard C headers. */

/* %if-c-or-c++ */
/* flex integer type definitions */

#ifndef FLEXINT_H
#define FLEXINT_H

/* C99 systems have <inttypes.h>. Non-C99 systems may or may not. */

#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L

/* C99 says to define __STDC_LIMIT_MACROS before including stdint.h,
 * if you want the limit (max/min) macros for int types. 
 */
#ifndef __STDC_LIMIT_MACROS
#define __STDC_LIMIT_MACROS 1
#endif

#include <inttypes.h>
typedef int8_t flex_int8_t;
typedef uint8_t flex_uint8_t;
typedef int16_t flex_int16_t;
typedef uint16_t flex_uint16_t;
typedef int32_t flex_int32_t;
typedef uint32_t flex_uint32_t;
#else
typedef signed char flex_int8_t;
typedef short int flex_int16_t;
typedef int flex_int32_t;
typedef unsigned char flex_uint8_t; 
typedef unsigned short int flex_uint16_t;
typedef unsigned int flex_uint32_t;

/* Limits of integral types. */
#ifndef INT8_MIN
#define INT8_MIN               (-128)
#endif
#ifndef INT16_MIN
#define INT16_MIN              (-32767-1)
#endif
#ifndef INT32_MIN
#define INT32_MIN              (-2147483647-1)
#endif
#ifndef INT8_MAX
#define INT8_MAX               (127)
#endif
#ifndef INT16_MAX
#define INT16_MAX              (32767)
#endif
#ifndef INT32_MAX
#define INT32_MAX              (2147483647)
#endif
#ifndef UINT8_MAX
#define UINT8_MAX              (255U)
#endif
#ifndef UINT16_MAX
#define UINT16_MAX             (65535U)
#endif
#ifndef UINT32_MAX
#define UINT32_MAX             (4294967295U)
#endif

#ifndef SIZE_MAX
#define SIZE_MAX               (~(size_t)0)
#endif

#endif /* ! C99 */

#endif /* ! FLEXINT_H */

/* %endif */

/* begin standard C++ headers. */
/* %if-c++-only */
#include <iostream>
#include <errno.h>
#include <cstdlib>
#include <cstdio>
#include <cstring>
/* end standard C++ headers. */
/* %endif */

/* TODO: this is always defined, so inline it */
#define yyconst const

#if defined(__GNUC__) && __GNUC__ >= 3
#define yynoreturn __attribute__((__noreturn__))
#else
#define yynoreturn
#endif

/* %not-for-header */
/* Returned upon end-of-file. */
#define YY_NULL 0
/* %ok-for-header */

/* %not-for-header */
/* Promotes a possibly negative, possibly signed char to an
 *   integer in range [0..255] for use as an array index.
 */
#define YY_SC_TO_UI(c) ((YY_CHAR) (c))
/* %ok-for-header */

/* %if-reentrant */
/* %endif */

/* %if-not-reentrant */

/* %endif */

/* Enter a start condition.  This macro really ought to take a parameter,
 * but we do it the disgusting crufty way forced on us by the ()-less
 * definition of BEGIN.
 */
#define BEGIN (yy_start) = 1 + 2 *
/* Translate the current start state into a value that can be later handed
 * to BEGIN to return to the state.  The YYSTATE alias is for lex
 * compatibility.
 */
#define YY_START (((yy_start) - 1) / 2)
#define YYSTATE YY_START
/* Action number for EOF rule of a given start state. */
#define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
/* Special action meaning "start processing a new file". */
#define YY_NEW_FILE yyrestart( yyin  )
#define YY_END_OF_BUFFER_CHAR 0

/* Size of default input buffer. */
#ifndef YY_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k.
 * Moreover, YY_BUF_SIZE is 2*YY_READ_BUF_SIZE in the general case.
 * Ditto for the __ia64__ case accordingly.
 */
#define YY_BUF_SIZE 32768
#else
#define YY_BUF_SIZE 16384
#endif /* __ia64__ */
#endif

/* The state buf must be large enough to hold one state per character in the main buffer.
 */
#define YY_STATE_BUF_SIZE   ((YY_BUF_SIZE + 2) * sizeof(yy_state_type))

#ifndef YY_TYPEDEF_YY_BUFFER_STATE
#define YY_TYPEDEF_YY_BUFFER_STATE
typedef struct yy_buffer_state *YY_BUFFER_STATE;
#endif

#ifndef YY_TYPEDEF_YY_SIZE_T
#define YY_TYPEDEF_YY_SIZE_T
typedef size_t yy_size_t;
#endif

/* %if-not-reentrant */
extern int yyleng;
/* %endif */

/* %if-c-only */
/* %if-not-reentrant */
/* %endif */
/* %endif */

#define EOB_ACT_CONTINUE_SCAN 0
#define EOB_ACT_END_OF_FILE 1
#define EOB_ACT_LAST_MATCH 2
    
    /* Note: We specifically omit the test for yy_rule_can_match_eol because it requires
     *       access to the local variable yy_act. Since yyless() is a macro, it would break
     *       existing scanners that call yyless() from OUTSIDE yylex.
     *       One obvious solution it to make yy_act a global. I tried that, and saw
     *       a 5% performance hit in a non-yylineno scanner, because yy_act is
     *       normally declared as a register variable-- so it is not worth it.
     */
    #define  YY_LESS_LINENO(n) \
            do { \
                int yyl;\
                for ( yyl = n; yyl < yyleng; ++yyl )\
                    if ( yytext[yyl] == '\n' )\
                        --yylineno;\
            }while(0)
    #define YY_LINENO_REWIND_TO(dst) \
            do {\
                const char *p;\
                for ( p = yy_cp-1; p >= (dst); --p)\
                    if ( *p == '\n' )\
                        --yylineno;\
            }while(0)
    
/* Return all but the first "n" matched characters back to the input stream. */
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		*yy_cp = (yy_hold_char); \
		YY_RESTORE_YY_MORE_OFFSET \
		(yy_c_buf_p) = yy_cp = yy_bp + yyless_macro_arg - YY_MORE_ADJ; \
		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
		} \
	while ( 0 )
#define unput(c) yyunput( c, (yytext_ptr)  )

#ifndef YY_STRUCT_YY_BUFFER_STATE
#define YY_STRUCT_YY_BUFFER_STATE
struct yy_buffer_state
	{
/* %if-c-only */
/* %endif */

/* %if-c++-only */
	std::streambuf* yy_input_file;
/* %endif */

	char *yy_ch_buf;		/* input buffer */
	char *yy_buf_pos;		/* current position in input buffer */

	/* Size of input buffer in bytes, not including room for EOB
	 * characters.
	 */
	int yy_buf_size;

	/* Number of characters read into yy_ch_buf, not including EOB
	 * characters.
	 */
	int yy_n_chars;

	/* Whether we "own" the buffer - i.e., we know we created it,
	 * and can realloc() it to grow it, and should free() it to
	 * delete it.
	 */
	int yy_is_our_buffer;

	/* Whether this is an "interactive" input source; if so, and
	 * if we're using stdio for input, then we want to use getc()
	 * instead of fread(), to make sure we stop fetching input after
	 * each newline.
	 */
	int yy_is_interactive;

	/* Whether we're considered to be at the beginning of a line.
	 * If so, '^' rules will be active on the next match, otherwise
	 * not.
	 */
	int yy_at_bol;

    int yy_bs_lineno; /**< The line count. */
    int yy_bs_column; /**< The column count. */

	/* Whether to try to fill the input buffer when we reach the
	 * end of it.
	 */
	int yy_fill_buffer;

	int yy_buffer_status;

#define YY_BUFFER_NEW 0
#define YY_BUFFER_NORMAL 1
	/* When an EOF's been seen but there's still some text to process
	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
	 * shouldn't try reading from the input source any more.  We might
	 * still have a bunch of tokens to match, though, because of
	 * possible backing-up.
	 *
	 * When we actually see the EOF, we change the status to "new"
	 * (via yyrestart()), so that the user can continue scanning by
	 * just pointing yyin at a new input file.
	 */
#define YY_BUFFER_EOF_PENDING 2

	};
#endif /* !YY_STRUCT_YY_BUFFER_STATE */

/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */
/* %if-not-reentrant */
/* %endif */
/* %ok-for-header */

/* %endif */

/* We provide macros for accessing buffer states in case in the
 * future we want to put the buffer states in a more general
 * "scanner state".
 *
 * Returns the top of the stack, or NULL.
 */
#define YY_CURRENT_BUFFER ( (yy_buffer_stack) \
                          ? (yy_buffer_stack)[(yy_buffer_stack_top)] \
                          : NULL)
/* Same as previous macro, but useful when we know that the buffer stack is not
 * NULL or when we need an lvalue. For internal use only.
 */
#define YY_CURRENT_BUFFER_LVALUE (yy_buffer_stack)[(yy_buffer_stack_top)]

/* %if-c-only Standard (non-C++) definition */
/* %if-not-reentrant */
/* %not-for-header */
/* %ok-for-header */

/* %endif */
/* %endif */

void *yyalloc ( yy_size_t  );
void *yyrealloc ( void *, yy_size_t  );
void yyfree ( void *  );

#define yy_new_buffer yy_create_buffer
#define yy_set_interactive(is_interactive) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){ \
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_is_interactive = is_interactive; \
	}
#define yy_set_bol(at_bol) \
	{ \
	if ( ! YY_CURRENT_BUFFER ){\
        yyensure_buffer_stack (); \
		YY_CURRENT_BUFFER_LVALUE =    \
            yy_create_buffer( yyin, YY_BUF_SIZE ); \
	} \
	YY_CURRENT_BUFFER_LVALUE->yy_at_bol = at_bol; \
	}
#define YY_AT_BOL() (YY_CURRENT_BUFFER_LVALUE->yy_at_bol)

/* %% [1.0] yytext/yyin/yyout/yy_state_type/yylineno etc. def's & init go here */
/* Begin user sect3 */
#define YY_SKIP_YYWRAP

#define FLEX_DEBUG
typedef flex_uint8_t YY_CHAR;

#define yytext_ptr yytext

#include <FlexLexer.h>

int yyFlexLexer::yywrap() { return 1; }
int yyFlexLexer::yylex()
	{
	LexerError( "yyFlexLexer::yylex invoked but %option yyclass used" );
	return 0;
	}

#define YY_DECL int iotcloud::http11scanner::yylex()

/* %% [1.5] DFA */

/* %if-c-only Standard (non-C++) definition */
/* %endif */

/* Done after the current pattern has been matched and before the
 * corresponding action - sets up yytext.
 */
#define YY_DO_BEFORE_ACTION \
	(yytext_ptr) = yy_bp; \
/* %% [2.0] code to fiddle yytext and yyleng for yymore() goes here \ */\
	yyleng = (int) (yy_cp - yy_bp); \
	(yy_hold_char) = *yy_cp; \
	*yy_cp = '\0'; \
/* %% [3.0] code to copy yytext_ptr to yytext[] goes here, if %array \ */\
	(yy_c_buf_p) = yy_cp;
/* %% [4.0] data tables for the DFA and the user's section 1 definitions go here */
#define YY_NUM_RULES 66
#define YY_END_OF_BUFFER 67
/* This struct is not used in this scanner,
   but its presence is necessary. */
struct yy_trans_info
	{
	flex_int32_t yy_verify;
	flex_int32_t yy_nxt;
	};
static const flex_int16_t yy_accept[1095] =
    {   0,
        0,    0,   13,   13,    0,    0,    0,    0,    0,    0,
       67,   65,   64,   66,   63,    1,   64,   63,   13,   66,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   66,   66,
       66,   66,   66,   66,   66,   66,   66,   66,   66,   66,
       66,   66,   66,   66,   66,   64,   63,   13,    0,   13,
       13,   13,   13,    0,   13,    0,   13,   13,   13,   13,
       13,   13,    0,   13,   13,   13,   13,   13,   13,    0,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,

       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   40,    0,    0,    0,    0,    0,    0,    0,
       13,    0,   13,   13,    0,    0,   13,    0,   13,    0,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,    0,   13,   13,   13,   13,   13,   13,
       13,   13,    0,   13,   13,   13,   13,   13,   13,    0,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,

        0,   13,   13,   13,   13,   13,    3,   13,   13,   13,
       13,    6,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   62,   62,    0,   44,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   21,    0,    0,    0,   13,    0,
        0,   13,    0,   13,    0,    0,   13,    0,   13,   13,
       13,   13,   13,   13,   13,   13,   13,    0,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,

       13,   13,   13,   13,   13,   13,   13,    0,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,    0,
       13,   13,    0,   13,    0,   13,   13,   13,    0,   13,
       13,    0,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,    4,   13,   13,    5,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,    0,
        0,    0,    0,    0,    0,   16,   45,    0,    0,   29,
        0,   30,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   50,

        0,    0,   13,    0,   13,    0,   13,    0,    0,    0,
       13,    0,   13,   13,   13,   13,   13,   13,   13,   13,
        0,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,    0,    0,   13,    0,   13,
        0,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,    0,    0,    0,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,    8,   13,   13,   13,   13,

       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,    0,   52,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   38,    0,    0,    0,    0,    0,    0,    0,    0,
        0,   13,    0,    0,   13,    0,   13,    0,   13,    0,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,    0,   13,    0,    0,   13,    0,   13,   13,
       13,   13,   13,   13,   13,   13,   13,    0,   13,   13,

       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,    0,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,    7,   13,   11,   12,   13,   13,
       13,   13,   23,    0,    0,    0,    0,   28,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,   17,    0,
        0,    0,   49,    0,    0,    0,    0,    0,    0,   13,
        0,    0,   13,    0,    0,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,    0,    0,    0,   13,    0,   13,   13,

       13,   13,   13,   13,   13,   13,    0,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
        9,   13,    2,   13,    0,    0,    0,    0,    0,   60,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
       39,    0,   18,    0,   20,    0,    0,   22,    0,   13,
        0,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,    0,   13,    0,   13,
        0,   13,   13,   13,   13,   13,   13,   13,   13,   13,

       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   10,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   31,    0,    0,   34,    0,    0,   46,    0,
        0,    0,    0,    0,    0,    0,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,    0,   13,    0,    0,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,   13,

       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,    0,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,    0,
        0,    0,    0,    0,    0,   15,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   41,    0,   13,   13,   13,    0,   13,   13,
       13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
       13,   13,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,   57,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,   48,    0,    0,   13,   13,   13,   13,

       13,   13,   13,   13,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,   59,    0,    0,    0,    0,
        0,   36,    0,    0,    0,    0,   13,   13,   13,    0,
        0,    0,   43,   27,   14,    0,    0,    0,    0,   58,
        0,    0,   33,    0,   61,    0,    0,    0,    0,   24,
        0,    0,    0,    0,   55,    0,   42,    0,    0,    0,
        0,    0,    0,   25,   26,    0,    0,    0,    0,    0,
        0,    0,    0,    0,   53,   54,   56,    0,    0,    0,
        0,    0,   51,   32,    0,    0,    0,   19,    0,   47,
        0,   35,   37,    0

    } ;

static const YY_CHAR yy_ec[256] =
    {   0,
        1,    1,    1,    1,    1,    1,    1,    1,    2,    3,
        1,    1,    4,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    2,    5,    1,    1,    6,    7,    8,    9,   10,
       11,   12,   13,   14,   15,   16,   17,   18,   19,   20,
       21,   22,   23,   24,   24,   24,   24,   25,   26,    1,
       27,    1,   28,   29,   30,   31,   32,   33,   34,   35,
       36,   37,   38,   39,   39,   40,   41,   42,   43,   44,
       39,   45,   46,   47,   48,   49,   50,   39,   39,   39,
        1,    1,    1,    1,   51,    1,   52,   31,   53,   54,

       55,   56,   57,   58,   59,   39,   39,   60,   61,   62,
       63,   64,   39,   65,   66,   67,   68,   69,   70,   71,
       72,   73,    1,    1,    1,   74,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,

        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
        1,    1,    1,    1,    1
    } ;

static const YY_CHAR yy_meta[75] =
    {   0,
        1,    1,    2,    2,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    4,    5,    5,    5,
        5,    5,    5,    5,    3,    6,    3,    7,    3,    5,
        5,    5,    5,    5,    5,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    5,    5,    5,    5,    5,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3
    } ;

static const flex_int16_t yy_base[1353] =
    {   0,
        0,    3,   28,    0,    0,    0,   99,    0,    0,    0,
     2234,13829, 2230,13829, 2228,13829, 2228, 2226,   97,    0,
       99,  134,  157,  180,  203,  228,  298,  368,  438,   74,
       75,   76,   68,   72,   62,  508,  578,  648, 2226,  100,
      102, 2161,   81, 2147,   95, 2155,  103, 2158, 2144,   83,
     2152,   96,  103,  131,  120, 2204,13829,  239,    0,  164,
      177,  395,    0,    0,  243,    0,  718,  786,  809,  832,
      855,  245,    0,  880,  410,  409,  950,    1, 1007,    0,
     2188,    0,  368,  464, 1071, 1141, 1211, 1281, 2149,  258,
      146,  151,  164,  186,  170,  171,  169,  200,  215, 1351,

      480,  536,  247, 1421,  205,  538,  260, 1491,  556,  398,
     2175, 2188, 2136, 2133, 2126, 2118, 2131, 2121, 2115, 2126,
     2113, 2113, 2128, 2108, 2158, 2106, 2116, 2088,  214, 2096,
      225, 2082,13829, 2091, 2085, 2086, 2074, 2086, 2087, 2071,
      483,    0,  676,  908,    0, 2127,  605,    0,  522,    0,
      271,  619, 1559, 1582, 1605, 1630, 1700, 1770, 1840,  663,
     1908, 1931, 1954,    0,  594, 1979, 2049, 2119, 2189,  411,
      429, 2115,    0,  275, 1026, 1083, 1155, 2259, 2329,    0,
     1224, 2397, 2419, 1295, 2443, 1066,  444, 2513, 2583, 1323,
     2653, 2723,  689,  656, 2793, 2863, 1393,  277, 2933, 1519,

        0,  604, 1658, 3003, 3073, 3143, 2087,  261,  215,  263,
      364, 2086,  161,  895, 3213, 3283, 3353, 3423, 3492, 1136,
     1416,  901,  795, 1765, 3556, 2094,    0, 2116, 2061,13829,
     2052, 2056, 2055,  337, 2057, 2051,  351, 2046, 2062, 2038,
      453, 2037, 2051, 2087, 2042, 2018, 2016, 2017, 2006, 2000,
      369, 2003, 2001, 1992,13829, 2037, 1989, 2043,  921,    0,
        0, 1034,    0, 1046,    0,    0, 1112,    0, 1784, 3624,
     3647, 1854, 3672, 3740, 1379, 3804,  690,    0,  851, 1993,
     2063, 2133, 3874, 3944, 4014, 4084, 1182, 1506, 4154, 4224,
     4292, 1248, 4356, 4424, 4447, 4470, 4493, 4518, 4588,  549,

     1499, 4658, 4728, 1835,  425, 4798,  497,    0, 1898, 2201,
     2271, 2341, 4868,    2, 4938, 5008, 1974, 5078, 1250, 5146,
     5168, 5190,  618, 5214,  393,  374,  662, 2359, 2471,    0,
     2541, 5284,    0, 1318,    0, 5354, 2611, 2681,    0, 5411,
        0,    0, 2033, 1092, 2074, 2144, 5475, 5545, 5615, 5685,
     5755, 5825, 1982,  366,  386, 1981,  459, 5895, 5964, 6024,
      533, 1961,    0, 6094, 6164, 6233, 6291, 6351,    0, 1960,
     1952, 1957, 1964, 1948, 1947,13829,13829, 1948, 1933,13829,
     1976,13829,  439, 1931, 1928, 1896, 1942, 1879, 1909, 1882,
     1870, 1886, 1875, 1867, 1857, 1851, 1841, 1854, 1889,13829,

     1864, 1831, 1319,    0, 1532,    0, 1567,    0,    0, 1882,
     1590,    0, 1252, 6409, 6432, 6455, 1645, 6480, 1881, 1458,
        0, 2736, 2807, 2877, 2947, 6550, 3139, 2219, 6620, 6690,
     1365, 2289, 6760, 6830, 3185, 1322, 6900, 1672, 2458, 6968,
     6991, 7014, 7039, 1027,  814,  564, 3087, 3107, 3166, 3115,
     7107, 7129, 3297, 7153,  492,    0, 1879, 1811,    0, 1435,
        0,  449, 2226, 7221, 7244, 7267, 7292, 7362, 7432, 7502,
     3381, 3451,    0,    0,    0, 7571, 7595,    0, 1861, 7620,
     7679, 3470, 7743, 7813, 2788, 3487, 7883, 7953, 1859, 2512,
     8023, 8093, 8163, 2594,   79, 1847, 8233, 8302, 8327, 8396,

     3561,  879,  819, 8460, 2858, 3677, 8530, 8600, 1855, 3690,
     8670, 3718, 1812,13829, 1813, 1848, 1809, 1797, 1791, 1800,
     1828, 1774, 1786, 1772, 1758, 1758, 1775, 1756, 1748, 1758,
     1794,13829, 1745, 1779, 1728, 1737, 1733, 1734, 1755, 1635,
     1640, 2020,    0,    0, 2220,    0, 2290,    0, 2296,    0,
     3571, 8738, 8761, 3818, 8786, 1602, 1381, 3888, 3958, 4028,
     2464, 8856, 2534, 1533, 2625, 8924, 8947, 8970, 8993, 9018,
      568, 2387, 3689, 4098, 4108, 2668, 9086, 9108, 9130, 9154,
      570, 2484,    0, 2554,    0,    0, 2694,    0, 4167, 9222,
     9245, 4238, 9270, 9338, 3241, 9402, 1178,    0, 2417, 4284,

     4306, 4370, 9472, 9542, 9612, 9682, 2761, 3243, 9752, 9822,
     9890, 2764, 9954,    0,10023,10047,  776, 1944, 2958,10072,
     3308, 3698, 3899,10142,10212, 3188, 2834, 2904, 1653,10282,
    10351, 4546, 1681, 1636, 1662, 1626, 1613,13829, 1612, 1631,
     1623, 1610, 1613, 1606, 1597, 1591, 1590, 1586,13829, 1620,
     1584, 1618,13829, 1580, 1577, 1565, 1560, 1548, 1557, 3394,
        0,    0, 3464,    0,    0, 3368,10374,10397,10420,10445,
     2695, 4601, 4672, 4742, 4812,10515, 2395, 3227,10583,10606,
    10629,10654,  634, 4416, 4880, 4950, 5021,10722,10744, 5092,
    10768, 1606, 3487,    0,    0, 1601, 3507,    0, 3438,10836,

    10859,10882, 3746,10907, 3598, 1906,    0, 5227, 5430, 5489,
     5559,10977, 5587, 4255,11047,11117, 3632, 4394,11187,11257,
     5657, 2760,11327, 3842,11396,11420,    0, 1570,11445, 3969,
    11515, 3777,11585,11655, 1426, 1519, 1528, 1531, 1571,13829,
     1530, 1515, 1516, 1556, 1514, 1514, 1513, 1502, 1492, 1489,
    13829, 1500,13829, 1490,13829, 1499, 1483,13829,    0, 3835,
        0, 5779,11723,11746, 5797,11771, 1807, 3509, 5839, 5861,
     5909,11841, 3395,11909,11932, 5977, 4623, 5994, 6038, 5138,
     4052, 6107, 6177, 6246,11957, 4053,    0, 4125,    0, 4185,
        0, 6265,12025,12048, 6305,12073, 4330, 4055, 6322, 6365,

     6383, 4192,12143, 3465, 3760, 4262, 4517, 4683, 4753, 4823,
    12213, 4889, 4193, 1480, 1475, 1478, 1477, 1462, 1450, 1448,
      905, 1443,13829, 1450, 1453,13829, 1434, 1433,13829, 1439,
     1423, 1421, 1470, 1408, 1414,    0, 4539,12281,12304,12327,
    12352, 6493, 6564, 6634, 6704,12422, 1990,  454, 5709, 6001,
     6048, 6773, 6843, 6913,    0, 4329,    0,    0, 4397,12490,
    12513,12536,12561, 3529, 7052, 7167, 7306, 7446,12631, 4392,
     4959, 5032, 5103, 5238,  233, 5500, 1415, 1409, 1397, 1394,
     1377, 1373, 1377, 1374, 1003, 1391, 1371, 1350, 1353, 1362,
     1364, 1359, 1358, 1341, 1347, 1346, 1365, 1327, 1330,12699,

    12722, 7515, 4559, 7633, 7689, 7756, 1322, 6958, 7211, 7825,
     4609,    0, 7896,12745,12768, 7967,  463, 2016, 4489, 8037,
     8110, 8129,  550, 4056, 5638, 5872, 5920, 6118, 1309, 1308,
     1308, 1313, 1312, 1307, 1289,13829, 1300, 1290, 1275, 1281,
     1308, 1266, 1263, 1265, 1268, 1254, 1260, 1246, 1250,  631,
     1238, 1239,13829, 1233, 8187, 8206, 8246,    0, 4909,12791,
    12814,12837, 1234, 8340, 8410, 8474, 8544,  440, 2060, 6188,
     6504, 6575, 1230, 1230, 1215, 1227, 1211, 1207, 1198, 1203,
     1201, 1204,13829, 1197, 1198, 1189, 1235, 1182, 1179, 1178,
     1166, 1168, 1164,13829, 1173, 1155,12860,12883, 8613, 4907,

     8683, 8799, 8869, 1150, 1157, 1149, 1153, 1125, 1128, 1127,
     1132, 1116, 1116, 1115, 1126,13829, 1123, 1126, 1107, 1110,
     1109,13829, 1093, 1100, 1093, 1091, 9031, 9167, 9283, 1076,
     1080, 1084,13829,13829,13829, 1078, 1084, 1077, 1066,13829,
     1055, 1061,13829, 1102,13829, 1050, 1022, 1040, 1041,13829,
     1035, 1034, 1026, 1029,13829, 1007,13829, 1002, 1015, 1004,
     1002,  981,  972,13829,13829,  981,  982,  974,  982,  919,
      915,  886,  889,  888,13829,13829,13829,  872,  857,  846,
      851,  846,13829,13829,  848,  845,  836,13829,  843,13829,
      835,13829,13829,13829,12912,12919,12924,  865,12929,12934,

    12938,12943,12948,12953,12958,12963,12967,  864,  861,  860,
      859,12972,12976,12981,12986,12991,12998,  858,13003,  842,
    13008,13011,  841,13016,  840,13021,13026,13031,13036,13041,
      837,13046,13050,13054,13058,13062,  836,13066,13070,  835,
    13074,13079,13083,13088,13093,13098,  831,13103,13108,13113,
    13118,13123,13128,13133,13138,13145,13150,13153,  817,  815,
    13158,  814,13163,  813,  812,13168,  808,13173,13178,13183,
      796,13188,13193,13198,13203,13208,13213,13218,13222,13226,
    13230,  716,13234,13238,13242,13246,13251,13255,  714,13260,
      710,13265,  708,13270,  707,  706,13275,13280,13285,13290,

    13295,13300,13305,13310,  693,13315,  690,13320,  680,  666,
    13325,13328,  663,13333,13338,  662,13343,13348,13353,13358,
    13363,13368,13372,13376,13380,13385,  661,13389,13392,  646,
    13397,  644,13402,13407,13412,13417,13422,  640,  639,  637,
    13427,13432,13437,13442,13447,13452,13457,13462,13467,13472,
    13477,  623,  622,13482,  604,13487,  593,13492,  588,13497,
    13502,13507,13512,13517,13522,13526,13530,13534,13539,13543,
      574,13548,  568,  567,13553,  542,13558,13563,13568,  541,
    13573,13578,13583,13588,13593,  526,13598,13603,13608,13613,
    13618,13623,13628,  522,  505,13633,  492,  491,13638,13643,

    13648,13653,13658,13663,13667,13671,13676,13680,  471,  454,
    13685,13688,  448,13693,13698,  425,13703,13708,13713,13718,
    13723,13728,13733,13738,13743,  402,13748,  278,13753,13758,
    13763,13768,13773,13778,13782,13787,13791,  246,13796,  151,
    13801,   10,13806,13811,13816,    9,    8,13821,    7,    6,
        5,    3
    } ;

static const flex_int16_t yy_def[1353] =
    {   0,
     1095, 1095, 1094,    3, 1096, 1096, 1096,    7, 1096, 1096,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1097, 1098,
     1099, 1097, 1097, 1097, 1097, 1100, 1094, 1101, 1101,   29,
       29,   29,   29,   29,   29, 1102, 1103, 1104, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1097, 1098, 1105,
     1106, 1107,   27, 1108, 1099, 1109, 1094, 1097, 1097, 1097,
     1097, 1097, 1110, 1100, 1106, 1106, 1094,   74,   27, 1111,
       79,   79,   79,   79, 1112, 1113, 1114, 1115,   29, 1116,
       29,   29,   29,   29,   29,   29,   29,   29,   29, 1102,

       29, 1116,  100, 1103,   29, 1116,  104, 1104,   29, 1116,
      108, 1117, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1105, 1118, 1119, 1119, 1120, 1121, 1122, 1123, 1124, 1125,
     1126, 1124, 1124, 1124, 1124, 1127, 1094, 1128, 1129, 1130,
     1130, 1130, 1130, 1131, 1132, 1133, 1133, 1134, 1135, 1132,
     1132, 1136, 1137, 1136, 1136, 1136, 1136, 1138, 1139, 1140,
     1141, 1141, 1141, 1141, 1142, 1136, 1136, 1142, 1143, 1141,
     1143, 1144, 1141, 1136, 1144, 1145, 1141, 1136, 1145, 1146,

     1147, 1148, 1149, 1094, 1150, 1150,  206,  206,  206,  206,
      206,  206,  206, 1151, 1152, 1153, 1154, 1155, 1146,  219,
      219, 1151, 1151,  219, 1152,  219, 1156, 1156, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1157, 1158, 1159,
     1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1168,
     1168, 1168, 1169, 1168, 1168, 1169, 1170, 1171, 1170, 1170,
     1170, 1170, 1172, 1173, 1174, 1175, 1168, 1168, 1175, 1176,
     1168, 1168, 1176, 1177, 1177, 1177, 1177, 1178, 1179, 1180,

     1180, 1179, 1181, 1180, 1180, 1181, 1180, 1182, 1183, 1183,
     1183, 1183, 1184, 1183, 1184, 1185, 1183, 1185, 1186, 1186,
     1186, 1186, 1183, 1187, 1183, 1183, 1183, 1188, 1188, 1189,
     1190, 1094, 1191, 1192, 1193, 1094, 1194, 1190, 1195,  332,
      340, 1196,  340,  340,  340,  340, 1197, 1197, 1198, 1199,
     1200, 1200,  352,  352,  352,  352,  352, 1201, 1188, 1201,
      360,  360,  360, 1202, 1203, 1188, 1188, 1188,  360, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,

     1094, 1094, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211,
     1212, 1213, 1214, 1214, 1214, 1214, 1214, 1215, 1214, 1214,
     1216, 1217, 1217, 1217, 1217, 1218, 1217, 1217, 1218, 1219,
     1217, 1217, 1219, 1220, 1217, 1217, 1220, 1214, 1221, 1221,
     1221, 1221, 1222, 1223, 1223, 1224, 1224, 1224, 1224, 1225,
     1225, 1225, 1225, 1226, 1224, 1227, 1228, 1229, 1230, 1231,
     1232, 1233, 1231, 1231, 1231, 1231, 1234, 1094, 1235, 1236,
     1237, 1237, 1238, 1239, 1240, 1241, 1241,  477,  477, 1242,
      477,  481, 1242, 1243,  481,  481, 1243, 1244,  481,  477,
     1244, 1245, 1245, 1246,  493,  493, 1247, 1248, 1247, 1248,

      500,  499,  499, 1249,  500,  500, 1249, 1250,  500,  500,
     1250,  500, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259,
     1260, 1260, 1260, 1260, 1261, 1260, 1262, 1262, 1262, 1262,
     1262, 1263, 1262, 1262, 1262, 1264, 1264, 1264, 1264, 1265,
     1266, 1267, 1267, 1267, 1267, 1268, 1268, 1268, 1268, 1269,
     1267, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1277,
     1277, 1277, 1278, 1277, 1277, 1278, 1279, 1280, 1279, 1279,

     1279, 1279, 1281, 1282, 1283, 1284, 1277, 1277, 1284, 1285,
     1277, 1277, 1285, 1286, 1287, 1287,  616,  616,  616, 1288,
      616,  616,  616, 1289, 1289, 1290, 1290, 1290,  625, 1291,
     1292, 1292, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1293,
     1294, 1295, 1296, 1297, 1298, 1299, 1299, 1299, 1299, 1300,
     1299, 1301, 1301, 1301, 1301, 1302, 1301, 1303, 1303, 1303,
     1303, 1304, 1305, 1305, 1305, 1305, 1306, 1306, 1306, 1306,
     1307, 1305, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1314,

     1314, 1314, 1314, 1315, 1314, 1314, 1316, 1317, 1317, 1317,
     1317, 1318, 1317, 1317, 1318, 1319, 1317, 1317, 1319, 1320,
     1317, 1317, 1320, 1314, 1321, 1321,  726,  726, 1322,  726,
     1323, 1324, 1323, 1325, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1326, 1327,
     1328, 1329, 1329, 1329, 1329, 1330, 1329, 1331, 1331, 1331,
     1331, 1332, 1331, 1333, 1333, 1333, 1334, 1334, 1334, 1334,
     1335, 1335, 1335, 1335, 1336, 1337, 1338, 1339, 1340, 1341,
     1342, 1314, 1314, 1314, 1314, 1343, 1314, 1344, 1344, 1344,

     1344, 1344, 1345, 1344, 1344, 1344,  726,  726,  726,  726,
     1322,  726, 1324, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1346, 1329, 1329, 1329, 1329,
     1330, 1331, 1331, 1331, 1331, 1332, 1331, 1334, 1334, 1334,
     1334, 1335, 1335, 1335, 1347, 1348, 1349, 1350, 1314, 1314,
     1314, 1314, 1343, 1314, 1344, 1344, 1344, 1344, 1345, 1344,
      726,  726,  726,  726,  811,  726, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1329,

     1329, 1329, 1331, 1331, 1331, 1331,  846, 1334, 1334, 1334,
     1348, 1351, 1314, 1314, 1314, 1314,  863, 1314, 1344, 1344,
     1344, 1344,  869, 1344,  726,  726,  726,  726,  811, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1331, 1331, 1331, 1352, 1314, 1314,
     1314, 1314,  863, 1344, 1344, 1344, 1344,  869, 1344,  726,
      726,  726, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1314, 1314, 1314, 1344,

     1344, 1344, 1344,  869, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1344, 1344, 1344, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,    0, 1094, 1094, 1094, 1094, 1094, 1094,

     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,

     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,

     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094
    } ;

static const flex_int16_t yy_nxt[13904] =
    {   0,
     1094,   13,   14,   15,   13,   14,   15,  911,  173,  958,
      790,  788,  786,  760,  858,  181,   75,  182,  182,  182,
      182,  182,  182,  182,   16,   76,  325,   16,   14,   17,
       14,   18,   19,   19,   20,   19,   19,   19,   19,   19,
       19,   19,   19,   19,   21,   22,   23,   24,   25,   25,
       25,   25,   26,   19,   19,   14,   27,   28,   28,   29,
       30,   28,   28,   31,   32,   28,   28,   28,   28,   28,
       33,   34,   28,   28,   35,   28,   28,   28,   19,   36,
       28,   28,   28,   28,   28,   37,   28,   36,   38,   38,
       28,   37,   28,   28,   28,   38,   28,   28,   28,   28,

       28,   19,   18,   59,   89,   66,   99,   92,   93,   94,
       89,   96,   89,   60,   97,   67,   89,   89,   89,   98,
      629,   61,   95,   39,   62,   63,   62,  120,   40,  133,
       41,   42,   43,   44,  130,   45,   46,  131,   47,   48,
       59,  123,   49,   50,   51,   52,   53,   54,   55,   68,
       60,  121,  113,  117,  126,  857,  114,  124,   61,  115,
      134,   62,   63,   59,  118,  127,  135,  116,  136,  139,
      142,  140,   68,   60,   69,   69,   69,   69,   69,   69,
       69,   61,  137,   73,   62,   63,   59,  205,   89,  138,
      206,   62,  357,   89,   89,   68,   60,   70,   70,   70,

       70,   70,   71,   72,   61,   77,   89,   62,   63,   59,
      207,   89,   89,   89,  211,  208,  209,  210,   68,   60,
       72,   72,   72,   72,   72,   72,   72,   61,   89,  223,
       62,   63,   61,   61,   73,   61,   61,   61,   61,   61,
       61,   61,   89,   75,  213,   59,  212,   89,   89,   66,
      855,   59,   76,   61,   61,   60,   77,   89,  354,  146,
       68,   60,  101,   61,  201,  245,   62,   63,  147,   61,
       62,  102,   62,   63,  202,  105,  246,  268,   61,   78,
      248,  173,  836,  173,  106,  203,  204,   78,   78,   78,
      309,  249,  317,  353,   89,   78,   89,  480,   62,  929,

      355,   61,   79,   79,   80,   79,   79,   79,   79,   79,
       79,   79,   79,   79,   60,   81,   82,   83,   84,   84,
       84,   84,   85,   79,   79,   62,   79,   79,   79,   79,
       79,   79,   79,   79,   79,   79,   79,   79,   79,   79,
       79,   79,   79,   79,   79,   79,   79,   79,   79,   86,
       79,   79,   79,   79,   79,   87,   79,   86,   88,   88,
       79,   87,   79,   79,   79,   88,   79,   79,   79,   79,
       79,   79,   58,   58,   59,   58,   58,   58,   58,   58,
      173,   58,  494,  181,   60,  183,  183,  183,  183,  183,
      184,   81,   90,   58,   58,   62,   63,   89,  374,  173,

      144,  145,  144,  375,  201,  378,  660,  144,  144,  379,
      356,  144,   89,  226,  202,   73,   73,   73,   58,  144,
      144,  144,  144,  144,   75,  203,  204,  396,  495,  597,
      397,   73,   89,  170,  166,   73,  455,   77,   77,   77,
      304,   58,   58,   58,   59,   58,   58,   58,   58,   58,
      173,   58,  587,   77,   60,  588,  326,   77,  584,  186,
      173,  167,   90,   58,   58,   62,   63,  168,  325,  167,
      169,  169,  171,  168,  171,  582,  337,  169,  325,  181,
       91,   81,   81,   81,   81,   81,   81,   81,   58,  142,
      522,  307,  496,  383,  384,  549,  547,  385,  173,  258,

      386,  523,  712,   73,  215,   89, 1004,  326,  259,  545,
       62,   58,   58,   58,   59,   58,   58,   58,   58,   58,
       89,   58,   89,  101,   60,   77,  759,  593,  150,  963,
      472,  216,  102,   58,   58,   62,   63,  217,  151,  216,
      218,  218,  201,  217,  201,  707,  698,  218,  328,   62,
      157,  219,  202,  224,  202,   73,  581,  498,   58,  103,
      220,  445,  220,  203,  204,  203,  204,  103,  103,  103,
      173,  460,  695,  170,   73,  103,  173,   77,  694,  572,
      225,   58,   58,   58,   59,   58,   58,   58,   58,   58,
       89,   58,  665,  105,   60,  502,   77,  664,   89,  221,

       73,  221,  106,   58,   58,   62,   63,  216,  662,   75,
      335,  265,  712,  217,  968,  216,  218,  218,  170,  217,
      336,  146,   77,  218,  173,  150,  405,  403,   58,  107,
      147,  337,   62,  186,  269,  151,  692,  107,  107,  107,
      173,  341,  325,  331,  614,  107,   62,  157,  586,  777,
      334,   58,   58,   58,   59,   58,   58,   58,   58,   58,
       89,   58,  173,  109,   60,  329,  277,  267,  173,   59,
      264,  314,  110,   58,   58,   62,   63,  314,  294,   60,
      325,  144,  145,  144,  262,  992,  325,   61,  144,  144,
       62,   63,  144,  993,  544,   80,  278,  543,   58,  111,

      144,  144,  144,  144,  144,   60,  151,  111,  111,  111,
      475,  474,  459,  325,  200,  111,   62,   62,  456,  326,
      172,   58,  149,  149,  150,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  151,  152,  153,  154,  155,  155,
      155,  155,  156,  149,  149,   62,  157,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  149,
      149,  149,  149,  149,  149,  149,  149,  149,  149,  156,
      149,  149,  149,  149,  149,  158,  149,  156,  159,  159,
      149,  158,  149,  149,  149,  159,  149,  149,  149,  149,
      149,  149,   59,  727,  727,  727,  727,  727,  728,  615,

      421,  201,   60,  160,  161,  162,  163,  163,  163,  163,
       61,  202,  412,   62,   63,   59,  149,  409,  408,  144,
       73,  141,  203,  204,   68,   60,   72,   72,   72,   72,
       72,   72,   72,   61,  328,  333,   62,   63,   59,   79,
      308,   61,   77,  498,  266,   65,  261,   68,   60,   72,
       72,   72,   72,   72,   72,   72,   61,  278,  221,   62,
       63,   59,  260,  180,  164,  148,  422,  151,   58,   64,
       68,   60,   72,   72,   72,   72,   72,   72,   62,   61,
      571,  502,   62,   63,   61,   61,   73,   61,   61,   61,
       61,   61,   61,   61,  328,   61, 1093, 1092, 1091, 1090,

     1089,  201, 1088,  498,  165,   61,   61,  201,   77, 1087,
      219,  202, 1086,  144,  145,  144,  224,  202, 1085,  220,
      144,  144,  203,  204,  144,  220, 1084,  406,  203,  204,
       61,   78,  144,  144,  144,  144,  144,  258,  884,   78,
       78,   78, 1083,  630,  885,  886,  259,   78,   62,  887,
     1082,  888, 1081,   61,  172,  172,  173,  172,  172,  172,
      172,  172,  172,  172,  172,  172, 1080,  174,  175,  176,
      177,  177,  177,  177,   85,  172,  172, 1079,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,
      172,  172,  172,  172,  172,  172,  172,  172,  172,  172,

      172,   85,  172,  172,  172,  172,  172,  178,  172,   85,
      179,  179,  172,  178,  172,  172,  172,  179,  172,  172,
      172,  172,  172,  172,   79,   79,   79,   79,   79,   79,
       79,  172,  173,   73, 1078, 1077, 1076, 1075, 1074, 1073,
      263,  309,  300,  310,  310,  310,  310,  310,  310,  310,
      146,  170,  265, 1072,  938,   77, 1071,  939,   79,  407,
     1070,   62,  146, 1069,   79,  940,   79,   79,   79, 1068,
       79,  147,  173,   62,   79,  172,  172,  173,  172,  172,
      172,  172,  172,  172,  172, 1067,  186, 1066, 1065,  173,
      324, 1064, 1063, 1062, 1061,  187,  172,  172,  309,  172,

      311,  311,  311,  311,  311,  312,  174,  476, 1060,  477,
      477,  477,  477,  477,  477,  477, 1059,   85,  268, 1058,
     1057,  172,  188,  178, 1056,   85,  179,  179,  410,  178,
      188,  188,  188,  179, 1055, 1054, 1053,  411,  188,   62,
     1052, 1051, 1050, 1049,  172,   79,   79,   80,   79,   79,
       79,   79,   79,   79,   79, 1048,  190,   60, 1047, 1046,
      329,  173, 1045, 1044, 1043,  187,   79,   79,   62,   79,
      309, 1042,  174,  174,  174,  174,  174,  174,  174, 1041,
     1040, 1039, 1038, 1037,  598, 1036, 1035,  328,  150, 1034,
     1033,   79,  191,  328,  462,  328,  328,  328,  151,  366,

      191,  191,  191,  328, 1032,  337,  419, 1031,  191,   62,
      157, 1030,  712, 1026,   79,   79,   79,   80,   79,   79,
       79,   79,   79,   79,   79, 1025,  193,   60, 1024, 1023,
       80, 1022, 1021, 1020, 1019,  194,   79,   79,   62,   79,
       60,  319,  320,  321,  322,  322,  322,  322,  172, 1018,
     1017,   62, 1016, 1015,  150, 1014,   80, 1013,  150, 1012,
     1011,   79,  195,  291,  151,  450,   60,  551,  151, 1010,
      195,  195,  195, 1009,  172,   62,  157,   62,  195,   62,
      157, 1008, 1007, 1006,   79,   79,   79,   80,   79,   79,
       79,   79,   79,   79,   79, 1005,  197,   60,  593,  996,

      995,   80,  994,  991,  990,  198,   79,   79,   62,   79,
      181,   60,   81,   81,   81,   81,   81,   81,  989,  172,
      988,  987,   62,  986,  335,  404,  985,  984,  278,   80,
      983,   79,  199,  982,  457,  258,  981,  435,  151,   60,
      199,  199,  199,  458,  542,  337,   62,  324,  199,   62,
       62,  980,  979,  978,   79,   58,   58,   59,   58,   58,
       58,   58,   58,   89,   58,  977,   89,   60,  976,  975,
      974,  278,  973,  480,   86,  214,   58,   58,   62,   63,
       87,  151,   86,   88,   88,  150,   87,  278,  426,  563,
       88,  954,   62,  953,  274,  151,  672,  151,  952,   80,

      951,   58,  103,  419,  950,  949,   62,  157,   62,   60,
      103,  103,  103,  948,  947,  946,  945,   85,  103,  944,
       62,  943,  942,  941,   58,   58,   58,   59,   58,   58,
       58,   58,   58,   89,   58,  937,   89,   60,  936,  935,
      329,  461,  420,  934,   86,  222,   58,   58,   62,   63,
       87,  462,   86,   88,   88,  933,   87,  814,  932,  815,
       88,  931,  337,  468,  150,  816,  930,  328,  899,  898,
      817,   58,  107,  328,  151,  328,  328,  328,  367,  328,
      107,  107,  107,  328,  897,   62,  157,  896,  107,  895,
      894,  893,  892,  891,   58,   58,   58,   59,   58,   58,

       58,   58,   58,   89,   58,   73,   89,   60,  890,  889,
      883,  882,  150,  881,  300,  110,   58,   58,   62,   63,
      556,  287,  151,  170,  329,  330,  329,   77,  880,  879,
      419,  329,  329,   62,  157,  331,  878,  877,  406,  278,
      835,   58,  111,  329,  329,  329,  331,  332,  258,  151,
      111,  111,  111,  834,  833,  832,  831,  259,  111,   62,
       62,  830,  171,  829,   58,  150,  828,  827,  826,  420,
      825,  824,  823,  546,  269,  151,  270,  270,  270,  270,
      270,  270,  270,  146,  822,  821,   62,  157,  150,  820,
      819,  818,  407,  340,   62,  677,  550,  269,  151,  271,

      271,  271,  271,  271,  272,  152,  410,  789,  150,   62,
      157,  150,  173,  758,  757,  411,  756,   62,  151,  755,
      269,  151,  152,  152,  152,  152,  152,  152,  152,   62,
      157,  754,   62,  157,  149,  149,  150,  149,  149,  149,
      149,  149,  149,  149,  753,  274,  151,  752,  751,  750,
      749,  150,  748,  747,  275,  149,  149,   62,  157,  746,
      274,  151,  745,  331,  339,  331,  671,  744,  743,  419,
      331,  331,   62,  157,  331,  742,  741,  740,  150,  739,
      149,  276,  331,  331,  331,  331,  331,  287,  151,  276,
      276,  276,  738,  737,  736,  735,  419,  276,  733,   62,

      157,  659,  658,  149,  277,  277,  278,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  151,  279,  280,  281,
      282,  282,  282,  282,  283,  277,  277,   62,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  277,  277,  277,  277,  277,  277,  277,  277,  277,
      277,  283,  277,  277,  277,  277,  277,  284,  277,  283,
      285,  285,  277,  284,  277,  277,  277,  285,  277,  277,
      277,  277,  277,  277,  149,  149,  150,  149,  149,  149,
      149,  149,  149,  149,  657,  287,  151,  656,  655,  368,
      150,  654,  653,  652,  288,  149,  149,   62,  157,  651,

      151,  413,  414,  415,  416,  416,  416,  416,  650,  649,
      648,   62,  157,  150,  647,  646,  328,  585,  645,  644,
      149,  289,  328,  151,  328,  328,  328,  457,  328,  289,
      289,  289,  328,  643,   62,  157,  458,  289,  337,  642,
      641,   73,  640,  149,  149,  149,  150,  149,  149,  149,
      149,  149,  149,  149,  639,  291,  151,  638,  637,  167,
      150,  636,  635,   77,  292,  149,  149,   62,  157,  269,
      151,  152,  152,  152,  152,  152,  152,  634,  633,  369,
       89,   62,  157,  347,  340,  583,  167,  150,  548,  541,
      149,  293,  168,  540,  167,  169,  169,  151,  168,  293,

      293,  293,  169,  539,  173,  538,  537,  293,   62,  157,
      536,  535,  461,  149,   59,  446,  447,  448,  449,  449,
      449,  449,  462,  294,   60,  295,  295,  295,  295,  295,
      295,  295,   61,  337,  468,   62,   63,   59,  534,  533,
      532,  531,  530,  529,  420,  528,  294,   60,  296,  296,
      296,  296,  296,  297,  160,   61,  527,  526,   62,   63,
       59,  615,  615,  615,  615,  615,  615,  615,  797,  294,
       60,  160,  160,  160,  160,  160,  160,  160,   61,  525,
      173,   62,   63,   61,   61,   73,   61,   61,   61,   61,
       61,   61,   61,  524,   75,  521,  278,  520,   85,  278,

      519,  518,  517,   76,   61,   61,  151,   77,  422,  151,
      423,  423,  423,  423,  423,  423,  423,   62,  516,  515,
       62,  514,  461,  513,  503,   85,  661,   89,   89,   61,
       78,  178,  462,   85,  179,  179,  258,  178,   78,   78,
       78,  179,  298,  337,  468,  542,   78,   62,  476,  404,
      402,  401,   61,   61,   61,   73,   61,   61,   61,   61,
       61,   61,   61,  400,   75,  399,  598,  398,  395,  278,
      394,  393,  392,   76,   61,   61,  462,   77,  422,  151,
      424,  424,  424,  424,  424,  425,  279,  337,  391,  476,
       62,  478,  478,  478,  478,  478,  479,  343,  390,   61,

       78,  389,  388,  387,  382,  381,  380,  377,   78,   78,
       78,  376,  373,  372,  371,  370,   78,  228,  369,   89,
       89,  173,   61,   61,   61,   73,   61,   61,   61,   61,
       61,   61,   61,  263,  300,  257,  256,  255,  254,  278,
      253,  252,  251,  301,   61,   61,  250,   77,  422,  151,
      279,  279,  279,  279,  279,  279,  279,  247,  244,  476,
       62,  343,  343,  343,  343,  343,  343,  343,  243,   61,
      302,  242,  241,  240,  239,  238,  237,  236,  302,  302,
      302,  235,  234,  233,  232,  231,  302,  230,  229,  228,
      109,   89,   61,   61,   61,   73,   61,   61,   61,   61,

       61,   61,   61,  181,  304,   56,  132,  173,  129,  128,
      125,  122,  119,  305,   61,   61,  309,   77,  174,  174,
      174,  174,  174,  174,  174,  278,  546,  112,   57,   56,
       57,   56,  461, 1094,  427,  151,  146, 1094, 1094,   61,
      306,  589,  462,  563, 1094,  407,   62,   62,  306,  306,
      306, 1094, 1094,  337,  468, 1094,  306, 1094, 1094, 1094,
     1094, 1094,   61,  172,  172,  173,  172,  172,  172,  172,
      172,  172,  172, 1094,  314, 1094, 1094,  173, 1094, 1094,
     1094, 1094,  564,  194,  172,  172,  309,  172,  174,  174,
      174,  174,  174,  174,  174,  278,  548, 1094, 1094, 1094,

     1094, 1094,  550, 1094,  431,  151,  410, 1094, 1094,  172,
      315, 1094,  410,  563, 1094,  663,   62,   62,  315,  315,
      315,  411, 1094,   62, 1094, 1094,  315, 1094, 1094, 1094,
     1094, 1094,  172,  172,  172,  173,  172,  172,  172,  172,
      172,  172,  172, 1094,  317, 1094, 1094,  173, 1094, 1094,
     1094, 1094,  564,  198,  172,  172,  309,  172,  174,  174,
      174,  174,  174,  174,  329,  330,  329, 1094, 1094, 1094,
     1094,  329,  329, 1094, 1094,  331, 1094, 1094, 1094,  172,
      318, 1094, 1094,  329,  329,  329,  331,  332,  318,  318,
      318, 1094, 1094,  173, 1094, 1094,  318, 1094, 1094, 1094,

     1094,  278,  172,   80,  683,  684,  685,  686,  686,  686,
      686,  151,  181,   60,   81,   81,   81,   81,   81,   81,
       81,  172,   62,  598,   62,   80, 1094, 1094, 1094, 1094,
     1094, 1094,  708,  462,  181,   60,   81,   81,   81,   81,
       81,   81,   81,  172,  337, 1094,   62,  172,  172,  173,
      172,  172,  172,  172,  172,  172,  172, 1094,  172,  773,
     1094, 1094, 1094, 1094,   59, 1094, 1094,  323,  172,  172,
      278,  172, 1094,  566,   60, 1094,  329,  330,  329,  427,
      151, 1094,   61,  329,  329,   62,   63,  331,  563, 1094,
      583,   62, 1094,  172,  188,  329,  329,  329,  331,  332,

      457, 1094,  188,  188,  188, 1094, 1094, 1094, 1094,  693,
      188,  337, 1094, 1094, 1094, 1094,  172,  172,  172,  173,
      172,  172,  172,  172,  172,  172,  172,  489,  186,  340,
      340,  340,  340,  340,  340,  340, 1094,  187,  172,  172,
      278,  172, 1094, 1094, 1094, 1094,  331,  339,  331, 1094,
      151, 1094, 1094,  331,  331, 1094, 1094,  331, 1094, 1094,
      585,   62, 1094,  172,  188,  331,  331,  331,  331,  331,
      457, 1094,  188,  188,  188, 1094, 1094, 1094, 1094,  458,
      188,  337, 1094, 1094, 1094, 1094,  172,   79,   79,   80,
       79,   79,   79,   79,   79,   79,   79,  564,   79,   60,

      142, 1094, 1094, 1094, 1094, 1094, 1094,  323,   79,   79,
       62,   79,  626,  627,  628, 1094,  472,  473,  472, 1094,
     1094,   62, 1094,  472,  472, 1094, 1094,  472, 1094, 1094,
     1094,  278, 1094,   79,  191,  472,  472,  472,  472,  472,
      431,  151,  191,  191,  191, 1094, 1094, 1094, 1094,  563,
      191, 1094,   62, 1094, 1094, 1094,   79,   79,   79,   80,
       79,   79,   79,   79,   79,   79,   79, 1094,  190,   60,
     1094, 1094, 1094, 1094,   80, 1094, 1094,  187,   79,   79,
       62,   79, 1094,  687,   60, 1094,  331,  339,  331, 1094,
     1094, 1094,  172,  331,  331,   62, 1094,  331, 1094, 1094,

      588,  150, 1094,   79,  191,  331,  331,  331,  331,  331,
      696,  151,  191,  191,  191, 1094, 1094, 1094, 1094,  697,
      191,  337,   62,  157, 1094, 1094,   79,   79,   79,   80,
       79,   79,   79,   79,   79,   79,   79, 1094,   79,   60,
     1094, 1094,  278, 1094, 1094, 1094, 1094,  327,   79,   79,
       62,   79,  151,  557,  558,  559,  560,  560,  560,  560,
     1094,  767, 1094,   62, 1094, 1094,  598,  461, 1094, 1094,
      461, 1094, 1094,   79,  195,  721,  462,  462, 1094,  611,
      462, 1094,  195,  195,  195,  705, 1094,  337,  337,  468,
      195,  337,  468, 1094, 1094, 1094,   79,   79,   79,   80,

       79,   79,   79,   79,   79,   79,   79, 1094,  193,   60,
     1094, 1094,  621,  278, 1094, 1094, 1094,  194,   79,   79,
       62,   79,  422,  151,  279,  279,  279,  279,  279,  279,
      279, 1094, 1094, 1094,   62, 1094, 1094, 1094, 1094,  340,
      142, 1094, 1094,   79,  195,  340, 1094,  340,  340,  340,
      258,  340,  195,  195,  195,  340, 1094, 1094, 1094,  259,
      195,   62, 1094, 1094, 1094, 1094,   79,   79,   79,   80,
       79,   79,   79,   79,   79,   79,   79, 1094,   79,   60,
     1094, 1094,  368,  278, 1094, 1094, 1094,  198,   79,   79,
       62,   79,  422,  151,  279,  279,  279,  279,  279,  279,

      279, 1094, 1094, 1094,   62, 1094, 1094, 1094, 1094,  328,
      142, 1094, 1094,   79,  199,  328, 1094,  328,  328,  328,
      258,  328,  199,  199,  199,  328, 1094, 1094, 1094,  259,
      199,   62, 1094, 1094, 1094, 1094,   79,   79,   79,   80,
       79,   79,   79,   79,   79,   79,   79, 1094,  197,   60,
     1094, 1094, 1094,  278, 1094, 1094, 1094,  198,   79,   79,
       62,   79,  422,  151,  279,  279,  279,  279,  279,  279,
     1094, 1094, 1094,  481,   62,  340,  340,  340,  340,  340,
      340,  340,  621,   79,  199, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  199,  199,  199, 1094, 1094, 1094, 1094, 1094,

      199, 1094, 1094, 1094, 1094, 1094,   79,  340,  341,  342,
      341,  340,  340,  340,  340,  341,  341,  340,  340,  331,
      343,  344,  345,  346,  346,  346,  346,  347,  341,  341,
      331,  341,  340,  340,  340,  340,  340,  340,  340,  340,
      340,  340,  340,  340,  340,  340,  340,  340,  340,  340,
      340,  340,  340,  340,  348,  340,  340,  340,  340,  340,
      349,  340,  348,  350,  350,  340,  349,  340,  340,  340,
      350,  340,  340,  340,  340,  340,  340,   58,   58,   59,
       58,   58,   58,   58,   58, 1094,   58, 1094, 1094,   60,
     1094, 1094, 1094,  173, 1094, 1094, 1094,   90,   58,   58,

       62,   63,  572, 1094,  573,  573,  573,  573,  573,  573,
      573, 1094, 1094,  173,  351, 1094, 1094, 1094, 1094, 1094,
     1094,   80,  572,   58,  574,  574,  574,  574,  574,  575,
      446,   60,  576,  577,  578,  579,  579,  579,  579,  172,
     1094, 1094,   62, 1094, 1094,  278,   58,   58,   58,   59,
       58,   58,   58,   58,   58,  151,   58, 1094, 1094,   60,
     1094, 1094, 1094,  562, 1094, 1094,   62,   90,   58,   58,
       62,   63,  173, 1094, 1094, 1094,  352, 1094, 1094, 1094,
     1094,  572, 1094,  446,  446,  446,  446,  446,  446,  446,
      283,  278, 1094,   58,  142, 1094,  284, 1094,  283,  285,

      285,  151,  284,  732,  258, 1094,  285, 1094, 1094,  283,
     1094, 1094,   62,  259, 1094,   62,   58,  200,  200,  201,
      200,  200,  200,  200,  200,  200,  200, 1094,  219,  202,
     1094, 1094, 1094,   59, 1094, 1094,  283,  359,  200,  200,
      203,  204,  284,   60,  283,  285,  285,  461,  284,  461,
     1094,  170,  285, 1094,   62,   63,  594,  462,  607,  462,
     1094, 1094, 1094,  200,  360,  705, 1094,  705,  337,  468,
      337,  468,  360,  360,  360, 1094,  361, 1094, 1094, 1094,
      360, 1094, 1094, 1094, 1094, 1094,  200,   58,   58,   59,
       58,   58,   58,   58,   58,   89,   58, 1094,  101,   60,

     1094, 1094, 1094,   80,  706, 1094,  706,  102,   58,   58,
       62,   63,  450,   60,  319,  319,  319,  319,  319,  319,
     1094,  172, 1094,  340,   62,  340,  340,  340,  340,  340,
      340,  340, 1094,   58,  103, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  103,  103,  103, 1094, 1094, 1094, 1094, 1094,
      103, 1094, 1094, 1094, 1094, 1094,   58,   58,   58,   59,
       58,   58,   58,   58,   58,   89,   58, 1094,  105,   60,
     1094,  622, 1094, 1094,  150, 1094, 1094,  106,   58,   58,
       62,   63, 1094,  762,  151, 1094,  472,  473,  472, 1094,
     1094, 1094, 1094,  472,  472,   62,  157,  472, 1094, 1094,

      661,  278, 1094,   58,  107,  472,  472,  472,  472,  472,
      258,  151,  107,  107,  107, 1094, 1094, 1094, 1094,  542,
      107,   62,   62, 1094, 1094, 1094,   58,   58,   58,   59,
       58,   58,   58,   58,   58,   89,   58, 1094,  109,   60,
     1094, 1094, 1094, 1094,  461, 1094, 1094,  110,   58,   58,
       62,   63, 1094,  792,  462, 1094,  472,  473,  472, 1094,
     1094,  847, 1094,  472,  472,  337,  468,  472, 1094, 1094,
      761,  598, 1094,   58,  111,  472,  472,  472,  472,  472,
      410,  462,  111,  111,  111,  481, 1094, 1094, 1094,  663,
      111,   62,  337,  787,  621, 1094,   58,  329,  330,  329,

     1094, 1094,  485,  457,  329,  329, 1094, 1094,  331, 1094,
     1094,  621,  693,  791,  337,  278,  362,  329,  329,  331,
      332,  340, 1094,  696,  842,  151, 1094,  340,  805,  340,
      340,  340,  697,  622,  337,  461,   62,  340,  340, 1094,
     1094, 1094, 1094,  363,  340,  462,  340,  340,  340,  364,
      622,  363,  365,  365,  340,  364,  337,  468, 1094,  365,
      200,  200,  201,  200,  200,  200,  200,  200,  200,  200,
     1094,  219,  202, 1094, 1094, 1094,  500,  150, 1094, 1094,
      359,  200,  200,  203,  204,  368, 1094,  151,  666,  667,
      668,  669,  669,  669,  669,  918, 1094, 1094,   62,  157,

     1094, 1094, 1094, 1094,  461, 1094,  200,  360, 1094, 1094,
     1094, 1094,  328, 1094,  462,  360,  360,  360,  328, 1094,
      328,  328,  328,  360,  366,  337,  468, 1094,  328,  200,
      150, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  598,  269,
      151,  152,  152,  152,  152,  152,  152,  152,  462, 1094,
     1094,   62,  157,  150, 1094, 1094,  804, 1094, 1094,  337,
     1094,  706,  269,  151,  152,  152,  152,  152,  152,  152,
      152, 1094, 1094, 1094,   62,  157,  149,  149,  150,  149,
      149,  149,  149,  149,  149,  149, 1094,  149,  151, 1094,
     1094, 1094,  505, 1094, 1094,  173,  417,  149,  149,   62,

      157,  368, 1094, 1094,  572,  509,  446,  446,  446,  446,
      446,  446,  446,  340,  329,  340,  340,  340,  340,  340,
      340,  340,  149,  276, 1094, 1094, 1094, 1094,  328, 1094,
     1094,  276,  276,  276,  328, 1094,  328,  328,  328,  276,
      366,  328,  329, 1094,  328,  149,  150,  328, 1094,  328,
      328,  328,  461,  328, 1094, 1094,  151,  328, 1094, 1094,
      730,  594,  462, 1094,  418, 1094,  598,   62,  157,  328,
      705, 1094, 1094,  337,  468,  328,  462,  328,  328,  328,
     1094,  328, 1094,  142,  632,  328, 1094,  337, 1094, 1094,
     1094,  156, 1094,  258, 1094,  813, 1094,  158, 1094,  156,

      159,  159,  259,  158,   62, 1094, 1094,  159,  149,  149,
      150,  149,  149,  149,  149,  149,  149,  149, 1094,  274,
      151, 1094,  870, 1094,  150, 1094, 1094, 1094,  275,  149,
      149,   62,  157,  551,  151,  413,  413,  413,  413,  413,
      413,  761, 1094, 1094, 1094,   62,  157, 1094,  461, 1094,
     1094,  410, 1094, 1094,  149,  276, 1094,  607,  462, 1094,
      663, 1094,   62,  276,  276,  276,  705, 1094, 1094,  337,
      468,  276, 1094, 1094, 1094, 1094, 1094,  149,  277,  277,
      278,  277,  277,  277,  277,  277,  277,  277, 1094,  427,
      151, 1094, 1094, 1094,  278, 1094, 1094, 1094,  428,  277,

      277,   62,  277,  672,  151,  673,  673,  673,  673,  673,
      673,  673, 1094, 1094,  485,   62,  340,  340,  340,  340,
      340,  340,  340,  621,  277,  429, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  429,  429,  429, 1094, 1094, 1094, 1094,
     1094,  429, 1094, 1094, 1094, 1094, 1094,  277,  277,  277,
      278,  277,  277,  277,  277,  277,  277,  277, 1094,  431,
      151, 1094, 1094, 1094,  278, 1094, 1094, 1094,  432,  277,
      277,   62,  277,  672,  151,  674,  674,  674,  674,  674,
      675,  557, 1094, 1094,  340,   62,  340,  340,  340,  340,
      340,  340,  340, 1094,  277,  433, 1094, 1094, 1094, 1094,

     1094, 1094, 1094,  433,  433,  433, 1094, 1094, 1094, 1094,
     1094,  433, 1094, 1094, 1094, 1094, 1094,  277,  277,  277,
      278,  277,  277,  277,  277,  277,  277,  277, 1094,  435,
      151, 1094, 1094,  812,  278, 1094, 1094, 1094,  436,  277,
      277,   62,  277,  672,  151,  557,  557,  557,  557,  557,
      557,  557, 1094, 1094, 1094,   62, 1094, 1094,   80,  787,
     1094,  598,  598, 1094,  277,  437, 1094, 1094,   60,  457,
      865,  462,  462,  437,  437,  437,  325, 1094,  693,   62,
      337,  437,  337,  337, 1094, 1094, 1094,  277,  149,  149,
      150,  149,  149,  149,  149,  149,  149,  149, 1094,  149,

      151, 1094, 1094, 1094,  173, 1094, 1094, 1094,  438,  149,
      149,   62,  157,  572,  173,  446,  446,  446,  446,  446,
      446,  446,  969,  572, 1094,  446,  446,  446,  446,  446,
      446,  789, 1094, 1094,  149,  289, 1094, 1094, 1094, 1094,
     1094,  696, 1094,  289,  289,  289, 1094, 1094, 1094, 1094,
      856,  289,  337, 1094, 1094, 1094, 1094,  149,  149,  149,
      150,  149,  149,  149,  149,  149,  149,  149, 1094,  287,
      151, 1094, 1094,  461, 1094, 1094, 1094, 1094,  288,  149,
      149,   62,  157,  462,  699,  700,  701,  702,  702,  702,
      702,  791, 1094, 1094,  337,  468, 1094, 1094,  598,  142,

     1094,  696, 1094, 1094,  149,  289, 1094,  713,  462,  258,
      697, 1094,  337,  289,  289,  289,  804, 1094,  259,  337,
       62,  289, 1094, 1094, 1094, 1094, 1094,  149,  149,  149,
      150,  149,  149,  149,  149,  149,  149,  149, 1094,  149,
      151, 1094, 1094, 1094,  461, 1094, 1094, 1094,  292,  149,
      149,   62,  157,  589,  462,  463,  463,  463,  463,  463,
      463,  598, 1094, 1094, 1094,  337,  468, 1094,  598, 1094,
      713,  462, 1094, 1094,  149,  293, 1094,  717,  462,  804,
     1094, 1094,  337,  293,  293,  293,  804, 1094, 1094,  337,
      598,  293, 1094, 1094, 1094, 1094, 1094,  149,  150,  708,

      462,  709,  709,  709,  709,  709,  709,  709,  151, 1094,
     1094,  337,  598, 1094, 1094, 1094,  156, 1094,  805,   62,
      157,  708,  462,  710,  710,  710,  710,  710,  711,  599,
     1094, 1094, 1094,  337, 1094,  912,  461, 1094, 1094, 1094,
     1094, 1094, 1094,  156, 1094,  696,  462, 1094, 1094,  158,
     1094,  156,  159,  159,  856,  158,  337,  337,  468,  159,
      149,  149,  150,  149,  149,  149,  149,  149,  149,  149,
     1094,  291,  151, 1094, 1094, 1094,  598, 1094, 1094, 1094,
      292,  149,  149,   62,  157,  708,  462,  599,  599,  599,
      599,  599,  599,  599,  864, 1094, 1094,  337,  598, 1094,

      598, 1094, 1094,  461, 1094, 1094,  149,  293,  462,  717,
      462, 1094,  913,  462, 1094,  293,  293,  293,  804,  337,
     1094,  337,  173,  293,  337,  468, 1094, 1094, 1094,  149,
       59,  777, 1094,  778,  778,  778,  778,  778,  778,  778,
       60,  439,  440,  441,  442,  442,  442,  442,   61, 1094,
     1094,   62,   63,   59, 1094, 1094,  924,  805, 1094, 1094,
     1094, 1094,  294,   60,  160,  160,  160,  160,  160,  160,
      160,   61, 1094, 1094,   62,   63,   59, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,  294,   60,  160,  160,  160,
      160,  160,  160,  160,   61,  598, 1094,   62,   63,   59,

     1094, 1094, 1094, 1094,  964,  462, 1094, 1094,  294,   60,
      160,  160,  160,  160,  160,  160,  337,   61, 1094, 1094,
       62,   63,   61,   61,   73,   61,   61,   61,   61,   61,
       61,   61,  871,   61,  340,  340,  340,  340,  340,  340,
      340, 1094,  165,   61,   61,  150,   77, 1094, 1094, 1094,
     1094,  329,  330,  329, 1094,  151, 1094, 1094,  329,  329,
     1094, 1094,  331,  419, 1094,  278,   62,  157,   61,   78,
      329,  329,  329,  331,  332,  151, 1094,   78,   78,   78,
      443, 1094, 1094,  563, 1094,   78,   62, 1094, 1094, 1094,
     1094,   61,   61,   61,   73,   61,   61,   61,   61,   61,

       61,   61, 1094,   61, 1094, 1094, 1094,  278, 1094, 1094,
     1094, 1094,  444,   61,   61,  912,   77,  151,  768,  769,
      770,  771,  771,  771,  771,  696, 1094, 1094,   62,  173,
     1094, 1094, 1094, 1094,  856, 1094,  337, 1094,   61,  302,
      848,  849,  850,  851,  851,  851,  851,  302,  302,  302,
     1094, 1094, 1094, 1094, 1094,  302, 1094, 1094, 1094, 1094,
     1094,   61,   61,   61,   73,   61,   61,   61,   61,   61,
       61,   61, 1094,  300, 1094, 1094, 1094, 1094,  278, 1094,
     1094, 1094,  301,   61,   61, 1094,   77,  672,  151,  557,
      557,  557,  557,  557,  557,  557, 1094, 1094,  871,   62,

      872,  872,  872,  872,  872,  872,  872, 1094,   61,  302,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  302,  302,  302,
     1094, 1094, 1094, 1094, 1094,  302, 1094, 1094, 1094, 1094,
     1094,   61,   61,   61,   73,   61,   61,   61,   61,   61,
       61,   61, 1094,   61, 1094, 1094, 1094, 1094,  278, 1094,
     1094, 1094,  305,   61,   61, 1094,   77,  672,  151,  557,
      557,  557,  557,  557,  557,  557, 1094, 1094,  871,   62,
      873,  873,  873,  873,  873,  874,  807, 1094,   61,  306,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  306,  306,  306,
     1094, 1094, 1094, 1094, 1094,  306, 1094, 1094, 1094, 1094,

     1094,   61,   61,   61,   73,   61,   61,   61,   61,   61,
       61,   61, 1094,  304, 1094, 1094, 1094, 1094,  278, 1094,
     1094, 1094,  305,   61,   61, 1094,   77,  672,  151,  557,
      557,  557,  557,  557,  557, 1094, 1094, 1094,  871,   62,
      807,  807,  807,  807,  807,  807,  807, 1094,   61,  306,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  306,  306,  306,
     1094, 1094, 1094, 1094, 1094,  306, 1094, 1094, 1094, 1094,
     1094,   61,  172,  172,  173,  172,  172,  172,  172,  172,
      172,  172, 1094,  172, 1094, 1094,  173, 1094, 1094, 1094,
     1094, 1094,  327,  172,  172,  777,  172,  779,  779,  779,

      779,  779,  780,  683,  340, 1094,  340,  340,  340,  340,
      340,  340,  340,  598, 1094,  461, 1094, 1094,  172,  315,
     1094, 1094, 1094,  462, 1094,  462, 1094,  315,  315,  315,
     1094,  804, 1094,  705,  337,  315,  337,  468, 1094, 1094,
     1094,  172,  172,  172,  173,  172,  172,  172,  172,  172,
      172,  172, 1094,  314, 1094,  876,  173, 1094, 1094, 1094,
     1094, 1094,  194,  172,  172,  777,  172,  683,  683,  683,
      683,  683,  683,  683,  340, 1094,  925,  926,  927,  928,
      928,  928,  928, 1094, 1094, 1094, 1094, 1094,  172,  315,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  315,  315,  315,

     1094, 1094, 1094, 1094, 1094,  315, 1094, 1094, 1094, 1094,
     1094,  172,  172,  172,  173,  172,  172,  172,  172,  172,
      172,  172, 1094,  172, 1094, 1094, 1094,   80, 1094, 1094,
     1094, 1094,  198,  172,  172, 1094,  172,   60,  781,  782,
      783,  784,  784,  784,  784,  172, 1094,  871,   62,  807,
      807,  807,  807,  807,  807,  807, 1094, 1094,  172,  318,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  318,  318,  318,
     1094, 1094, 1094, 1094, 1094,  318, 1094, 1094, 1094, 1094,
     1094,  172,  172,  172,  173,  172,  172,  172,  172,  172,
      172,  172, 1094,  317, 1094, 1094, 1094, 1094,   80, 1094,

     1094, 1094,  198,  172,  172, 1094,  172,  687,   60,  576,
      576,  576,  576,  576,  576, 1094,  172, 1094,  871,   62,
      807,  807,  807,  807,  807,  807,  807, 1094,  172,  318,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  318,  318,  318,
     1094, 1094, 1094, 1094,  173,  318, 1094, 1094, 1094, 1094,
     1094,  172,   80,  777, 1094,  683,  683,  683,  683,  683,
      683,  450,   60,  451,  451,  451,  451,  451,  451,  451,
      172, 1094, 1094,   62,   80, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  450,   60,  452,  452,  452,  452,  452,
      453,  319,  172, 1094, 1094,   62,   80, 1094, 1094, 1094,

     1094, 1094, 1094, 1094, 1094,  450,   60,  319,  319,  319,
      319,  319,  319,  319,  172, 1094, 1094,   62,  172,  172,
      173,  172,  172,  172,  172,  172,  172,  172, 1094,  186,
     1094, 1094, 1094,  598, 1094, 1094, 1094, 1094,  187,  172,
      172, 1094,  172,  462,  798,  799,  800,  801,  801,  801,
      801, 1094, 1094,  871,  337,  807,  807,  807,  807,  807,
      807,  340, 1094, 1094,  172,  188, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  188,  188,  188, 1094,  454, 1094, 1094,
     1094,  188, 1094, 1094, 1094, 1094, 1094,  172,  340,  341,
      342,  341,  340,  340,  340,  340,  341,  341,  340,  340,

      331,  343,  344,  345,  346,  346,  346,  346,  347,  341,
      341,  331,  341,  340,  340,  340,  340,  340,  340,  340,
      340,  340,  340,  340,  340,  340,  340,  340,  340,  340,
      340,  340,  340,  340,  340,  348,  340,  340,  340,  340,
      340,  349,  340,  348,  350,  350,  340,  349,  340,  340,
      340,  350,  340,  340,  340,  340,  340,  340,  460,  460,
      461,  460,  460,  460,  460,  460,  460,  460,  460,  460,
      462,  463,  464,  465,  466,  466,  466,  466,  467,  460,
      460,  337,  468,  460,  460,  460,  460,  460,  460,  460,
      460,  460,  460,  460,  460,  460,  460,  460,  460,  460,

      460,  460,  460,  460,  460,  467,  460,  460,  460,  460,
      460,  469,  460,  467,  470,  470,  460,  469,  460,  460,
      460,  470,  460,  460,  460,  460,  460,  460,  340,  340,
      340,  340,  340,  340,  340,  341,  598, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,  708,  462,  599,  599,  599,
      599,  599,  599,  599, 1094, 1094, 1094,  337, 1094, 1094,
     1094, 1094,  340, 1094, 1094, 1094, 1094, 1094,  340, 1094,
      340,  340,  340, 1094,  340, 1094, 1094, 1094,  340,  340,
      341,  342,  341,  340,  340,  340,  340,  341,  341, 1094,
      481,  331, 1094, 1094, 1094,  598, 1094, 1094, 1094,  482,

      341,  341,  331,  341,  708,  462,  599,  599,  599,  599,
      599,  599,  599, 1094, 1094,  340,  337,  340,  340,  340,
      340,  340,  340,  340, 1094,  340,  483, 1094, 1094, 1094,
     1094, 1094, 1094, 1094,  483,  483,  483, 1094, 1094, 1094,
     1094, 1094,  483, 1094, 1094, 1094, 1094, 1094,  340,  340,
      341,  342,  341,  340,  340,  340,  340,  341,  341, 1094,
      481,  331, 1094, 1094, 1094,  598, 1094, 1094, 1094,  482,
      341,  341,  331,  341,  708,  462,  599,  599,  599,  599,
      599,  599, 1094, 1094, 1094, 1094,  337, 1094, 1094, 1094,
     1094, 1094, 1094,  598, 1094,  340,  483, 1094, 1094, 1094,

     1094, 1094, 1094,  462,  483,  483,  483, 1094, 1094, 1094,
     1094,  803,  483, 1094,  337, 1094, 1094, 1094,  340,  340,
      341,  342,  341,  340,  340,  340,  340,  341,  341, 1094,
      485,  331, 1094, 1094, 1094, 1094, 1094, 1094,  603,  486,
      341,  341,  331,  341,  604, 1094,  603,  605,  605, 1094,
      604, 1094, 1094,  340,  605,  340,  340,  340,  340,  340,
      340,  340,  621,  598, 1094,  340,  487, 1094, 1094, 1094,
     1094, 1094, 1094,  462,  487,  487,  487, 1094, 1094, 1094,
     1094,  603,  487, 1094,  337, 1094, 1094, 1094,  340,  340,
      341,  342,  341,  340,  340,  340,  340,  341,  341, 1094,

      489,  331, 1094, 1094, 1094, 1094, 1094, 1094,  603,  490,
      341,  341,  331,  341,  604,  173,  603,  605,  605, 1094,
      604, 1094, 1094, 1094,  605, 1094,  908,  908,  908,  908,
      908,  908,  908,  325, 1094,  340,  491, 1094, 1094, 1094,
     1094, 1094, 1094, 1094,  491,  491,  491, 1094, 1094, 1094,
     1094, 1094,  491, 1094, 1094, 1094, 1094, 1094,  340,   58,
       58,   59,   58,   58,   58,   58,   58, 1094,   58, 1094,
     1094,   60, 1094, 1094, 1094, 1094, 1094, 1094, 1094,   90,
       58,   58,   62,   63, 1094,  150, 1094, 1094,  492, 1094,
     1094, 1094, 1094, 1094, 1094,  151,  837,  838,  839,  840,

      840,  840,  840,  150, 1094,   58,   62,  157, 1094, 1094,
     1094, 1094,  762,  151,  666,  666,  666,  666,  666,  666,
     1094, 1094, 1094, 1094,   62,  157, 1094, 1094,   58,   58,
       58,   59,   58,   58,   58,   58,   58, 1094,   58, 1094,
     1094,   60, 1094, 1094, 1094,  278, 1094, 1094, 1094,   90,
       58,   58,   62,   63,  842,  151,  843,  843,  843,  843,
      843,  843,  843, 1094, 1094, 1094,   62,  278, 1094, 1094,
     1094,  493, 1094, 1094, 1094,   58,  842,  151,  844,  844,
      844,  844,  844,  845,  768, 1094, 1094,  340,   62,  970,
      970,  970,  970,  970,  970,  970,  621, 1094,   58,  328,

      329,  330,  329,  328,  328,  328,  328,  329,  329, 1094,
      328,  331, 1094, 1094, 1094,  278, 1094, 1094, 1094,  498,
      329,  329,  331,  332,  842,  151,  768,  768,  768,  768,
      768,  768,  768, 1094, 1094,  340,   62,  971,  971,  971,
      971,  971,  972,  925,  621,  328,  499, 1094, 1094, 1094,
     1094, 1094, 1094, 1094,  499,  499,  499, 1094, 1094, 1094,
     1094, 1094,  499, 1094, 1094, 1094, 1094, 1094,  328,  329,
      330,  329, 1094, 1094, 1094, 1094,  329,  329, 1094,  500,
      331, 1094, 1094,   59, 1094, 1094, 1094, 1094,  368,  329,
      329,  331,  332,   60,  678,  678,  678,  678,  678,  678,

      173,  170, 1094, 1094,   62,   63, 1094,  173, 1094,  777,
     1094,  683,  683,  683,  683,  683,  683,  683,  909,  909,
      909,  909,  909,  910,  848,  325, 1094,  366,  328,  329,
      330,  329,  328,  328,  328,  328,  329,  329, 1094,  500,
      331, 1094, 1094, 1094,  173, 1094, 1094, 1094,  501,  329,
      329,  331,  332,  777,  173,  683,  683,  683,  683,  683,
      683,  683, 1094, 1094, 1094,  848,  848,  848,  848,  848,
      848,  848,  325, 1094,  328,  499, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  499,  499,  499, 1094, 1094, 1094, 1094,
     1094,  499, 1094, 1094, 1094, 1094, 1094,  328,  328,  329,

      330,  329,  328,  328,  328,  328,  329,  329, 1094,  505,
      331, 1094, 1094,   80, 1094, 1094, 1094, 1094,  506,  329,
      329,  331,  332,   60,  852,  852,  852,  852,  852,  852,
      852,  325, 1094,  340,   62,  925,  925,  925,  925,  925,
      925,  925,  621, 1094,  328,  507, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  507,  507,  507, 1094, 1094, 1094, 1094,
     1094,  507, 1094, 1094, 1094, 1094, 1094,  328,  328,  329,
      330,  329,  328,  328,  328,  328,  329,  329, 1094,  509,
      331, 1094, 1094,   80, 1094, 1094, 1094, 1094,  510,  329,
      329,  331,  332,   60,  853,  853,  853,  853,  853,  854,

      781,  325, 1094,  340,   62,  925,  925,  925,  925,  925,
      925,  925,  621, 1094,  328,  511, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  511,  511,  511, 1094, 1094, 1094, 1094,
     1094,  511, 1094, 1094, 1094, 1094, 1094,  328,  329,  330,
      329, 1094, 1094, 1094, 1094,  329,  329, 1094, 1094,  331,
     1094, 1094,   80, 1094, 1094, 1094, 1094,  329,  329,  329,
      331,  332,   60,  781,  781,  781,  781,  781,  781,  781,
      325,  461, 1094,   62, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  462,  859,  860,  861,  862,  862,  862,  862, 1094,
     1094, 1094,  337,  468, 1094,  367,  329,  330,  329, 1094,

     1094, 1094, 1094,  329,  329, 1094, 1094,  331, 1094, 1094,
     1094,  461, 1094, 1094, 1094,  329,  329,  329,  331,  332,
      792,  462,  699,  699,  699,  699,  699,  699,  598, 1094,
     1094, 1094,  337,  468, 1094, 1094, 1094,  865,  462,  866,
      866,  866,  866,  866,  866,  866, 1094, 1094, 1094,  337,
     1094, 1094, 1094, 1094, 1094,  512,  329,  330,  329, 1094,
     1094, 1094, 1094,  329,  329, 1094, 1094,  331, 1094, 1094,
     1094,  598, 1094, 1094, 1094,  329,  329,  329,  331,  332,
      865,  462,  867,  867,  867,  867,  867,  868,  798,  598,
     1094, 1094,  337, 1094, 1094, 1094, 1094, 1094,  865,  462,

      798,  798,  798,  798,  798,  798,  798, 1094, 1094, 1094,
      337, 1094, 1094, 1094,  366,  150, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094,  551,  151,  552,  552,  552,  552,
      552,  552,  552, 1094, 1094, 1094,   62,  157,  150, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  551,  151,  553,
      553,  553,  553,  553,  554,  413, 1094, 1094, 1094,   62,
      157,  150, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      551,  151,  413,  413,  413,  413,  413,  413,  413, 1094,
     1094, 1094,   62,  157,  149,  149,  150,  149,  149,  149,
      149,  149,  149,  149, 1094,  274,  151, 1094, 1094,  278,

     1094, 1094, 1094, 1094,  275,  149,  149,   62,  157,  151,
      903,  904,  905,  906,  906,  906,  906, 1094, 1094,  340,
       62,  925,  925,  925,  925,  925,  925,  925,  621, 1094,
      149,  276, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  276,
      276,  276, 1094,  555, 1094, 1094, 1094,  276, 1094, 1094,
     1094, 1094, 1094,  149,  277,  277,  278,  277,  277,  277,
      277,  277,  277,  277, 1094,  277,  151, 1094, 1094, 1094,
      278, 1094, 1094, 1094,  561,  277,  277,   62,  277,  842,
      151,  768,  768,  768,  768,  768,  768,  768, 1094, 1094,
      340,   62,  925,  925,  925,  925,  925,  925,  340,  621,

      277,  429, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  429,
      429,  429, 1094, 1094, 1094, 1094, 1094,  429, 1094, 1094,
     1094, 1094, 1094,  277,  277,  277,  278,  277,  277,  277,
      277,  277,  277,  277, 1094,  427,  151, 1094, 1094, 1094,
      278, 1094, 1094, 1094,  428,  277,  277,   62,  277,  842,
      151,  768,  768,  768,  768,  768,  768,  768, 1094, 1094,
     1094,   62, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      277,  429, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  429,
      429,  429, 1094, 1094, 1094, 1094, 1094,  429, 1094, 1094,
     1094, 1094, 1094,  277,  277,  277,  278,  277,  277,  277,

      277,  277,  277,  277, 1094,  277,  151, 1094, 1094, 1094,
      278, 1094, 1094, 1094,  565,  277,  277,   62,  277,  842,
      151,  768,  768,  768,  768,  768,  768, 1094, 1094, 1094,
     1094,   62, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      277,  433, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  433,
      433,  433, 1094, 1094, 1094, 1094, 1094,  433, 1094, 1094,
     1094, 1094, 1094,  277,  277,  277,  278,  277,  277,  277,
      277,  277,  277,  277, 1094,  431,  151, 1094, 1094,   80,
     1094, 1094, 1094, 1094,  432,  277,  277,   62,  277,   60,
      781,  781,  781,  781,  781,  781,  781,  325, 1094, 1094,

       62, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      277,  433, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  433,
      433,  433, 1094, 1094, 1094, 1094, 1094,  433, 1094, 1094,
     1094, 1094, 1094,  277,  277,  277,  278,  277,  277,  277,
      277,  277,  277,  277, 1094,  277,  151, 1094, 1094,   80,
     1094, 1094, 1094, 1094,  436,  277,  277,   62,  277,   60,
      781,  781,  781,  781,  781,  781,  781,  325, 1094, 1094,
       62, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      277,  437, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  437,
      437,  437, 1094, 1094, 1094, 1094, 1094,  437, 1094, 1094,

     1094, 1094, 1094,  277,  277,  277,  278,  277,  277,  277,
      277,  277,  277,  277, 1094,  435,  151, 1094, 1094,   80,
     1094, 1094, 1094, 1094,  436,  277,  277,   62,  277,   60,
      781,  781,  781,  781,  781,  781, 1094,  325, 1094, 1094,
       62, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      277,  437, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  437,
      437,  437, 1094, 1094,  173, 1094, 1094,  437, 1094, 1094,
     1094, 1094, 1094,  277,   59,  848,  848,  848,  848,  848,
      848,  848,  325,  566,   60,  567,  567,  567,  567,  567,
      567,  567,   61, 1094, 1094,   62,   63,   59, 1094, 1094,

     1094, 1094, 1094, 1094, 1094, 1094,  566,   60,  568,  568,
      568,  568,  568,  569,  439,   61, 1094, 1094,   62,   63,
       59, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  566,
       60,  439,  439,  439,  439,  439,  439,  439,   61, 1094,
     1094,   62,   63,   61,   61,   73,   61,   61,   61,   61,
       61,   61,   61, 1094,   61, 1094, 1094, 1094,  598, 1094,
     1094, 1094, 1094,  165,   61,   61, 1094,   77,  462,  919,
      920,  921,  922,  922,  922,  922, 1094, 1094, 1094,  337,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,   61,
       78, 1094, 1094, 1094, 1094, 1094, 1094, 1094,   78,   78,

       78, 1094, 1094,  570, 1094, 1094,   78, 1094, 1094, 1094,
     1094, 1094,   61,   80, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  450,   60,  319,  319,  319,  319,  319,  319,
      319,  172, 1094, 1094,   62,   80, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094,  450,   60,  319,  319,  319,  319,
      319,  319,  319,  172, 1094, 1094,   62,  172,  172,  173,
      172,  172,  172,  172,  172,  172,  172, 1094,  172, 1094,
     1094, 1094, 1094,  598, 1094, 1094, 1094,  323,  172,  172,
     1094,  172,  865,  462,  798,  798,  798,  798,  798,  798,
      798, 1094, 1094, 1094,  337, 1094, 1094, 1094, 1094, 1094,

     1094, 1094, 1094,  172,  188, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  188,  188,  188,  580, 1094,  173, 1094, 1094,
      188, 1094, 1094, 1094, 1094, 1094,  172,  461,  848,  848,
      848,  848,  848,  848,  848,  325,  589,  462,  590,  590,
      590,  590,  590,  590,  590, 1094, 1094, 1094,  337,  468,
      461, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  589,
      462,  591,  591,  591,  591,  591,  592,  463, 1094, 1094,
     1094,  337,  468,  461, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  589,  462,  463,  463,  463,  463,  463,  463,
      463, 1094, 1094, 1094,  337,  468,  460,  460,  461,  460,

      460,  460,  460,  460,  460,  460, 1094,  594,  462, 1094,
     1094, 1094,  598, 1094, 1094, 1094,  595,  460,  460,  337,
      468,  865,  462,  798,  798,  798,  798,  798,  798,  798,
     1094, 1094, 1094,  337, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  460,  596, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  596,  596,  596, 1094, 1094, 1094, 1094, 1094,  596,
     1094, 1094, 1094, 1094, 1094,  460,  597,  597,  598,  597,
      597,  597,  597,  597,  597,  597,  597,  597,  462,  599,
      600,  601,  602,  602,  602,  602,  603,  597,  597,  337,
      597,  597,  597,  597,  597,  597,  597,  597,  597,  597,

      597,  597,  597,  597,  597,  597,  597,  597,  597,  597,
      597,  597,  597,  603,  597,  597,  597,  597,  597,  604,
      597,  603,  605,  605,  597,  604,  597,  597,  597,  605,
      597,  597,  597,  597,  597,  597,  460,  460,  461,  460,
      460,  460,  460,  460,  460,  460, 1094,  607,  462, 1094,
     1094, 1094,  598, 1094, 1094, 1094,  608,  460,  460,  337,
      468,  865,  462,  798,  798,  798,  798,  798,  798, 1094,
     1094, 1094, 1094,  337, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  460,  609, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  609,  609,  609, 1094, 1094, 1094, 1094, 1094,  609,

     1094, 1094, 1094, 1094, 1094,  460,  460,  460,  461,  460,
      460,  460,  460,  460,  460,  460, 1094,  611,  462, 1094,
     1094,  150, 1094, 1094, 1094, 1094,  612,  460,  460,  337,
      468,  151,  837,  837,  837,  837,  837,  837, 1094,  419,
     1094, 1094,   62,  157, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  460,  613, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  613,  613,  613, 1094, 1094, 1094, 1094, 1094,  613,
     1094, 1094, 1094, 1094, 1094,  460,  341,  342,  341, 1094,
     1094, 1094, 1094,  341,  341, 1094, 1094,  331,  615,  616,
      617,  618,  618,  618,  618,  341,  341,  341,  331,  341,

      341,  342,  341, 1094, 1094, 1094, 1094,  341,  341, 1094,
      476,  331,  343,  343,  343,  343,  343,  343,  343,  341,
      341,  341,  331,  341,  340,  341,  342,  341,  340,  340,
      340,  340,  341,  341, 1094,  340,  331, 1094, 1094,  278,
     1094, 1094, 1094, 1094,  619,  341,  341,  331,  341,  151,
      955,  955,  955,  955,  955,  955,  955,  563, 1094, 1094,
       62, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      340,  483, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  483,
      483,  483, 1094, 1094, 1094, 1094, 1094,  483, 1094, 1094,
     1094, 1094, 1094,  340,  340,  278,  340,  340,  340,  340,

      340,  340,  340,  620, 1094,  151,  956,  956,  956,  956,
      956,  957,  903,  563, 1094, 1094,   62, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      348, 1094, 1094, 1094, 1094, 1094,  349, 1094,  348,  350,
      350, 1094,  349, 1094, 1094, 1094,  350,  340,  341,  342,
      341,  340,  340,  340,  340,  341,  341, 1094,  481,  331,
     1094, 1094,  278, 1094, 1094, 1094, 1094,  482,  341,  341,
      331,  341,  151,  903,  903,  903,  903,  903,  903,  903,
      563, 1094, 1094,   62, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  340,  483, 1094, 1094, 1094, 1094, 1094,

     1094, 1094,  483,  483,  483, 1094, 1094, 1094, 1094, 1094,
      483, 1094, 1094, 1094, 1094, 1094,  340,  340,  341,  342,
      341,  340,  340,  340,  340,  341,  341, 1094,  340,  331,
     1094,  173, 1094, 1094, 1094, 1094, 1094,  623,  341,  341,
      331,  341,  848,  848,  848,  848,  848,  848, 1094,  325,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  340,  487, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  487,  487,  487, 1094, 1094, 1094, 1094, 1094,
      487, 1094, 1094, 1094, 1094, 1094,  340,  340,  341,  342,
      341,  340,  340,  340,  340,  341,  341, 1094,  485,  331,

     1094, 1094,  461, 1094, 1094, 1094, 1094,  486,  341,  341,
      331,  341,  462,  959,  960,  961,  962,  962,  962,  962,
     1094, 1094, 1094,  337,  468, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  340,  487, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  487,  487,  487, 1094, 1094, 1094, 1094, 1094,
      487, 1094, 1094, 1094, 1094, 1094,  340,  340,  341,  342,
      341,  340,  340,  340,  340,  341,  341, 1094,  340,  331,
     1094, 1094, 1094,  461, 1094, 1094, 1094,  490,  341,  341,
      331,  341,  913,  462,  859,  859,  859,  859,  859,  859,
     1094, 1094, 1094, 1094,  337,  468, 1094, 1094, 1094, 1094,

     1094, 1094, 1094,  340,  491, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  491,  491,  491, 1094, 1094, 1094, 1094, 1094,
      491, 1094, 1094, 1094, 1094, 1094,  340,  340,  341,  342,
      341,  340,  340,  340,  340,  341,  341, 1094,  489,  331,
     1094, 1094, 1094,  598, 1094, 1094, 1094,  490,  341,  341,
      331,  341,  964,  462,  965,  965,  965,  965,  965,  965,
      965, 1094, 1094, 1094,  337, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  340,  491, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  491,  491,  491, 1094, 1094, 1094, 1094, 1094,
      491, 1094, 1094, 1094, 1094, 1094,  340,   58,   58,   59,

       58,   58,   58,   58,   58, 1094,   58, 1094, 1094,   60,
     1094, 1094, 1094, 1094, 1094, 1094,  598,   90,   58,   58,
       62,   63, 1094, 1094,  624,  964,  462,  966,  966,  966,
      966,  966,  967,  919, 1094,  598, 1094,  337, 1094, 1094,
     1094, 1094, 1094,   58,  964,  462,  919,  919,  919,  919,
      919,  919,  919, 1094, 1094, 1094,  337, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,   58,   58,   58,   59,
       58,   58,   58,   58,   58, 1094,   58, 1094, 1094,   60,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,   90,   58,   58,
       62,   63, 1094,  278, 1094, 1094,  625, 1094, 1094, 1094,

     1094, 1094, 1094,  151,  903,  903,  903,  903,  903,  903,
      903,  563,  278,   58,   62, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  151,  903,  903,  903,  903,  903,  903,  903,
      563, 1094, 1094,   62, 1094, 1094,   58,  328,  329,  330,
      329,  328,  328,  328,  328,  329,  329, 1094,  328,  331,
     1094, 1094,  278, 1094, 1094, 1094, 1094,  498,  329,  329,
      331,  332,  151,  903,  903,  903,  903,  903,  903, 1094,
      563, 1094, 1094,   62, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  328,  499, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  499,  499,  499, 1094, 1094, 1094, 1094, 1094,

      499, 1094, 1094, 1094, 1094, 1094,  328,  329,  330,  329,
     1094, 1094, 1094, 1094,  329,  329, 1094,  500,  331, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  368,  329,  329,  331,
      332,  328,  329,  330,  329,  328,  328,  328,  328,  329,
      329, 1094,  500,  331, 1094, 1094,  598, 1094, 1094, 1094,
     1094,  501,  329,  329,  331,  332,  462, 1000, 1001, 1002,
     1003, 1003, 1003, 1003, 1094, 1094, 1094,  337, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  328,  499, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  499,  499,  499, 1094,
     1094, 1094, 1094, 1094,  499, 1094, 1094, 1094, 1094, 1094,

      328,  329,  330,  329, 1094, 1094, 1094, 1094,  329,  329,
     1094, 1094,  331, 1094, 1094, 1094,  598, 1094, 1094, 1094,
      362,  329,  329,  331,  332,  964,  462,  919,  919,  919,
      919,  919,  919,  919, 1094, 1094, 1094,  337, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  363, 1094, 1094,
     1094, 1094, 1094,  364, 1094,  363,  365,  365, 1094,  364,
     1094, 1094, 1094,  365,  328,  329,  330,  329,  328,  328,
      328,  328,  329,  329, 1094,  328,  331, 1094, 1094, 1094,
      598, 1094, 1094, 1094,  631,  329,  329,  331,  332,  964,
      462,  919,  919,  919,  919,  919,  919,  919, 1094, 1094,

     1094,  337, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      328,  507, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  507,
      507,  507, 1094, 1094, 1094, 1094, 1094,  507, 1094, 1094,
     1094, 1094, 1094,  328,  328,  329,  330,  329,  328,  328,
      328,  328,  329,  329, 1094,  505,  331, 1094, 1094, 1094,
      598, 1094, 1094, 1094,  506,  329,  329,  331,  332,  964,
      462,  919,  919,  919,  919,  919,  919, 1094, 1094, 1094,
     1094,  337, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      328,  507, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  507,
      507,  507, 1094, 1094, 1094, 1094, 1094,  507, 1094, 1094,

     1094, 1094, 1094,  328,  328,  329,  330,  329,  328,  328,
      328,  328,  329,  329, 1094,  328,  331, 1094, 1094,  461,
     1094, 1094, 1094, 1094,  510,  329,  329,  331,  332,  462,
      959,  959,  959,  959,  959,  959, 1094,  705, 1094, 1094,
      337,  468, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      328,  511, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  511,
      511,  511, 1094, 1094, 1094, 1094, 1094,  511, 1094, 1094,
     1094, 1094, 1094,  328,  328,  329,  330,  329,  328,  328,
      328,  328,  329,  329, 1094,  509,  331, 1094, 1094,  598,
     1094, 1094, 1094, 1094,  510,  329,  329,  331,  332,  462,

     1027, 1027, 1027, 1027, 1027, 1027, 1027,  804, 1094, 1094,
      337, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      328,  511, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  511,
      511,  511, 1094, 1094, 1094, 1094, 1094,  511, 1094, 1094,
     1094, 1094, 1094,  328,  150, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  551,  151,  413,  413,  413,  413,  413,
      413,  413, 1094, 1094, 1094,   62,  157,  150, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  551,  151,  413,  413,
      413,  413,  413,  413,  413, 1094, 1094, 1094,   62,  157,
      149,  149,  150,  149,  149,  149,  149,  149,  149,  149,

     1094,  149,  151, 1094, 1094,  598, 1094, 1094, 1094, 1094,
      417,  149,  149,   62,  157,  462, 1028, 1028, 1028, 1028,
     1028, 1029, 1000,  804, 1094, 1094,  337, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  149,  276, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,  276,  276,  276,  670, 1094,
     1094, 1094, 1094,  276, 1094, 1094, 1094, 1094, 1094,  149,
      277,  277,  278,  277,  277,  277,  277,  277,  277,  277,
     1094,  427,  151, 1094, 1094,  598, 1094, 1094, 1094, 1094,
      428,  277,  277,   62,  277,  462, 1000, 1000, 1000, 1000,
     1000, 1000, 1000,  804, 1094, 1094,  337, 1094, 1094, 1094,

     1094, 1094, 1094, 1094, 1094, 1094,  277,  429, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,  429,  429,  429, 1094,  676,
     1094, 1094, 1094,  429, 1094, 1094, 1094, 1094, 1094,  277,
       59, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
       60,  678,  679,  680,  681,  681,  681,  681,   61, 1094,
     1094,   62,   63,   59, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  566,   60,  439,  439,  439,  439,  439,  439,
      439,   61, 1094, 1094,   62,   63,   59, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,  566,   60,  439,  439,  439,
      439,  439,  439,  439,   61, 1094, 1094,   62,   63,   59,

     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  566,   60,
      439,  439,  439,  439,  439,  439, 1094,   61, 1094, 1094,
       62,   63,   61,   61,   73,   61,   61,   61,   61,   61,
       61,   61, 1094,   61, 1094, 1094, 1094,  598, 1094, 1094,
     1094, 1094,  165,   61,   61, 1094,   77,  462, 1000, 1000,
     1000, 1000, 1000, 1000, 1000,  804, 1094, 1094,  337, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,   61,   78,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,   78,   78,   78,
     1094, 1094, 1094, 1094,  682,   78, 1094, 1094, 1094, 1094,
     1094,   61,   80, 1094, 1094, 1094, 1094, 1094, 1094, 1094,

     1094,  687,   60,  688,  688,  688,  688,  688,  688,  688,
      172, 1094, 1094,   62,   80, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  687,   60,  689,  689,  689,  689,  689,
      690,  576,  172, 1094, 1094,   62,   80, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,  687,   60,  576,  576,  576,
      576,  576,  576,  576,  172, 1094, 1094,   62,  172,  172,
      173,  172,  172,  172,  172,  172,  172,  172, 1094,  172,
     1094, 1094, 1094,  598, 1094, 1094, 1094, 1094,  323,  172,
      172, 1094,  172,  462, 1000, 1000, 1000, 1000, 1000, 1000,
     1000,  804, 1094, 1094,  337, 1094, 1094, 1094, 1094, 1094,

     1094, 1094, 1094, 1094,  172,  188, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  188,  188,  188, 1094, 1094,  691, 1094,
     1094,  188, 1094, 1094, 1094, 1094, 1094,  172,  461, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  589,  462,  463,
      463,  463,  463,  463,  463,  463, 1094, 1094, 1094,  337,
      468,  461, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      589,  462,  463,  463,  463,  463,  463,  463,  463, 1094,
     1094, 1094,  337,  468,  460,  460,  461,  460,  460,  460,
      460,  460,  460,  460, 1094,  460,  462, 1094, 1094,  598,
     1094, 1094, 1094, 1094,  703,  460,  460,  337,  468,  462,

     1000, 1000, 1000, 1000, 1000, 1000, 1094,  804, 1094, 1094,
      337, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      460,  596, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  596,
      596,  596, 1094, 1094, 1094, 1094, 1094,  596, 1094, 1094,
     1094, 1094, 1094,  460,  461, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094,  462, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  704, 1094, 1094,  337,  468, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  467,
     1094, 1094, 1094, 1094, 1094,  469, 1094,  467,  470,  470,

     1094,  469, 1094, 1094, 1094,  470,  460,  460,  461,  460,
      460,  460,  460,  460,  460,  460, 1094,  594,  462, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  595,  460,  460,  337,
      468, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  460,  596, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  596,  596,  596, 1094, 1094, 1094, 1094, 1094,  596,
     1094, 1094, 1094, 1094, 1094,  460,  597,  597,  598,  597,
      597,  597,  597,  597,  597,  597, 1094,  713,  462, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  714,  597,  597,  337,

      597, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  597,  715, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  715,  715,  715, 1094, 1094, 1094, 1094, 1094,  715,
     1094, 1094, 1094, 1094, 1094,  597,  597,  597,  598,  597,
      597,  597,  597,  597,  597,  597, 1094,  717,  462, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  718,  597,  597,  337,
      597, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  597,  719, 1094, 1094, 1094, 1094, 1094, 1094,

     1094,  719,  719,  719, 1094, 1094, 1094, 1094, 1094,  719,
     1094, 1094, 1094, 1094, 1094,  597,  597,  597,  598,  597,
      597,  597,  597,  597,  597,  597, 1094,  721,  462, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  722,  597,  597,  337,
      597, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  597,  723, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  723,  723,  723, 1094, 1094, 1094, 1094, 1094,  723,
     1094, 1094, 1094, 1094, 1094,  597,  460,  460,  461,  460,
      460,  460,  460,  460,  460,  460, 1094,  460,  462, 1094,

     1094, 1094, 1094, 1094, 1094, 1094,  724,  460,  460,  337,
      468, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  460,  609, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  609,  609,  609, 1094, 1094, 1094, 1094, 1094,  609,
     1094, 1094, 1094, 1094, 1094,  460,  460,  460,  461,  460,
      460,  460,  460,  460,  460,  460, 1094,  607,  462, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  608,  460,  460,  337,
      468, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,

     1094, 1094,  460,  609, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  609,  609,  609, 1094, 1094, 1094, 1094, 1094,  609,
     1094, 1094, 1094, 1094, 1094,  460,  460,  460,  461,  460,
      460,  460,  460,  460,  460,  460, 1094,  460,  462, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  612,  460,  460,  337,
      468, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  460,  613, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  613,  613,  613, 1094, 1094, 1094, 1094, 1094,  613,
     1094, 1094, 1094, 1094, 1094,  460,  461, 1094, 1094, 1094,

     1094, 1094, 1094, 1094, 1094, 1094,  462, 1094, 1094, 1094,
     1094, 1094, 1094, 1094,  467, 1094, 1094,  337,  468, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  467, 1094, 1094, 1094, 1094, 1094,  469, 1094,  467,
      470,  470, 1094,  469, 1094, 1094, 1094,  470,  460,  460,
      461,  460,  460,  460,  460,  460,  460,  460, 1094,  611,
      462, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  612,  460,
      460,  337,  468, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,

     1094, 1094, 1094, 1094,  460,  613, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  613,  613,  613, 1094, 1094, 1094, 1094,
     1094,  613, 1094, 1094, 1094, 1094, 1094,  460,  341,  342,
      341, 1094, 1094, 1094, 1094,  341,  341, 1094,  725,  331,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  341,  341,  341,
      331,  341,  341,  342,  341, 1094, 1094, 1094, 1094,  341,
      341, 1094,  725,  331,  726,  726,  726,  726,  726,  726,
      726,  341,  341,  341,  331,  341,  340,  341,  342,  341,
      340,  340,  340,  340,  341,  341, 1094,  481,  331, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  482,  341,  341,  331,

      341, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  340,  483, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  483,  483,  483, 1094,  729, 1094, 1094, 1094,  483,
     1094, 1094, 1094, 1094, 1094,  340,   58,   58,   59,   58,
       58,   58,   58,   58, 1094,   58, 1094, 1094,   60, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,   90,   58,   58,   62,
       63, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  731, 1094,
     1094, 1094,   58, 1094, 1094, 1094, 1094, 1094, 1094, 1094,

     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,   58,   58,   58,   59,   58,
       58,   58,   58,   58, 1094,   58, 1094, 1094,   60, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,   90,   58,   58,   62,
       63, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,   58, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,   58,  328,  329,  330,  329,
      328,  328,  328,  328,  329,  329, 1094,  328,  331, 1094,

     1094, 1094, 1094, 1094, 1094, 1094,  498,  329,  329,  331,
      332, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  328,  499, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  499,  499,  499, 1094, 1094, 1094, 1094,  734,  499,
     1094, 1094, 1094, 1094, 1094,  328,  329,  330,  329, 1094,
     1094, 1094, 1094,  329,  329, 1094,  505,  331, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,  368,  329,  329,  331,  332,
      150, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  762,
      151,  763,  763,  763,  763,  763,  763,  763, 1094, 1094,

     1094,   62,  157,  150, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  762,  151,  764,  764,  764,  764,  764,  765,
      666, 1094, 1094, 1094,   62,  157,  150, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,  762,  151,  666,  666,  666,
      666,  666,  666,  666, 1094, 1094, 1094,   62,  157,  149,
      149,  150,  149,  149,  149,  149,  149,  149,  149, 1094,
      149,  151, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  417,
      149,  149,   62,  157, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,  149,  276, 1094, 1094, 1094,

     1094, 1094, 1094, 1094,  276,  276,  276, 1094, 1094,  766,
     1094, 1094,  276, 1094, 1094, 1094, 1094, 1094,  149,  277,
      277,  278,  277,  277,  277,  277,  277,  277,  277, 1094,
      277,  151, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  561,
      277,  277,   62,  277, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,  277,  429, 1094, 1094, 1094,
     1094, 1094, 1094, 1094,  429,  429,  429,  772, 1094, 1094,
     1094, 1094,  429, 1094, 1094, 1094, 1094, 1094,  277,   59,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,   60,

      774,  774,  774,  774,  774,  774,  774,  170, 1094, 1094,
       62,   63,   59, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,   60,  775,  775,  775,  775,  775,  776,  678,
      170, 1094, 1094,   62,   63,   59, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,   60,  678,  678,  678,  678,
      678,  678,  678,  170, 1094, 1094,   62,   63,   61,   61,
       73,   61,   61,   61,   61,   61,   61,   61, 1094,   61,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  165,   61,
       61, 1094,   77, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,

     1094, 1094, 1094, 1094,   61,   78, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,   78,   78,   78, 1094, 1094, 1094, 1094,
     1094,   78, 1094, 1094, 1094, 1094, 1094,   61,   80, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  687,   60,  576,
      576,  576,  576,  576,  576,  576,  172, 1094, 1094,   62,
       80, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  687,
       60,  576,  576,  576,  576,  576,  576,  576,  172, 1094,
     1094,   62,  172,  172,  173,  172,  172,  172,  172,  172,
      172,  172, 1094,  172, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  323,  172,  172, 1094,  172, 1094, 1094, 1094,

     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  172,  188,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  188,  188,  188,
     1094, 1094, 1094, 1094,  785,  188, 1094, 1094, 1094, 1094,
     1094,  172,  461, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  792,  462,  793,  793,  793,  793,  793,  793,  793,
     1094, 1094, 1094,  337,  468,  461, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094,  792,  462,  794,  794,  794,  794,
      794,  795,  699, 1094, 1094, 1094,  337,  468,  461, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  792,  462,  699,

      699,  699,  699,  699,  699,  699, 1094, 1094, 1094,  337,
      468,  460,  460,  461,  460,  460,  460,  460,  460,  460,
      460, 1094,  594,  462, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  595,  460,  460,  337,  468, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  460,  596, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  596,  596,  596, 1094,
      796, 1094, 1094, 1094,  596, 1094, 1094, 1094, 1094, 1094,
      460,  597,  597,  598,  597,  597,  597,  597,  597,  597,
      597, 1094,  597,  462, 1094, 1094, 1094, 1094, 1094, 1094,

     1094,  802,  597,  597,  337,  597, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  597,  715, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  715,  715,  715, 1094,
     1094, 1094, 1094, 1094,  715, 1094, 1094, 1094, 1094, 1094,
      597,  597,  597,  598,  597,  597,  597,  597,  597,  597,
      597, 1094,  713,  462, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  714,  597,  597,  337,  597, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  597,  715, 1094,

     1094, 1094, 1094, 1094, 1094, 1094,  715,  715,  715, 1094,
     1094, 1094, 1094, 1094,  715, 1094, 1094, 1094, 1094, 1094,
      597,  597,  597,  598,  597,  597,  597,  597,  597,  597,
      597, 1094,  597,  462, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  806,  597,  597,  337,  597, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  597,  719, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  719,  719,  719, 1094,
     1094, 1094, 1094, 1094,  719, 1094, 1094, 1094, 1094, 1094,
      597,  597,  597,  598,  597,  597,  597,  597,  597,  597,

      597, 1094,  717,  462, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  718,  597,  597,  337,  597, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  597,  719, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  719,  719,  719, 1094,
     1094, 1094, 1094, 1094,  719, 1094, 1094, 1094, 1094, 1094,
      597,  597,  597,  598,  597,  597,  597,  597,  597,  597,
      597, 1094,  597,  462, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  722,  597,  597,  337,  597, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,

     1094, 1094, 1094, 1094, 1094, 1094, 1094,  597,  723, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  723,  723,  723, 1094,
     1094, 1094, 1094, 1094,  723, 1094, 1094, 1094, 1094, 1094,
      597,  597,  597,  598,  597,  597,  597,  597,  597,  597,
      597, 1094,  721,  462, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  722,  597,  597,  337,  597, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  597,  723, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  723,  723,  723, 1094,
     1094, 1094, 1094, 1094,  723, 1094, 1094, 1094, 1094, 1094,

      597,  341,  342,  341, 1094, 1094, 1094, 1094,  341,  341,
     1094, 1094,  331,  807,  808,  809,  810,  810,  810,  810,
      341,  341,  341,  331,  341,  341,  342,  341, 1094, 1094,
     1094, 1094,  341,  341, 1094,  725,  331,  615,  615,  615,
      615,  615,  615,  615,  341,  341,  341,  331,  341,  340,
      341,  342,  341,  340,  340,  340,  340,  341,  341, 1094,
      340,  331, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  619,
      341,  341,  331,  341, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,  340,  483, 1094, 1094, 1094,

     1094, 1094, 1094, 1094,  483,  483,  483,  811, 1094, 1094,
     1094, 1094,  483, 1094, 1094, 1094, 1094, 1094,  340,   58,
       58,   59,   58,   58,   58,   58,   58, 1094,   58, 1094,
     1094,   60, 1094, 1094, 1094, 1094, 1094, 1094, 1094,   90,
       58,   58,   62,   63, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,   58, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,   58,   58,
       58,   59,   58,   58,   58,   58,   58, 1094,   58, 1094,

     1094,   60, 1094, 1094, 1094, 1094, 1094, 1094, 1094,   90,
       58,   58,   62,   63, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,   58, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,   58,  328,
      329,  330,  329,  328,  328,  328,  328,  329,  329, 1094,
      328,  331, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  498,
      329,  329,  331,  332, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,

     1094, 1094, 1094, 1094, 1094,  328,  499, 1094, 1094, 1094,
     1094, 1094, 1094, 1094,  499,  499,  499, 1094, 1094, 1094,
     1094, 1094,  499, 1094, 1094, 1094, 1094, 1094,  328,  150,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  762,  151,
      666,  666,  666,  666,  666,  666,  666, 1094, 1094, 1094,
       62,  157,  150, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  762,  151,  666,  666,  666,  666,  666,  666,  666,
     1094, 1094, 1094,   62,  157,  149,  149,  150,  149,  149,
      149,  149,  149,  149,  149, 1094,  149,  151, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,  417,  149,  149,   62,  157,

     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  149,  276, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      276,  276,  276, 1094, 1094, 1094, 1094,  841,  276, 1094,
     1094, 1094, 1094, 1094,  149,  277,  277,  278,  277,  277,
      277,  277,  277,  277,  277, 1094,  277,  151, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,  561,  277,  277,   62,  277,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  277,  429, 1094, 1094, 1094, 1094, 1094, 1094, 1094,

      429,  429,  429, 1094, 1094,  846, 1094, 1094,  429, 1094,
     1094, 1094, 1094, 1094,  277,   59, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,   60,  678,  678,  678,  678,
      678,  678,  678,  170, 1094, 1094,   62,   63,   59, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,   60,  678,
      678,  678,  678,  678,  678,  678,  170, 1094, 1094,   62,
       63,  172,  172,  173,  172,  172,  172,  172,  172,  172,
      172, 1094,  172, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  323,  172,  172, 1094,  172, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,

     1094, 1094, 1094, 1094, 1094, 1094, 1094,  172,  188, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  188,  188,  188, 1094,
     1094, 1094, 1094, 1094,  188, 1094, 1094, 1094, 1094, 1094,
      172,  461, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      792,  462,  699,  699,  699,  699,  699,  699,  699, 1094,
     1094, 1094,  337,  468,  461, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  792,  462,  699,  699,  699,  699,  699,
      699,  699, 1094, 1094, 1094,  337,  468,  460,  460,  461,
      460,  460,  460,  460,  460,  460,  460, 1094,  460,  462,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  703,  460,  460,

      337,  468, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  460,  596, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  596,  596,  596,  863, 1094, 1094, 1094, 1094,
      596, 1094, 1094, 1094, 1094, 1094,  460,  597,  597,  598,
      597,  597,  597,  597,  597,  597,  597, 1094,  713,  462,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  714,  597,  597,
      337,  597, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  597,  715, 1094, 1094, 1094, 1094, 1094,

     1094, 1094,  715,  715,  715, 1094,  869, 1094, 1094, 1094,
      715, 1094, 1094, 1094, 1094, 1094,  597,  340,  341,  342,
      341,  340,  340,  340,  340,  341,  341, 1094,  340,  331,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  619,  341,  341,
      331,  341, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  340,  483, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  483,  483,  483, 1094, 1094,  875, 1094, 1094,
      483, 1094, 1094, 1094, 1094, 1094,  340,  150, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094,  151,  900,  900,

      900,  900,  900,  900,  900,  419, 1094, 1094,   62,  157,
      150, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      151,  901,  901,  901,  901,  901,  902,  837,  419, 1094,
     1094,   62,  157,  150, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  151,  837,  837,  837,  837,  837,  837,
      837,  419, 1094, 1094,   62,  157,  149,  149,  150,  149,
      149,  149,  149,  149,  149,  149, 1094,  149,  151, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  417,  149,  149,   62,
      157, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,

     1094, 1094,  149,  276, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  276,  276,  276, 1094, 1094, 1094, 1094, 1094,  276,
     1094, 1094, 1094, 1094, 1094,  149,  277,  277,  278,  277,
      277,  277,  277,  277,  277,  277, 1094,  277,  151, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  561,  277,  277,   62,
      277, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094,  277,  429, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  429,  429,  429, 1094, 1094, 1094, 1094,  907,  429,
     1094, 1094, 1094, 1094, 1094,  277,  461, 1094, 1094, 1094,

     1094, 1094, 1094, 1094, 1094,  913,  462,  914,  914,  914,
      914,  914,  914,  914, 1094, 1094, 1094,  337,  468,  461,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  913,  462,
      915,  915,  915,  915,  915,  916,  859, 1094, 1094, 1094,
      337,  468,  461, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  913,  462,  859,  859,  859,  859,  859,  859,  859,
     1094, 1094, 1094,  337,  468,  460,  460,  461,  460,  460,
      460,  460,  460,  460,  460, 1094,  460,  462, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,  703,  460,  460,  337,  468,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,

     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  460,  596, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      596,  596,  596, 1094, 1094,  917, 1094, 1094,  596, 1094,
     1094, 1094, 1094, 1094,  460,  597,  597,  598,  597,  597,
      597,  597,  597,  597,  597, 1094,  597,  462, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,  802,  597,  597,  337,  597,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094,  597,  715, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      715,  715,  715,  923, 1094, 1094, 1094, 1094,  715, 1094,

     1094, 1094, 1094, 1094,  597,  150, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094,  151,  837,  837,  837,  837,
      837,  837,  837,  419, 1094, 1094,   62,  157,  150, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  151,  837,
      837,  837,  837,  837,  837,  837,  419, 1094, 1094,   62,
      157,  461, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      913,  462,  859,  859,  859,  859,  859,  859,  859, 1094,
     1094, 1094,  337,  468,  461, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  913,  462,  859,  859,  859,  859,  859,
      859,  859, 1094, 1094, 1094,  337,  468,  461, 1094, 1094,

     1094, 1094, 1094, 1094, 1094, 1094, 1094,  462,  997,  997,
      997,  997,  997,  997,  997,  705, 1094, 1094,  337,  468,
      461, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
      462,  998,  998,  998,  998,  998,  999,  959,  705, 1094,
     1094,  337,  468,  461, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094,  462,  959,  959,  959,  959,  959,  959,
      959,  705, 1094, 1094,  337,  468,  461, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094,  462,  959,  959,  959,
      959,  959,  959,  959,  705, 1094, 1094,  337,  468,  461,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,  462,

      959,  959,  959,  959,  959,  959,  959,  705, 1094, 1094,
      337,  468,   12,   12,   12,   12,   12,   12,   12,   14,
       14,   14,   14,   14,   14,   14,   58,   58,   58,   58,
       58,   65,   65,   65, 1094,   65,   74, 1094,   74,   74,
       89,   89,   89,   89,   89,  100,  100,  100,  100,  100,
      104,  104,  104,  104,  104,  108,  108,  108,  108,  108,
      141, 1094,  141, 1094,  141,   61, 1094,   61,   61,  143,
      143,  143,  143,  143,  185, 1094,  185,  185,  189,  189,
      189,  189,  189,  192,  192,  192,  192,  192,  196,  196,
      196,  196,  196,  200,  200,  200,  200,  200,  227, 1094,

      227,  227,  227,  227,  227,  143,  143,  143,  143,  143,
      262, 1094,  262,  264,  264,  264,  264,  264,  149,  149,
      149,  149,  149,  267, 1094,  267, 1094,  267,  273,  273,
      273,  273,  273,  286,  286,  286,  286,  286,  290,  290,
      290,  290,  290,   58,   58,   58,   58,   58,   61, 1094,
       61,   61,   74, 1094,   74,   74,  299, 1094,  299,  299,
      303, 1094,  303,  303,  172, 1094,  172,  172,  313, 1094,
      313,  313,  316, 1094,  316,  316,   79,   79,   79,   79,
       79,  185, 1094,  185,  185,  189,  189,  189,  189,  189,
      192,  192,  192,  192,  192,  196,  196,  196,  196,  196,

      328,  328,  328,  328,  328,  334,  334,  334, 1094,  334,
      338,  338,  338,  338,  338,   89,   89,   89,   89,   89,
      200,  200,  200,  200,  200,  358,  358,  358,  358,  358,
      100,  100,  100,  100,  100,  104,  104,  104,  104,  104,
      108,  108,  108,  108,  108,  227, 1094,  227,  227,  227,
      227,  227,  403, 1094,  403,  405,  405,  405,  405,  405,
      262,  262,  262,  262,  262,  264,  264,  264,  264,  264,
      267,  267,  267,  267,  267,  149,  149,  149,  149,  149,
      273,  273,  273,  273,  273,  277,  277,  277,  277,  277,
      426,  426,  426,  426,  426,  430,  430,  430,  430,  430,

      434,  434,  434,  434,  434,  286,  286,  286,  286,  286,
      290,  290,  290,  290,  290,   58,   58,   58,   58,   58,
       74, 1094,   74,   74,  299, 1094,  299,  299,   61, 1094,
       61,   61,  303, 1094,  303,  303,  172, 1094,  172,  172,
      313, 1094,  313,  313,  316, 1094,  316,  316,   79,   79,
       79,   79,   79,  185, 1094,  185,  185,  328,  328,  328,
      328,  328,  338,  338,  338,  338,  338,  334,  334,  334,
      334,  334,  471,  471,  471,  471,  471,  480,  480,  480,
      480,  480,  484,  484,  484,  484,  484,  488,  488,  488,
      488,  488,   89,   89,   89,   89,   89,  497,  497,  497,

      497,  497,  504,  504,  504,  504,  504,  508,  508,  508,
      508,  508,  403,  403,  403,  403,  403,  405,  405,  405,
      405,  405,  545,  545,  545,  545,  545,  547, 1094,  547,
      549,  549,  549,  549,  549,  149,  149,  149,  149,  149,
      273,  273,  273,  273,  273,  277,  277,  277,  277,  277,
      426,  426,  426,  426,  426,  430,  430,  430,  430,  430,
      434,  434,  434,  434,  434,   58,   58,   58,   58,   58,
       74, 1094,   74,   74,   61, 1094,   61,   61,  172, 1094,
      172,  172,   79,   79,   79,   79,   79,  185, 1094,  185,
      185,  582, 1094,  582,  584,  584,  584,  584,  584,  460,

      460,  460,  460,  460,  587, 1094,  587, 1094,  587,  593,
      593,  593,  593,  593,  606,  606,  606,  606,  606,  610,
      610,  610,  610,  610,  471,  471,  471,  471,  471,  340,
      340,  340,  340,  340,  480,  480,  480,  480,  480,  484,
      484,  484,  484,  484,  488,  488,  488,  488,  488,   89,
       89,   89,   89,   89,  141, 1094,  141, 1094,  141,  497,
      497,  497,  497,  497,  328,  328,  328,  328,  328,  504,
      504,  504,  504,  504,  508,  508,  508,  508,  508,  660,
      660,  660,  660,  660,  545,  545,  545,  545,  545,  547,
      547,  547,  547,  547,  549,  549,  549,  549,  549,  149,

      149,  149,  149,  149,  273,  273,  273,  273,  273,  277,
      277,  277,  277,  277,  426,  426,  426,  426,  426,   58,
       58,   58,   58,   58,   74, 1094,   74,   74,   61, 1094,
       61,   61,  172, 1094,  172,  172,   79,   79,   79,   79,
       79,  185, 1094,  185,  185,  582,  582,  582,  582,  582,
      584,  584,  584,  584,  584,  587,  587,  587,  587,  587,
      460,  460,  460,  460,  460,  593,  593,  593,  593,  593,
      597,  597,  597,  597,  597,  712,  712,  712,  712,  712,
      716,  716,  716,  716,  716,  720,  720,  720,  720,  720,
      606,  606,  606,  606,  606,  610,  610,  610,  610,  610,

      340,  340,  340,  340,  340,  480,  480,  480,  480,  480,
       89,   89,   89,   89,   89,  141,  141,  141,  141,  141,
      497,  497,  497,  497,  497,  328,  328,  328,  328,  328,
      660,  660,  660,  660,  660,  760,  760,  760,  760,  760,
      149,  149,  149,  149,  149,  273,  273,  273,  273,  273,
      277,  277,  277,  277,  277,  426,  426,  426,  426,  426,
       58,   58,   58,   58,   58,   74, 1094,   74,   74,  172,
     1094,  172,  172,   79,   79,   79,   79,   79,  185, 1094,
      185,  185,  786,  786,  786,  786,  786,  788, 1094,  788,
      790,  790,  790,  790,  790,  460,  460,  460,  460,  460,

      593,  593,  593,  593,  593,  597,  597,  597,  597,  597,
      712,  712,  712,  712,  712,  716,  716,  716,  716,  716,
      720,  720,  720,  720,  720,  340,  340,  340,  340,  340,
      480,  480,  480,  480,  480,   89,   89,   89,   89,   89,
      141,  141,  141,  141,  141,  497,  497,  497,  497,  497,
      760,  760,  760,  760,  760,  149,  149,  149,  149,  149,
      273,  273,  273,  273,  273,  277,  277,  277,  277,  277,
      426,  426,  426,  426,  426,   58,   58,   58,   58,   58,
      172, 1094,  172,  172,   79,   79,   79,   79,   79,  185,
     1094,  185,  185,  786,  786,  786,  786,  786,  788,  788,

      788,  788,  788,  790,  790,  790,  790,  790,  593,  593,
      593,  593,  593,  597,  597,  597,  597,  597,  712,  712,
      712,  712,  712,  911,  911,  911,  911,  911,   11, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,

     1094, 1094, 1094
    } ;

static const flex_int16_t yy_chk[13904] =
    {   0,
        0,    1,    1,    1,    2,    2,    2, 1352,  314, 1351,
     1350, 1349, 1347, 1346, 1342,   82,   78,   82,   82,   82,
       82,   82,   82,   82,    1,   78,  314,    2,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,
        3,    3,    3,    3,    3,    3,    3,    3,    3,    3,

        3,    3,    7,   19,   35,   21,   35,   30,   31,   32,
       33,   33,  495,   19,   34,   21,   30,   31,   32,   34,
      495,   19,   32,    7,   19,   19,   21,   43,    7,   52,
        7,    7,    7,    7,   50,    7,    7,   50,    7,    7,
       22,   45,    7,    7,    7,    7,    7,    7,    7,   22,
       22,   43,   40,   41,   47, 1340,   40,   45,   22,   40,
       52,   22,   22,   23,   41,   47,   53,   40,   53,   55,
       60,   55,   23,   23,   23,   23,   23,   23,   23,   23,
       23,   23,   54,   61,   23,   23,   24,   91,   91,   54,
       92,   60,  213,   92,  213,   24,   24,   24,   24,   24,

       24,   24,   24,   24,   24,   61,   93,   24,   24,   25,
       93,   97,   95,   96,   97,   94,   95,   96,   25,   25,
       25,   25,   25,   25,   25,   25,   25,   25,   94,  105,
       25,   25,   26,   26,   26,   26,   26,   26,   26,   26,
       26,   26,   98,   26,   99,   58,   98,  105,  209,   65,
     1338,   72,   26,   26,   26,   58,   26,   99,  209,   65,
       72,   72,  103,   58,   90,  129,   58,   58,   65,   72,
       65,  103,   72,   72,   90,  107,  129,  151,   26,   26,
      131,  174, 1328,  198,  107,   90,   90,   26,   26,   26,
      174,  131,  198,  208,  208,   26,  210,  875,  151,  875,

      210,   26,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   27,   27,   27,   27,   27,   27,   27,   27,
       27,   27,   28,   28,   28,   28,   28,   28,   28,   28,
      326,   28,  354,   83,   28,   83,   83,   83,   83,   83,
       83,   83,   28,   28,   28,   28,   28,  211,  234,  325,

       62,   62,   62,  234,  110,  237, 1326,   62,   62,  237,
      211,   62,  354,  110,  110,   76,   75,  170,   28,   62,
       62,   62,   62,   62,   76,  110,  110,  251,  355, 1316,
      251,  305,  355,   76,   75,  171,  326,   76,   75,  170,
      305,   28,   29,   29,   29,   29,   29,   29,   29,   29,
      187,   29, 1313,  305,   29,  462,  325,  171, 1310,  187,
      848,   75,   29,   29,   29,   29,   29,   75,  187,   75,
       75,   75,   76,   75,  170, 1309,  462,   75,  848,   84,
       29,   84,   84,   84,   84,   84,   84,   84,   29,  141,
      383,  171,  357,  241,  241, 1298, 1297,  241,  455,  141,

      241,  383,  968,  307,  101,  357,  968,  187,  141, 1295,
      141,   29,   36,   36,   36,   36,   36,   36,   36,   36,
       36,   36,  101,   36,   36,  307, 1294,  917,  149,  917,
     1286,  101,   36,   36,   36,   36,   36,  101,  149,  101,
      101,  101,  102,  101,  106, 1280, 1276,  101,  361,  149,
      149,  102,  102,  106,  106,  300,  455,  361,   36,   36,
      102,  307,  106,  102,  102,  106,  106,   36,   36,   36,
      446, 1274, 1273,  300,  571,   36,  581,  300, 1271,  446,
      109,   36,   37,   37,   37,   37,   37,   37,   37,   37,
       37,   37, 1259,   37,   37,  361,  571, 1257,  109,  102,

      165,  106,   37,   37,   37,   37,   37,  109, 1255,  165,
      202,  147,  923,  109,  923,  109,  109,  109,  165,  109,
      202,  147,  165,  109,  323,  152, 1253, 1252,   37,   37,
      147,  202,  147,  323,  152,  152,  581,   37,   37,   37,
      683, 1240,  323, 1239, 1238,   37,  152,  152, 1232,  683,
     1230,   37,   38,   38,   38,   38,   38,   38,   38,   38,
       38,   38,  194,   38,   38, 1227, 1216, 1213,  327,  160,
     1210,  194,   38,   38,   38,   38,   38,  327,  160,  160,
      194,  143,  143,  143, 1209,  950,  327,  160,  143,  143,
      160,  160,  143,  950, 1207,  193,  277, 1205,   38,   38,

      143,  143,  143,  143,  143,  193,  277,   38,   38,   38,
     1196, 1195, 1193,  193, 1191,   38,  193,  277, 1189,  194,
     1182,   38,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   67,   67,   67,   67,   67,   67,   67,   67,
       67,   67,   68,  617,  617,  617,  617,  617,  617,  617,

     1171,  223,   68,   68,   68,   68,   68,   68,   68,   68,
       68,  223, 1167,   68,   68,   69, 1165, 1164, 1162, 1160,
      445, 1159,  223,  223,   69,   69,   69,   69,   69,   69,
       69,   69,   69,   69,  503, 1147,   69,   69,   70, 1140,
     1137, 1131,  445,  503, 1125, 1123, 1120,   70,   70,   70,
       70,   70,   70,   70,   70,   70,   70,  279,  223,   70,
       70,   71, 1118, 1111, 1110, 1109,  279,  279, 1108, 1098,
       71,   71,   71,   71,   71,   71,   71,   71,  279,   71,
      445,  503,   71,   71,   74,   74,   74,   74,   74,   74,
       74,   74,   74,   74,  502,   74, 1091, 1089, 1087, 1086,

     1085,  214, 1082,  502,   74,   74,   74,  222,   74, 1081,
      214,  214, 1080,  144,  144,  144,  222,  222, 1079,  214,
      144,  144,  214,  214,  144,  222, 1078,  259,  222,  222,
       74,   74,  144,  144,  144,  144,  144,  259,  821,   74,
       74,   74, 1074,  502,  821,  821,  259,   74,  259,  821,
     1073,  821, 1072,   74,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77, 1071,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77, 1070,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,

       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   77,   77,   77,   77,   77,   77,
       77,   77,   77,   77,   79,   79,   79,   79,   79,   79,
       79,   79,  175,  444, 1069, 1068, 1067, 1066, 1063, 1062,
      262,  175,  444,  175,  175,  175,  175,  175,  175,  175,
      262,  444,  264, 1061,  885,  444, 1060,  885,   79,  262,
     1059,  262,  264, 1058,   79,  885,   79,   79,   79, 1056,
       79,  264,  186,  264,   79,   85,   85,   85,   85,   85,
       85,   85,   85,   85,   85, 1054,   85, 1053, 1052,  176,
      186, 1051, 1049, 1048, 1047,   85,   85,   85,  176,   85,

      176,  176,  176,  176,  176,  176,  176,  344, 1046,  344,
      344,  344,  344,  344,  344,  344, 1044,  186,  267, 1042,
     1041,   85,   85,  186, 1039,  186,  186,  186,  267,  186,
       85,   85,   85,  186, 1038, 1037, 1036,  267,   85,  267,
     1032, 1031, 1030, 1026,   85,   86,   86,   86,   86,   86,
       86,   86,   86,   86,   86, 1025,   86,   86, 1024, 1023,
      220,  177, 1021, 1020, 1019,   86,   86,   86,   86,   86,
      177, 1018,  177,  177,  177,  177,  177,  177,  177, 1017,
     1015, 1014, 1013, 1012,  597, 1011, 1010,  220,  287, 1009,
     1008,   86,   86,  220,  597,  220,  220,  220,  287,  220,

       86,   86,   86,  220, 1007,  597,  287, 1006,   86,  287,
      287, 1005, 1004,  996,   86,   87,   87,   87,   87,   87,
       87,   87,   87,   87,   87,  995,   87,   87,  993,  992,
      181,  991,  990,  989,  988,   87,   87,   87,   87,   87,
      181,  181,  181,  181,  181,  181,  181,  181,  181,  987,
      986,  181,  985,  984,  292,  982,  319,  981,  413,  980,
      979,   87,   87,  292,  292,  319,  319,  413,  413,  978,
       87,   87,   87,  977,  319,  292,  292,  319,   87,  413,
      413,  976,  975,  974,   87,   88,   88,   88,   88,   88,
       88,   88,   88,   88,   88,  973,   88,   88,  963,  954,

      952,  184,  951,  949,  948,   88,   88,   88,   88,   88,
      184,  184,  184,  184,  184,  184,  184,  184,  947,  184,
      946,  945,  184,  944,  334,  403,  943,  942,  436,  190,
      941,   88,   88,  940,  334,  403,  939,  436,  436,  190,
       88,   88,   88,  334,  403,  334,  403,  190,   88,  436,
      190,  938,  937,  935,   88,  100,  100,  100,  100,  100,
      100,  100,  100,  100,  100,  934,  100,  100,  933,  932,
      931,  431,  930,  929,  190,  100,  100,  100,  100,  100,
      190,  431,  190,  190,  190,  275,  190,  557,  907,  431,
      190,  899,  431,  898,  275,  275,  557,  557,  897,  197,

      896,  100,  100,  275,  895,  894,  275,  275,  557,  197,
      100,  100,  100,  893,  892,  891,  890,  197,  100,  889,
      197,  888,  887,  886,  100,  104,  104,  104,  104,  104,
      104,  104,  104,  104,  104,  884,  104,  104,  883,  882,
      221,  460,  275,  881,  197,  104,  104,  104,  104,  104,
      197,  460,  197,  197,  197,  880,  197,  735,  879,  735,
      197,  878,  460,  460,  420,  735,  877,  221,  835,  834,
      735,  104,  104,  221,  420,  221,  221,  221,  221,  221,
      104,  104,  104,  221,  833,  420,  420,  832,  104,  831,
      830,  828,  827,  825,  104,  108,  108,  108,  108,  108,

      108,  108,  108,  108,  108,  301,  108,  108,  824,  822,
      820,  819,  288,  818,  301,  108,  108,  108,  108,  108,
      420,  288,  288,  301,  200,  200,  200,  301,  817,  816,
      288,  200,  200,  288,  288,  200,  815,  814,  405,  564,
      757,  108,  108,  200,  200,  200,  200,  200,  405,  564,
      108,  108,  108,  756,  754,  752,  750,  405,  108,  405,
      564,  749,  301,  748,  108,  153,  747,  746,  745,  288,
      744,  743,  742,  407,  153,  153,  153,  153,  153,  153,
      153,  153,  153,  407,  741,  739,  153,  153,  154,  738,
      737,  736,  407,  728,  407,  564,  411,  154,  154,  154,

      154,  154,  154,  154,  154,  154,  411,  696,  556,  154,
      154,  155,  692,  659,  658,  411,  657,  411,  556,  656,
      155,  155,  155,  155,  155,  155,  155,  155,  155,  556,
      556,  655,  155,  155,  156,  156,  156,  156,  156,  156,
      156,  156,  156,  156,  654,  156,  156,  652,  651,  650,
      648,  417,  647,  646,  156,  156,  156,  156,  156,  645,
      417,  417,  644,  203,  203,  203,  556,  643,  642,  417,
      203,  203,  417,  417,  203,  641,  640,  639,  438,  637,
      156,  156,  203,  203,  203,  203,  203,  438,  438,  156,
      156,  156,  636,  635,  634,  633,  438,  156,  629,  438,

      438,  541,  540,  156,  157,  157,  157,  157,  157,  157,
      157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
      157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
      157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
      157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
      157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
      157,  157,  157,  157,  157,  157,  157,  157,  157,  157,
      157,  157,  157,  157,  158,  158,  158,  158,  158,  158,
      158,  158,  158,  158,  539,  158,  158,  538,  537,  224,
      269,  536,  535,  534,  158,  158,  158,  158,  158,  533,

      269,  269,  269,  269,  269,  269,  269,  269,  531,  530,
      529,  269,  269,  767,  528,  527,  224,  458,  526,  525,
      158,  158,  224,  767,  224,  224,  224,  458,  224,  158,
      158,  158,  224,  524,  767,  767,  458,  158,  458,  523,
      522,  304,  521,  158,  159,  159,  159,  159,  159,  159,
      159,  159,  159,  159,  520,  159,  159,  519,  518,  304,
      272,  517,  516,  304,  159,  159,  159,  159,  159,  272,
      272,  272,  272,  272,  272,  272,  272,  515,  513,  509,
      496,  272,  272,  489,  479,  457,  304,  419,  410,  402,
      159,  159,  304,  401,  304,  304,  304,  419,  304,  159,

      159,  159,  304,  399,  309,  398,  397,  159,  419,  419,
      396,  395,  706,  159,  161,  309,  309,  309,  309,  309,
      309,  309,  706,  161,  161,  161,  161,  161,  161,  161,
      161,  161,  161,  706,  706,  161,  161,  162,  394,  393,
      392,  391,  390,  389,  419,  388,  162,  162,  162,  162,
      162,  162,  162,  162,  162,  162,  387,  386,  162,  162,
      163,  618,  618,  618,  618,  618,  618,  618,  706,  163,
      163,  163,  163,  163,  163,  163,  163,  163,  163,  385,
      317,  163,  163,  166,  166,  166,  166,  166,  166,  166,
      166,  166,  166,  384,  166,  381,  847,  379,  317,  280,

      378,  375,  374,  166,  166,  166,  847,  166,  280,  280,
      280,  280,  280,  280,  280,  280,  280,  847,  373,  372,
      280,  371,  918,  370,  362,  317,  542,  356,  353,  166,
      166,  317,  918,  317,  317,  317,  542,  317,  166,  166,
      166,  317,  166,  918,  918,  542,  166,  542,  343,  258,
      257,  256,  166,  167,  167,  167,  167,  167,  167,  167,
      167,  167,  167,  254,  167,  253,  969,  252,  250,  281,
      249,  248,  247,  167,  167,  167,  969,  167,  281,  281,
      281,  281,  281,  281,  281,  281,  281,  969,  246,  345,
      281,  345,  345,  345,  345,  345,  345,  345,  245,  167,

      167,  244,  243,  242,  240,  239,  238,  236,  167,  167,
      167,  235,  233,  232,  231,  229,  167,  228,  226,  212,
      207,  172,  167,  168,  168,  168,  168,  168,  168,  168,
      168,  168,  168,  146,  168,  140,  139,  138,  137,  282,
      136,  135,  134,  168,  168,  168,  132,  168,  282,  282,
      282,  282,  282,  282,  282,  282,  282,  130,  128,  346,
      282,  346,  346,  346,  346,  346,  346,  346,  127,  168,
      168,  126,  125,  124,  123,  122,  121,  120,  168,  168,
      168,  119,  118,  117,  116,  115,  168,  114,  113,  112,
      111,   89,  168,  169,  169,  169,  169,  169,  169,  169,

      169,  169,  169,   81,  169,   56,   51,  310,   49,   48,
       46,   44,   42,  169,  169,  169,  310,  169,  310,  310,
      310,  310,  310,  310,  310,  428,  545,   39,   18,   17,
       15,   13,  463,   11,  428,  428,  545,    0,    0,  169,
      169,  463,  463,  428,    0,  545,  428,  545,  169,  169,
      169,    0,    0,  463,  463,    0,  169,    0,    0,    0,
        0,    0,  169,  178,  178,  178,  178,  178,  178,  178,
      178,  178,  178,    0,  178,    0,    0,  311,    0,    0,
        0,    0,  428,  178,  178,  178,  311,  178,  311,  311,
      311,  311,  311,  311,  311,  432,  547,    0,    0,    0,

        0,    0,  549,    0,  432,  432,  547,    0,    0,  178,
      178,    0,  549,  432,    0,  547,  432,  547,  178,  178,
      178,  549,    0,  549,    0,    0,  178,    0,    0,    0,
        0,    0,  178,  179,  179,  179,  179,  179,  179,  179,
      179,  179,  179,    0,  179,    0,    0,  312,    0,    0,
        0,    0,  432,  179,  179,  179,  312,  179,  312,  312,
      312,  312,  312,  312,  328,  328,  328,    0,    0,    0,
        0,  328,  328,    0,    0,  328,    0,    0,    0,  179,
      179,    0,    0,  328,  328,  328,  328,  328,  179,  179,
      179,    0,    0,  572,    0,    0,  179,    0,    0,    0,

        0,  677,  179,  182,  572,  572,  572,  572,  572,  572,
      572,  677,  182,  182,  182,  182,  182,  182,  182,  182,
      182,  182,  677,  599,  182,  183,    0,    0,    0,    0,
        0,    0,  599,  599,  183,  183,  183,  183,  183,  183,
      183,  183,  183,  183,  599,    0,  183,  185,  185,  185,
      185,  185,  185,  185,  185,  185,  185,    0,  185,  677,
        0,    0,    0,    0,  439,    0,    0,  185,  185,  185,
      561,  185,    0,  439,  439,    0,  329,  329,  329,  561,
      561,    0,  439,  329,  329,  439,  439,  329,  561,    0,
      582,  561,    0,  185,  185,  329,  329,  329,  329,  329,

      582,    0,  185,  185,  185,    0,    0,    0,    0,  582,
      185,  582,    0,    0,    0,    0,  185,  188,  188,  188,
      188,  188,  188,  188,  188,  188,  188,  490,  188,  490,
      490,  490,  490,  490,  490,  490,    0,  188,  188,  188,
      563,  188,    0,    0,    0,    0,  331,  331,  331,    0,
      563,    0,    0,  331,  331,    0,    0,  331,    0,    0,
      584,  563,    0,  188,  188,  331,  331,  331,  331,  331,
      584,    0,  188,  188,  188,    0,    0,    0,    0,  584,
      188,  584,    0,    0,    0,    0,  188,  189,  189,  189,
      189,  189,  189,  189,  189,  189,  189,  563,  189,  189,

      494,    0,    0,    0,    0,    0,    0,  189,  189,  189,
      189,  189,  494,  494,  494,    0,  337,  337,  337,    0,
        0,  494,    0,  337,  337,    0,    0,  337,    0,    0,
        0,  565,    0,  189,  189,  337,  337,  337,  337,  337,
      565,  565,  189,  189,  189,    0,    0,    0,    0,  565,
      189,    0,  565,    0,    0,    0,  189,  191,  191,  191,
      191,  191,  191,  191,  191,  191,  191,    0,  191,  191,
        0,    0,    0,    0,  576,    0,    0,  191,  191,  191,
      191,  191,    0,  576,  576,    0,  338,  338,  338,    0,
        0,    0,  576,  338,  338,  576,    0,  338,    0,    0,

      587,  671,    0,  191,  191,  338,  338,  338,  338,  338,
      587,  671,  191,  191,  191,    0,    0,    0,    0,  587,
      191,  587,  671,  671,    0,    0,  191,  192,  192,  192,
      192,  192,  192,  192,  192,  192,  192,    0,  192,  192,
        0,    0,  422,    0,    0,    0,    0,  192,  192,  192,
      192,  192,  422,  422,  422,  422,  422,  422,  422,  422,
        0,  671,    0,  422,    0,    0,  722,  607,    0,    0,
      612,    0,    0,  192,  192,  722,  722,  607,    0,  612,
      612,    0,  192,  192,  192,  607,    0,  722,  607,  607,
      192,  612,  612,    0,    0,    0,  192,  195,  195,  195,

      195,  195,  195,  195,  195,  195,  195,    0,  195,  195,
        0,    0,  485,  423,    0,    0,    0,  195,  195,  195,
      195,  195,  423,  423,  423,  423,  423,  423,  423,  423,
      423,    0,    0,    0,  423,    0,    0,    0,    0,  485,
      627,    0,    0,  195,  195,  485,    0,  485,  485,  485,
      627,  485,  195,  195,  195,  485,    0,    0,    0,  627,
      195,  627,    0,    0,    0,    0,  195,  196,  196,  196,
      196,  196,  196,  196,  196,  196,  196,    0,  196,  196,
        0,    0,  505,  424,    0,    0,    0,  196,  196,  196,
      196,  196,  424,  424,  424,  424,  424,  424,  424,  424,

      424,    0,    0,    0,  424,    0,    0,    0,    0,  505,
      628,    0,    0,  196,  196,  505,    0,  505,  505,  505,
      628,  505,  196,  196,  196,  505,    0,    0,    0,  628,
      196,  628,    0,    0,    0,    0,  196,  199,  199,  199,
      199,  199,  199,  199,  199,  199,  199,    0,  199,  199,
        0,    0,    0,  425,    0,    0,    0,  199,  199,  199,
      199,  199,  425,  425,  425,  425,  425,  425,  425,  425,
        0,    0,    0,  619,  425,  619,  619,  619,  619,  619,
      619,  619,  619,  199,  199,    0,    0,    0,    0,    0,
        0,    0,  199,  199,  199,    0,    0,    0,    0,    0,

      199,    0,    0,    0,    0,    0,  199,  204,  204,  204,
      204,  204,  204,  204,  204,  204,  204,  204,  204,  204,
      204,  204,  204,  204,  204,  204,  204,  204,  204,  204,
      204,  204,  204,  204,  204,  204,  204,  204,  204,  204,
      204,  204,  204,  204,  204,  204,  204,  204,  204,  204,
      204,  204,  204,  204,  204,  204,  204,  204,  204,  204,
      204,  204,  204,  204,  204,  204,  204,  204,  204,  204,
      204,  204,  204,  204,  204,  204,  204,  205,  205,  205,
      205,  205,  205,  205,  205,    0,  205,    0,    0,  205,
        0,    0,    0,  447,    0,    0,    0,  205,  205,  205,

      205,  205,  447,    0,  447,  447,  447,  447,  447,  447,
      447,    0,    0,  448,  205,    0,    0,    0,    0,    0,
        0,  450,  448,  205,  448,  448,  448,  448,  448,  448,
      448,  450,  450,  450,  450,  450,  450,  450,  450,  450,
        0,    0,  450,    0,    0,  427,  205,  206,  206,  206,
      206,  206,  206,  206,  206,  427,  206,    0,    0,  206,
        0,    0,    0,  427,    0,    0,  427,  206,  206,  206,
      206,  206,  449,    0,    0,    0,  206,    0,    0,    0,
        0,  449,    0,  449,  449,  449,  449,  449,  449,  449,
      427,  435,    0,  206,  626,    0,  427,    0,  427,  427,

      427,  435,  427,  626,  626,    0,  427,    0,    0,  435,
        0,    0,  435,  626,    0,  626,  206,  215,  215,  215,
      215,  215,  215,  215,  215,  215,  215,    0,  215,  215,
        0,    0,    0,  678,    0,    0,  435,  215,  215,  215,
      215,  215,  435,  678,  435,  435,  435,  595,  435,  608,
        0,  678,  435,    0,  678,  678,  595,  595,  608,  608,
        0,    0,    0,  215,  215,  595,    0,  608,  595,  595,
      608,  608,  215,  215,  215,    0,  215,    0,    0,    0,
      215,    0,    0,    0,    0,    0,  215,  216,  216,  216,
      216,  216,  216,  216,  216,  216,  216,    0,  216,  216,

        0,    0,    0,  453,  595,    0,  608,  216,  216,  216,
      216,  216,  453,  453,  453,  453,  453,  453,  453,  453,
        0,  453,    0,  621,  453,  621,  621,  621,  621,  621,
      621,  621,    0,  216,  216,    0,    0,    0,    0,    0,
        0,    0,  216,  216,  216,    0,    0,    0,    0,    0,
      216,    0,    0,    0,    0,    0,  216,  217,  217,  217,
      217,  217,  217,  217,  217,  217,  217,    0,  217,  217,
        0,  621,    0,    0,  666,    0,    0,  217,  217,  217,
      217,  217,    0,  666,  666,    0,  471,  471,  471,    0,
        0,    0,    0,  471,  471,  666,  666,  471,    0,    0,

      660,  773,    0,  217,  217,  471,  471,  471,  471,  471,
      660,  773,  217,  217,  217,    0,    0,    0,    0,  660,
      217,  660,  773,    0,    0,    0,  217,  218,  218,  218,
      218,  218,  218,  218,  218,  218,  218,    0,  218,  218,
        0,    0,    0,    0,  699,    0,    0,  218,  218,  218,
      218,  218,    0,  699,  699,    0,  472,  472,  472,    0,
        0,  773,    0,  472,  472,  699,  699,  472,    0,    0,
      663,  804,    0,  218,  218,  472,  472,  472,  472,  472,
      663,  804,  218,  218,  218,  482,    0,    0,    0,  663,
      218,  663,  804,  693,  482,    0,  218,  219,  219,  219,

        0,    0,  486,  693,  219,  219,    0,    0,  219,    0,
        0,  486,  693,  697,  693,  768,  219,  219,  219,  219,
      219,  482,    0,  697,  768,  768,    0,  482,  804,  482,
      482,  482,  697,  482,  697,  864,  768,  482,  486,    0,
        0,    0,    0,  219,  486,  864,  486,  486,  486,  219,
      486,  219,  219,  219,  486,  219,  864,  864,    0,  219,
      225,  225,  225,  225,  225,  225,  225,  225,  225,  225,
        0,  225,  225,    0,    0,    0,  501,  551,    0,    0,
      225,  225,  225,  225,  225,  501,    0,  551,  551,  551,
      551,  551,  551,  551,  551,  864,    0,    0,  551,  551,

        0,    0,    0,    0,  705,    0,  225,  225,    0,    0,
        0,    0,  501,    0,  705,  225,  225,  225,  501,    0,
      501,  501,  501,  225,  501,  705,  705,    0,  501,  225,
      270,    0,    0,    0,    0,    0,    0,    0,  717,  270,
      270,  270,  270,  270,  270,  270,  270,  270,  717,    0,
        0,  270,  270,  271,    0,    0,  717,    0,    0,  717,
        0,  705,  271,  271,  271,  271,  271,  271,  271,  271,
      271,    0,    0,    0,  271,  271,  273,  273,  273,  273,
      273,  273,  273,  273,  273,  273,    0,  273,  273,    0,
        0,    0,  506,    0,    0,  573,  273,  273,  273,  273,

      273,  506,    0,    0,  573,  510,  573,  573,  573,  573,
      573,  573,  573,  622,  510,  622,  622,  622,  622,  622,
      622,  622,  273,  273,    0,    0,    0,    0,  506,    0,
        0,  273,  273,  273,  506,    0,  506,  506,  506,  273,
      506,  510,  512,    0,  506,  273,  274,  510,    0,  510,
      510,  510,  703,  510,    0,    0,  274,  510,    0,    0,
      622,  703,  703,    0,  274,    0,  805,  274,  274,  512,
      703,    0,    0,  703,  703,  512,  805,  512,  512,  512,
        0,  512,    0,  732,  512,  512,    0,  805,    0,    0,
        0,  274,    0,  732,    0,  732,    0,  274,    0,  274,

      274,  274,  732,  274,  732,    0,    0,  274,  276,  276,
      276,  276,  276,  276,  276,  276,  276,  276,    0,  276,
      276,    0,  805,    0,  554,    0,    0,    0,  276,  276,
      276,  276,  276,  554,  554,  554,  554,  554,  554,  554,
      554,  760,    0,    0,    0,  554,  554,    0,  724,    0,
        0,  760,    0,    0,  276,  276,    0,  724,  724,    0,
      760,    0,  760,  276,  276,  276,  724,    0,    0,  724,
      724,  276,    0,    0,    0,    0,    0,  276,  283,  283,
      283,  283,  283,  283,  283,  283,  283,  283,    0,  283,
      283,    0,    0,    0,  558,    0,    0,    0,  283,  283,

      283,  283,  283,  558,  558,  558,  558,  558,  558,  558,
      558,  558,    0,    0,  623,  558,  623,  623,  623,  623,
      623,  623,  623,  623,  283,  283,    0,    0,    0,    0,
        0,    0,    0,  283,  283,  283,    0,    0,    0,    0,
        0,  283,    0,    0,    0,    0,    0,  283,  284,  284,
      284,  284,  284,  284,  284,  284,  284,  284,    0,  284,
      284,    0,    0,    0,  559,    0,    0,    0,  284,  284,
      284,  284,  284,  559,  559,  559,  559,  559,  559,  559,
      559,  559,    0,    0,  730,  559,  730,  730,  730,  730,
      730,  730,  730,    0,  284,  284,    0,    0,    0,    0,

        0,    0,    0,  284,  284,  284,    0,    0,    0,    0,
        0,  284,    0,    0,    0,    0,    0,  284,  285,  285,
      285,  285,  285,  285,  285,  285,  285,  285,    0,  285,
      285,    0,    0,  730,  560,    0,    0,    0,  285,  285,
      285,  285,  285,  560,  560,  560,  560,  560,  560,  560,
      560,  560,    0,    0,    0,  560,    0,    0,  781,  786,
        0,  798,  924,    0,  285,  285,    0,    0,  781,  786,
      798,  798,  924,  285,  285,  285,  781,    0,  786,  781,
      786,  285,  798,  924,    0,    0,    0,  285,  286,  286,
      286,  286,  286,  286,  286,  286,  286,  286,    0,  286,

      286,    0,    0,    0,  574,    0,    0,    0,  286,  286,
      286,  286,  286,  574,  575,  574,  574,  574,  574,  574,
      574,  574,  924,  575,    0,  575,  575,  575,  575,  575,
      575,  788,    0,    0,  286,  286,    0,    0,    0,    0,
        0,  788,    0,  286,  286,  286,    0,    0,    0,    0,
      788,  286,  788,    0,    0,    0,    0,  286,  289,  289,
      289,  289,  289,  289,  289,  289,  289,  289,    0,  289,
      289,    0,    0,  589,    0,    0,    0,    0,  289,  289,
      289,  289,  289,  589,  589,  589,  589,  589,  589,  589,
      589,  790,    0,    0,  589,  589,    0,    0,  802,  813,

        0,  790,    0,    0,  289,  289,    0,  802,  802,  813,
      790,    0,  790,  289,  289,  289,  802,    0,  813,  802,
      813,  289,    0,    0,    0,    0,    0,  289,  290,  290,
      290,  290,  290,  290,  290,  290,  290,  290,    0,  290,
      290,    0,    0,    0,  592,    0,    0,    0,  290,  290,
      290,  290,  290,  592,  592,  592,  592,  592,  592,  592,
      592,  714,    0,    0,    0,  592,  592,    0,  806,    0,
      714,  714,    0,    0,  290,  290,    0,  806,  806,  714,
        0,    0,  714,  290,  290,  290,  806,    0,    0,  806,
      600,  290,    0,    0,    0,    0,    0,  290,  291,  600,

      600,  600,  600,  600,  600,  600,  600,  600,  291,    0,
        0,  600,  601,    0,    0,    0,  291,    0,  714,  291,
      291,  601,  601,  601,  601,  601,  601,  601,  601,  601,
        0,    0,    0,  601,    0,  856,  797,    0,    0,    0,
        0,    0,    0,  291,    0,  856,  797,    0,    0,  291,
        0,  291,  291,  291,  856,  291,  856,  797,  797,  291,
      293,  293,  293,  293,  293,  293,  293,  293,  293,  293,
        0,  293,  293,    0,    0,    0,  602,    0,    0,    0,
      293,  293,  293,  293,  293,  602,  602,  602,  602,  602,
      602,  602,  602,  602,  797,    0,    0,  602,  870,    0,

      718,    0,    0,  859,    0,    0,  293,  293,  870,  718,
      718,    0,  859,  859,    0,  293,  293,  293,  718,  870,
        0,  718,  684,  293,  859,  859,    0,    0,    0,  293,
      294,  684,    0,  684,  684,  684,  684,  684,  684,  684,
      294,  294,  294,  294,  294,  294,  294,  294,  294,    0,
        0,  294,  294,  295,    0,    0,  870,  718,    0,    0,
        0,    0,  295,  295,  295,  295,  295,  295,  295,  295,
      295,  295,    0,    0,  295,  295,  296,    0,    0,    0,
        0,    0,    0,    0,    0,  296,  296,  296,  296,  296,
      296,  296,  296,  296,  296,  919,    0,  296,  296,  297,

        0,    0,    0,    0,  919,  919,    0,    0,  297,  297,
      297,  297,  297,  297,  297,  297,  919,  297,    0,    0,
      297,  297,  298,  298,  298,  298,  298,  298,  298,  298,
      298,  298,  807,  298,  807,  807,  807,  807,  807,  807,
      807,    0,  298,  298,  298,  837,  298,    0,    0,    0,
        0,  632,  632,  632,    0,  837,    0,    0,  632,  632,
        0,    0,  632,  837,    0,  903,  837,  837,  298,  298,
      632,  632,  632,  632,  632,  903,    0,  298,  298,  298,
      298,    0,    0,  903,    0,  298,  903,    0,    0,    0,
        0,  298,  299,  299,  299,  299,  299,  299,  299,  299,

      299,  299,    0,  299,    0,    0,    0,  672,    0,    0,
        0,    0,  299,  299,  299,  911,  299,  672,  672,  672,
      672,  672,  672,  672,  672,  911,    0,    0,  672,  777,
        0,    0,    0,    0,  911,    0,  911,    0,  299,  299,
      777,  777,  777,  777,  777,  777,  777,  299,  299,  299,
        0,    0,    0,    0,    0,  299,    0,    0,    0,    0,
        0,  299,  302,  302,  302,  302,  302,  302,  302,  302,
      302,  302,    0,  302,    0,    0,    0,    0,  673,    0,
        0,    0,  302,  302,  302,    0,  302,  673,  673,  673,
      673,  673,  673,  673,  673,  673,    0,    0,  808,  673,

      808,  808,  808,  808,  808,  808,  808,    0,  302,  302,
        0,    0,    0,    0,    0,    0,    0,  302,  302,  302,
        0,    0,    0,    0,    0,  302,    0,    0,    0,    0,
        0,  302,  303,  303,  303,  303,  303,  303,  303,  303,
      303,  303,    0,  303,    0,    0,    0,    0,  674,    0,
        0,    0,  303,  303,  303,    0,  303,  674,  674,  674,
      674,  674,  674,  674,  674,  674,    0,    0,  809,  674,
      809,  809,  809,  809,  809,  809,  809,    0,  303,  303,
        0,    0,    0,    0,    0,    0,    0,  303,  303,  303,
        0,    0,    0,    0,    0,  303,    0,    0,    0,    0,

        0,  303,  306,  306,  306,  306,  306,  306,  306,  306,
      306,  306,    0,  306,    0,    0,    0,    0,  675,    0,
        0,    0,  306,  306,  306,    0,  306,  675,  675,  675,
      675,  675,  675,  675,  675,    0,    0,    0,  810,  675,
      810,  810,  810,  810,  810,  810,  810,    0,  306,  306,
        0,    0,    0,    0,    0,    0,    0,  306,  306,  306,
        0,    0,    0,    0,    0,  306,    0,    0,    0,    0,
        0,  306,  313,  313,  313,  313,  313,  313,  313,  313,
      313,  313,    0,  313,    0,    0,  685,    0,    0,    0,
        0,    0,  313,  313,  313,  685,  313,  685,  685,  685,

      685,  685,  685,  685,  812,    0,  812,  812,  812,  812,
      812,  812,  812, 1000,    0,  959,    0,    0,  313,  313,
        0,    0,    0, 1000,    0,  959,    0,  313,  313,  313,
        0, 1000,    0,  959, 1000,  313,  959,  959,    0,    0,
        0,  313,  315,  315,  315,  315,  315,  315,  315,  315,
      315,  315,    0,  315,    0,  812,  686,    0,    0,    0,
        0,    0,  315,  315,  315,  686,  315,  686,  686,  686,
      686,  686,  686,  686,  871,    0,  871,  871,  871,  871,
      871,  871,  871,    0,    0,    0,    0,    0,  315,  315,
        0,    0,    0,    0,    0,    0,    0,  315,  315,  315,

        0,    0,    0,    0,    0,  315,    0,    0,    0,    0,
        0,  315,  316,  316,  316,  316,  316,  316,  316,  316,
      316,  316,    0,  316,    0,    0,    0,  687,    0,    0,
        0,    0,  316,  316,  316,    0,  316,  687,  687,  687,
      687,  687,  687,  687,  687,  687,    0,  872,  687,  872,
      872,  872,  872,  872,  872,  872,    0,    0,  316,  316,
        0,    0,    0,    0,    0,    0,    0,  316,  316,  316,
        0,    0,    0,    0,    0,  316,    0,    0,    0,    0,
        0,  316,  318,  318,  318,  318,  318,  318,  318,  318,
      318,  318,    0,  318,    0,    0,    0,    0,  690,    0,

        0,    0,  318,  318,  318,    0,  318,  690,  690,  690,
      690,  690,  690,  690,  690,    0,  690,    0,  873,  690,
      873,  873,  873,  873,  873,  873,  873,    0,  318,  318,
        0,    0,    0,    0,    0,    0,    0,  318,  318,  318,
        0,    0,    0,    0,  780,  318,    0,    0,    0,    0,
        0,  318,  320,  780,    0,  780,  780,  780,  780,  780,
      780,  320,  320,  320,  320,  320,  320,  320,  320,  320,
      320,    0,    0,  320,  321,    0,    0,    0,    0,    0,
        0,    0,    0,  321,  321,  321,  321,  321,  321,  321,
      321,  321,  321,    0,    0,  321,  322,    0,    0,    0,

        0,    0,    0,    0,    0,  322,  322,  322,  322,  322,
      322,  322,  322,  322,  322,    0,    0,  322,  324,  324,
      324,  324,  324,  324,  324,  324,  324,  324,    0,  324,
        0,    0,    0,  708,    0,    0,    0,    0,  324,  324,
      324,    0,  324,  708,  708,  708,  708,  708,  708,  708,
      708,    0,    0,  874,  708,  874,  874,  874,  874,  874,
      874,  874,    0,    0,  324,  324,    0,    0,    0,    0,
        0,    0,    0,  324,  324,  324,    0,  324,    0,    0,
        0,  324,    0,    0,    0,    0,    0,  324,  332,  332,
      332,  332,  332,  332,  332,  332,  332,  332,  332,  332,

      332,  332,  332,  332,  332,  332,  332,  332,  332,  332,
      332,  332,  332,  332,  332,  332,  332,  332,  332,  332,
      332,  332,  332,  332,  332,  332,  332,  332,  332,  332,
      332,  332,  332,  332,  332,  332,  332,  332,  332,  332,
      332,  332,  332,  332,  332,  332,  332,  332,  332,  332,
      332,  332,  332,  332,  332,  332,  332,  332,  336,  336,
      336,  336,  336,  336,  336,  336,  336,  336,  336,  336,
      336,  336,  336,  336,  336,  336,  336,  336,  336,  336,
      336,  336,  336,  336,  336,  336,  336,  336,  336,  336,
      336,  336,  336,  336,  336,  336,  336,  336,  336,  336,

      336,  336,  336,  336,  336,  336,  336,  336,  336,  336,
      336,  336,  336,  336,  336,  336,  336,  336,  336,  336,
      336,  336,  336,  336,  336,  336,  336,  336,  340,  340,
      340,  340,  340,  340,  340,  340,  709,    0,    0,    0,
        0,    0,    0,    0,    0,  709,  709,  709,  709,  709,
      709,  709,  709,  709,    0,    0,    0,  709,    0,    0,
        0,    0,  340,    0,    0,    0,    0,    0,  340,    0,
      340,  340,  340,    0,  340,    0,    0,    0,  340,  347,
      347,  347,  347,  347,  347,  347,  347,  347,  347,    0,
      347,  347,    0,    0,    0,  710,    0,    0,    0,  347,

      347,  347,  347,  347,  710,  710,  710,  710,  710,  710,
      710,  710,  710,    0,    0,  876,  710,  876,  876,  876,
      876,  876,  876,  876,    0,  347,  347,    0,    0,    0,
        0,    0,    0,    0,  347,  347,  347,    0,    0,    0,
        0,    0,  347,    0,    0,    0,    0,    0,  347,  348,
      348,  348,  348,  348,  348,  348,  348,  348,  348,    0,
      348,  348,    0,    0,    0,  711,    0,    0,    0,  348,
      348,  348,  348,  348,  711,  711,  711,  711,  711,  711,
      711,  711,    0,    0,    0,    0,  711,    0,    0,    0,
        0,    0,    0,  713,    0,  348,  348,    0,    0,    0,

        0,    0,    0,  713,  348,  348,  348,    0,    0,    0,
        0,  713,  348,    0,  713,    0,    0,    0,  348,  349,
      349,  349,  349,  349,  349,  349,  349,  349,  349,    0,
      349,  349,    0,    0,    0,    0,    0,    0,  713,  349,
      349,  349,  349,  349,  713,    0,  713,  713,  713,    0,
      713,    0,    0,  925,  713,  925,  925,  925,  925,  925,
      925,  925,  925,  721,    0,  349,  349,    0,    0,    0,
        0,    0,    0,  721,  349,  349,  349,    0,    0,    0,
        0,  721,  349,    0,  721,    0,    0,    0,  349,  350,
      350,  350,  350,  350,  350,  350,  350,  350,  350,    0,

      350,  350,    0,    0,    0,    0,    0,    0,  721,  350,
      350,  350,  350,  350,  721,  849,  721,  721,  721,    0,
      721,    0,    0,    0,  721,    0,  849,  849,  849,  849,
      849,  849,  849,  849,    0,  350,  350,    0,    0,    0,
        0,    0,    0,    0,  350,  350,  350,    0,    0,    0,
        0,    0,  350,    0,    0,    0,    0,    0,  350,  351,
      351,  351,  351,  351,  351,  351,  351,    0,  351,    0,
        0,  351,    0,    0,    0,    0,    0,    0,    0,  351,
      351,  351,  351,  351,    0,  762,    0,    0,  351,    0,
        0,    0,    0,    0,    0,  762,  762,  762,  762,  762,

      762,  762,  762,  765,    0,  351,  762,  762,    0,    0,
        0,    0,  765,  765,  765,  765,  765,  765,  765,  765,
        0,    0,    0,    0,  765,  765,    0,    0,  351,  352,
      352,  352,  352,  352,  352,  352,  352,    0,  352,    0,
        0,  352,    0,    0,    0,  769,    0,    0,    0,  352,
      352,  352,  352,  352,  769,  769,  769,  769,  769,  769,
      769,  769,  769,    0,    0,    0,  769,  770,    0,    0,
        0,  352,    0,    0,    0,  352,  770,  770,  770,  770,
      770,  770,  770,  770,  770,    0,    0,  926,  770,  926,
      926,  926,  926,  926,  926,  926,  926,    0,  352,  358,

      358,  358,  358,  358,  358,  358,  358,  358,  358,    0,
      358,  358,    0,    0,    0,  771,    0,    0,    0,  358,
      358,  358,  358,  358,  771,  771,  771,  771,  771,  771,
      771,  771,  771,    0,    0,  927,  771,  927,  927,  927,
      927,  927,  927,  927,  927,  358,  358,    0,    0,    0,
        0,    0,    0,    0,  358,  358,  358,    0,    0,    0,
        0,    0,  358,    0,    0,    0,    0,    0,  358,  359,
      359,  359,    0,    0,    0,    0,  359,  359,    0,  359,
      359,    0,    0,  776,    0,    0,    0,    0,  359,  359,
      359,  359,  359,  776,  776,  776,  776,  776,  776,  776,

      778,  776,    0,    0,  776,  776,    0,  850,    0,  778,
        0,  778,  778,  778,  778,  778,  778,  778,  850,  850,
      850,  850,  850,  850,  850,  850,    0,  359,  360,  360,
      360,  360,  360,  360,  360,  360,  360,  360,    0,  360,
      360,    0,    0,    0,  779,    0,    0,    0,  360,  360,
      360,  360,  360,  779,  851,  779,  779,  779,  779,  779,
      779,  779,    0,    0,    0,  851,  851,  851,  851,  851,
      851,  851,  851,    0,  360,  360,    0,    0,    0,    0,
        0,    0,    0,  360,  360,  360,    0,    0,    0,    0,
        0,  360,    0,    0,    0,    0,    0,  360,  364,  364,

      364,  364,  364,  364,  364,  364,  364,  364,    0,  364,
      364,    0,    0,  782,    0,    0,    0,    0,  364,  364,
      364,  364,  364,  782,  782,  782,  782,  782,  782,  782,
      782,  782,    0,  928,  782,  928,  928,  928,  928,  928,
      928,  928,  928,    0,  364,  364,    0,    0,    0,    0,
        0,    0,    0,  364,  364,  364,    0,    0,    0,    0,
        0,  364,    0,    0,    0,    0,    0,  364,  365,  365,
      365,  365,  365,  365,  365,  365,  365,  365,    0,  365,
      365,    0,    0,  783,    0,    0,    0,    0,  365,  365,
      365,  365,  365,  783,  783,  783,  783,  783,  783,  783,

      783,  783,    0,  970,  783,  970,  970,  970,  970,  970,
      970,  970,  970,    0,  365,  365,    0,    0,    0,    0,
        0,    0,    0,  365,  365,  365,    0,    0,    0,    0,
        0,  365,    0,    0,    0,    0,    0,  365,  366,  366,
      366,    0,    0,    0,    0,  366,  366,    0,    0,  366,
        0,    0,  784,    0,    0,    0,    0,  366,  366,  366,
      366,  366,  784,  784,  784,  784,  784,  784,  784,  784,
      784,  792,    0,  784,    0,    0,    0,    0,    0,    0,
        0,  792,  792,  792,  792,  792,  792,  792,  792,    0,
        0,    0,  792,  792,    0,  366,  367,  367,  367,    0,

        0,    0,    0,  367,  367,    0,    0,  367,    0,    0,
        0,  795,    0,    0,    0,  367,  367,  367,  367,  367,
      795,  795,  795,  795,  795,  795,  795,  795,  799,    0,
        0,    0,  795,  795,    0,    0,    0,  799,  799,  799,
      799,  799,  799,  799,  799,  799,    0,    0,    0,  799,
        0,    0,    0,    0,    0,  367,  368,  368,  368,    0,
        0,    0,    0,  368,  368,    0,    0,  368,    0,    0,
        0,  800,    0,    0,    0,  368,  368,  368,  368,  368,
      800,  800,  800,  800,  800,  800,  800,  800,  800,  801,
        0,    0,  800,    0,    0,    0,    0,    0,  801,  801,

      801,  801,  801,  801,  801,  801,  801,    0,    0,    0,
      801,    0,    0,    0,  368,  414,    0,    0,    0,    0,
        0,    0,    0,    0,  414,  414,  414,  414,  414,  414,
      414,  414,  414,    0,    0,    0,  414,  414,  415,    0,
        0,    0,    0,    0,    0,    0,    0,  415,  415,  415,
      415,  415,  415,  415,  415,  415,    0,    0,    0,  415,
      415,  416,    0,    0,    0,    0,    0,    0,    0,    0,
      416,  416,  416,  416,  416,  416,  416,  416,  416,    0,
        0,    0,  416,  416,  418,  418,  418,  418,  418,  418,
      418,  418,  418,  418,    0,  418,  418,    0,    0,  842,

        0,    0,    0,    0,  418,  418,  418,  418,  418,  842,
      842,  842,  842,  842,  842,  842,  842,    0,    0,  971,
      842,  971,  971,  971,  971,  971,  971,  971,  971,    0,
      418,  418,    0,    0,    0,    0,    0,    0,    0,  418,
      418,  418,    0,  418,    0,    0,    0,  418,    0,    0,
        0,    0,    0,  418,  426,  426,  426,  426,  426,  426,
      426,  426,  426,  426,    0,  426,  426,    0,    0,    0,
      843,    0,    0,    0,  426,  426,  426,  426,  426,  843,
      843,  843,  843,  843,  843,  843,  843,  843,    0,    0,
      972,  843,  972,  972,  972,  972,  972,  972,  972,  972,

      426,  426,    0,    0,    0,    0,    0,    0,    0,  426,
      426,  426,    0,    0,    0,    0,    0,  426,    0,    0,
        0,    0,    0,  426,  429,  429,  429,  429,  429,  429,
      429,  429,  429,  429,    0,  429,  429,    0,    0,    0,
      844,    0,    0,    0,  429,  429,  429,  429,  429,  844,
      844,  844,  844,  844,  844,  844,  844,  844,    0,    0,
        0,  844,    0,    0,    0,    0,    0,    0,    0,    0,
      429,  429,    0,    0,    0,    0,    0,    0,    0,  429,
      429,  429,    0,    0,    0,    0,    0,  429,    0,    0,
        0,    0,    0,  429,  430,  430,  430,  430,  430,  430,

      430,  430,  430,  430,    0,  430,  430,    0,    0,    0,
      845,    0,    0,    0,  430,  430,  430,  430,  430,  845,
      845,  845,  845,  845,  845,  845,  845,    0,    0,    0,
        0,  845,    0,    0,    0,    0,    0,    0,    0,    0,
      430,  430,    0,    0,    0,    0,    0,    0,    0,  430,
      430,  430,    0,    0,    0,    0,    0,  430,    0,    0,
        0,    0,    0,  430,  433,  433,  433,  433,  433,  433,
      433,  433,  433,  433,    0,  433,  433,    0,    0,  852,
        0,    0,    0,    0,  433,  433,  433,  433,  433,  852,
      852,  852,  852,  852,  852,  852,  852,  852,    0,    0,

      852,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      433,  433,    0,    0,    0,    0,    0,    0,    0,  433,
      433,  433,    0,    0,    0,    0,    0,  433,    0,    0,
        0,    0,    0,  433,  434,  434,  434,  434,  434,  434,
      434,  434,  434,  434,    0,  434,  434,    0,    0,  853,
        0,    0,    0,    0,  434,  434,  434,  434,  434,  853,
      853,  853,  853,  853,  853,  853,  853,  853,    0,    0,
      853,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      434,  434,    0,    0,    0,    0,    0,    0,    0,  434,
      434,  434,    0,    0,    0,    0,    0,  434,    0,    0,

        0,    0,    0,  434,  437,  437,  437,  437,  437,  437,
      437,  437,  437,  437,    0,  437,  437,    0,    0,  854,
        0,    0,    0,    0,  437,  437,  437,  437,  437,  854,
      854,  854,  854,  854,  854,  854,    0,  854,    0,    0,
      854,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      437,  437,    0,    0,    0,    0,    0,    0,    0,  437,
      437,  437,    0,    0,  908,    0,    0,  437,    0,    0,
        0,    0,    0,  437,  440,  908,  908,  908,  908,  908,
      908,  908,  908,  440,  440,  440,  440,  440,  440,  440,
      440,  440,  440,    0,    0,  440,  440,  441,    0,    0,

        0,    0,    0,    0,    0,    0,  441,  441,  441,  441,
      441,  441,  441,  441,  441,  441,    0,    0,  441,  441,
      442,    0,    0,    0,    0,    0,    0,    0,    0,  442,
      442,  442,  442,  442,  442,  442,  442,  442,  442,    0,
        0,  442,  442,  443,  443,  443,  443,  443,  443,  443,
      443,  443,  443,    0,  443,    0,    0,    0,  865,    0,
        0,    0,    0,  443,  443,  443,    0,  443,  865,  865,
      865,  865,  865,  865,  865,  865,    0,    0,    0,  865,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  443,
      443,    0,    0,    0,    0,    0,    0,    0,  443,  443,

      443,    0,    0,  443,    0,    0,  443,    0,    0,    0,
        0,    0,  443,  451,    0,    0,    0,    0,    0,    0,
        0,    0,  451,  451,  451,  451,  451,  451,  451,  451,
      451,  451,    0,    0,  451,  452,    0,    0,    0,    0,
        0,    0,    0,    0,  452,  452,  452,  452,  452,  452,
      452,  452,  452,  452,    0,    0,  452,  454,  454,  454,
      454,  454,  454,  454,  454,  454,  454,    0,  454,    0,
        0,    0,    0,  866,    0,    0,    0,  454,  454,  454,
        0,  454,  866,  866,  866,  866,  866,  866,  866,  866,
      866,    0,    0,    0,  866,    0,    0,    0,    0,    0,

        0,    0,    0,  454,  454,    0,    0,    0,    0,    0,
        0,    0,  454,  454,  454,  454,    0,  909,    0,    0,
      454,    0,    0,    0,    0,    0,  454,  464,  909,  909,
      909,  909,  909,  909,  909,  909,  464,  464,  464,  464,
      464,  464,  464,  464,  464,    0,    0,    0,  464,  464,
      465,    0,    0,    0,    0,    0,    0,    0,    0,  465,
      465,  465,  465,  465,  465,  465,  465,  465,    0,    0,
        0,  465,  465,  466,    0,    0,    0,    0,    0,    0,
        0,    0,  466,  466,  466,  466,  466,  466,  466,  466,
      466,    0,    0,    0,  466,  466,  467,  467,  467,  467,

      467,  467,  467,  467,  467,  467,    0,  467,  467,    0,
        0,    0,  867,    0,    0,    0,  467,  467,  467,  467,
      467,  867,  867,  867,  867,  867,  867,  867,  867,  867,
        0,    0,    0,  867,    0,    0,    0,    0,    0,    0,
        0,    0,  467,  467,    0,    0,    0,    0,    0,    0,
        0,  467,  467,  467,    0,    0,    0,    0,    0,  467,
        0,    0,    0,    0,    0,  467,  468,  468,  468,  468,
      468,  468,  468,  468,  468,  468,  468,  468,  468,  468,
      468,  468,  468,  468,  468,  468,  468,  468,  468,  468,
      468,  468,  468,  468,  468,  468,  468,  468,  468,  468,

      468,  468,  468,  468,  468,  468,  468,  468,  468,  468,
      468,  468,  468,  468,  468,  468,  468,  468,  468,  468,
      468,  468,  468,  468,  468,  468,  468,  468,  468,  468,
      468,  468,  468,  468,  468,  468,  469,  469,  469,  469,
      469,  469,  469,  469,  469,  469,    0,  469,  469,    0,
        0,    0,  868,    0,    0,    0,  469,  469,  469,  469,
      469,  868,  868,  868,  868,  868,  868,  868,  868,    0,
        0,    0,    0,  868,    0,    0,    0,    0,    0,    0,
        0,    0,  469,  469,    0,    0,    0,    0,    0,    0,
        0,  469,  469,  469,    0,    0,    0,    0,    0,  469,

        0,    0,    0,    0,    0,  469,  470,  470,  470,  470,
      470,  470,  470,  470,  470,  470,    0,  470,  470,    0,
        0,  902,    0,    0,    0,    0,  470,  470,  470,  470,
      470,  902,  902,  902,  902,  902,  902,  902,    0,  902,
        0,    0,  902,  902,    0,    0,    0,    0,    0,    0,
        0,    0,  470,  470,    0,    0,    0,    0,    0,    0,
        0,  470,  470,  470,    0,    0,    0,    0,    0,  470,
        0,    0,    0,    0,    0,  470,  476,  476,  476,    0,
        0,    0,    0,  476,  476,    0,    0,  476,  476,  476,
      476,  476,  476,  476,  476,  476,  476,  476,  476,  476,

      477,  477,  477,    0,    0,    0,    0,  477,  477,    0,
      477,  477,  477,  477,  477,  477,  477,  477,  477,  477,
      477,  477,  477,  477,  480,  480,  480,  480,  480,  480,
      480,  480,  480,  480,    0,  480,  480,    0,    0,  904,
        0,    0,    0,    0,  480,  480,  480,  480,  480,  904,
      904,  904,  904,  904,  904,  904,  904,  904,    0,    0,
      904,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      480,  480,    0,    0,    0,    0,    0,    0,    0,  480,
      480,  480,    0,    0,    0,    0,    0,  480,    0,    0,
        0,    0,    0,  480,  481,  905,  481,  481,  481,  481,

      481,  481,  481,  481,    0,  905,  905,  905,  905,  905,
      905,  905,  905,  905,    0,    0,  905,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      481,    0,    0,    0,    0,    0,  481,    0,  481,  481,
      481,    0,  481,    0,    0,    0,  481,  483,  483,  483,
      483,  483,  483,  483,  483,  483,  483,    0,  483,  483,
        0,    0,  906,    0,    0,    0,    0,  483,  483,  483,
      483,  483,  906,  906,  906,  906,  906,  906,  906,  906,
      906,    0,    0,  906,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  483,  483,    0,    0,    0,    0,    0,

        0,    0,  483,  483,  483,    0,    0,    0,    0,    0,
      483,    0,    0,    0,    0,    0,  483,  484,  484,  484,
      484,  484,  484,  484,  484,  484,  484,    0,  484,  484,
        0,  910,    0,    0,    0,    0,    0,  484,  484,  484,
      484,  484,  910,  910,  910,  910,  910,  910,    0,  910,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  484,  484,    0,    0,    0,    0,    0,
        0,    0,  484,  484,  484,    0,    0,    0,    0,    0,
      484,    0,    0,    0,    0,    0,  484,  487,  487,  487,
      487,  487,  487,  487,  487,  487,  487,    0,  487,  487,

        0,    0,  913,    0,    0,    0,    0,  487,  487,  487,
      487,  487,  913,  913,  913,  913,  913,  913,  913,  913,
        0,    0,    0,  913,  913,    0,    0,    0,    0,    0,
        0,    0,    0,  487,  487,    0,    0,    0,    0,    0,
        0,    0,  487,  487,  487,    0,    0,    0,    0,    0,
      487,    0,    0,    0,    0,    0,  487,  488,  488,  488,
      488,  488,  488,  488,  488,  488,  488,    0,  488,  488,
        0,    0,    0,  916,    0,    0,    0,  488,  488,  488,
      488,  488,  916,  916,  916,  916,  916,  916,  916,  916,
        0,    0,    0,    0,  916,  916,    0,    0,    0,    0,

        0,    0,    0,  488,  488,    0,    0,    0,    0,    0,
        0,    0,  488,  488,  488,    0,    0,    0,    0,    0,
      488,    0,    0,    0,    0,    0,  488,  491,  491,  491,
      491,  491,  491,  491,  491,  491,  491,    0,  491,  491,
        0,    0,    0,  920,    0,    0,    0,  491,  491,  491,
      491,  491,  920,  920,  920,  920,  920,  920,  920,  920,
      920,    0,    0,    0,  920,    0,    0,    0,    0,    0,
        0,    0,    0,  491,  491,    0,    0,    0,    0,    0,
        0,    0,  491,  491,  491,    0,    0,    0,    0,    0,
      491,    0,    0,    0,    0,    0,  491,  492,  492,  492,

      492,  492,  492,  492,  492,    0,  492,    0,    0,  492,
        0,    0,    0,    0,    0,    0,  921,  492,  492,  492,
      492,  492,    0,    0,  492,  921,  921,  921,  921,  921,
      921,  921,  921,  921,    0,  922,    0,  921,    0,    0,
        0,    0,    0,  492,  922,  922,  922,  922,  922,  922,
      922,  922,  922,    0,    0,    0,  922,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  492,  493,  493,  493,
      493,  493,  493,  493,  493,    0,  493,    0,    0,  493,
        0,    0,    0,    0,    0,    0,    0,  493,  493,  493,
      493,  493,    0,  955,    0,    0,  493,    0,    0,    0,

        0,    0,    0,  955,  955,  955,  955,  955,  955,  955,
      955,  955,  956,  493,  955,    0,    0,    0,    0,    0,
        0,    0,  956,  956,  956,  956,  956,  956,  956,  956,
      956,    0,    0,  956,    0,    0,  493,  497,  497,  497,
      497,  497,  497,  497,  497,  497,  497,    0,  497,  497,
        0,    0,  957,    0,    0,    0,    0,  497,  497,  497,
      497,  497,  957,  957,  957,  957,  957,  957,  957,    0,
      957,    0,    0,  957,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  497,  497,    0,    0,    0,    0,    0,
        0,    0,  497,  497,  497,    0,    0,    0,    0,    0,

      497,    0,    0,    0,    0,    0,  497,  498,  498,  498,
        0,    0,    0,    0,  498,  498,    0,  498,  498,    0,
        0,    0,    0,    0,    0,    0,  498,  498,  498,  498,
      498,  499,  499,  499,  499,  499,  499,  499,  499,  499,
      499,    0,  499,  499,    0,    0,  964,    0,    0,    0,
        0,  499,  499,  499,  499,  499,  964,  964,  964,  964,
      964,  964,  964,  964,    0,    0,    0,  964,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  499,  499,    0,
        0,    0,    0,    0,    0,    0,  499,  499,  499,    0,
        0,    0,    0,    0,  499,    0,    0,    0,    0,    0,

      499,  500,  500,  500,    0,    0,    0,    0,  500,  500,
        0,    0,  500,    0,    0,    0,  965,    0,    0,    0,
      500,  500,  500,  500,  500,  965,  965,  965,  965,  965,
      965,  965,  965,  965,    0,    0,    0,  965,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  500,    0,    0,
        0,    0,    0,  500,    0,  500,  500,  500,    0,  500,
        0,    0,    0,  500,  504,  504,  504,  504,  504,  504,
      504,  504,  504,  504,    0,  504,  504,    0,    0,    0,
      966,    0,    0,    0,  504,  504,  504,  504,  504,  966,
      966,  966,  966,  966,  966,  966,  966,  966,    0,    0,

        0,  966,    0,    0,    0,    0,    0,    0,    0,    0,
      504,  504,    0,    0,    0,    0,    0,    0,    0,  504,
      504,  504,    0,    0,    0,    0,    0,  504,    0,    0,
        0,    0,    0,  504,  507,  507,  507,  507,  507,  507,
      507,  507,  507,  507,    0,  507,  507,    0,    0,    0,
      967,    0,    0,    0,  507,  507,  507,  507,  507,  967,
      967,  967,  967,  967,  967,  967,  967,    0,    0,    0,
        0,  967,    0,    0,    0,    0,    0,    0,    0,    0,
      507,  507,    0,    0,    0,    0,    0,    0,    0,  507,
      507,  507,    0,    0,    0,    0,    0,  507,    0,    0,

        0,    0,    0,  507,  508,  508,  508,  508,  508,  508,
      508,  508,  508,  508,    0,  508,  508,    0,    0,  999,
        0,    0,    0,    0,  508,  508,  508,  508,  508,  999,
      999,  999,  999,  999,  999,  999,    0,  999,    0,    0,
      999,  999,    0,    0,    0,    0,    0,    0,    0,    0,
      508,  508,    0,    0,    0,    0,    0,    0,    0,  508,
      508,  508,    0,    0,    0,    0,    0,  508,    0,    0,
        0,    0,    0,  508,  511,  511,  511,  511,  511,  511,
      511,  511,  511,  511,    0,  511,  511,    0,    0, 1001,
        0,    0,    0,    0,  511,  511,  511,  511,  511, 1001,

     1001, 1001, 1001, 1001, 1001, 1001, 1001, 1001,    0,    0,
     1001,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      511,  511,    0,    0,    0,    0,    0,    0,    0,  511,
      511,  511,    0,    0,    0,    0,    0,  511,    0,    0,
        0,    0,    0,  511,  552,    0,    0,    0,    0,    0,
        0,    0,    0,  552,  552,  552,  552,  552,  552,  552,
      552,  552,    0,    0,    0,  552,  552,  553,    0,    0,
        0,    0,    0,    0,    0,    0,  553,  553,  553,  553,
      553,  553,  553,  553,  553,    0,    0,    0,  553,  553,
      555,  555,  555,  555,  555,  555,  555,  555,  555,  555,

        0,  555,  555,    0,    0, 1002,    0,    0,    0,    0,
      555,  555,  555,  555,  555, 1002, 1002, 1002, 1002, 1002,
     1002, 1002, 1002, 1002,    0,    0, 1002,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  555,  555,    0,    0,
        0,    0,    0,    0,    0,  555,  555,  555,  555,    0,
        0,    0,    0,  555,    0,    0,    0,    0,    0,  555,
      562,  562,  562,  562,  562,  562,  562,  562,  562,  562,
        0,  562,  562,    0,    0, 1003,    0,    0,    0,    0,
      562,  562,  562,  562,  562, 1003, 1003, 1003, 1003, 1003,
     1003, 1003, 1003, 1003,    0,    0, 1003,    0,    0,    0,

        0,    0,    0,    0,    0,    0,  562,  562,    0,    0,
        0,    0,    0,    0,    0,  562,  562,  562,    0,  562,
        0,    0,    0,  562,    0,    0,    0,    0,    0,  562,
      566,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      566,  566,  566,  566,  566,  566,  566,  566,  566,    0,
        0,  566,  566,  567,    0,    0,    0,    0,    0,    0,
        0,    0,  567,  567,  567,  567,  567,  567,  567,  567,
      567,  567,    0,    0,  567,  567,  568,    0,    0,    0,
        0,    0,    0,    0,    0,  568,  568,  568,  568,  568,
      568,  568,  568,  568,  568,    0,    0,  568,  568,  569,

        0,    0,    0,    0,    0,    0,    0,    0,  569,  569,
      569,  569,  569,  569,  569,  569,    0,  569,    0,    0,
      569,  569,  570,  570,  570,  570,  570,  570,  570,  570,
      570,  570,    0,  570,    0,    0,    0, 1027,    0,    0,
        0,    0,  570,  570,  570,    0,  570, 1027, 1027, 1027,
     1027, 1027, 1027, 1027, 1027, 1027,    0,    0, 1027,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  570,  570,
        0,    0,    0,    0,    0,    0,    0,  570,  570,  570,
        0,    0,    0,    0,  570,  570,    0,    0,    0,    0,
        0,  570,  577,    0,    0,    0,    0,    0,    0,    0,

        0,  577,  577,  577,  577,  577,  577,  577,  577,  577,
      577,    0,    0,  577,  578,    0,    0,    0,    0,    0,
        0,    0,    0,  578,  578,  578,  578,  578,  578,  578,
      578,  578,  578,    0,    0,  578,  579,    0,    0,    0,
        0,    0,    0,    0,    0,  579,  579,  579,  579,  579,
      579,  579,  579,  579,  579,    0,    0,  579,  580,  580,
      580,  580,  580,  580,  580,  580,  580,  580,    0,  580,
        0,    0,    0, 1028,    0,    0,    0,    0,  580,  580,
      580,    0,  580, 1028, 1028, 1028, 1028, 1028, 1028, 1028,
     1028, 1028,    0,    0, 1028,    0,    0,    0,    0,    0,

        0,    0,    0,    0,  580,  580,    0,    0,    0,    0,
        0,    0,    0,  580,  580,  580,    0,    0,  580,    0,
        0,  580,    0,    0,    0,    0,    0,  580,  590,    0,
        0,    0,    0,    0,    0,    0,    0,  590,  590,  590,
      590,  590,  590,  590,  590,  590,    0,    0,    0,  590,
      590,  591,    0,    0,    0,    0,    0,    0,    0,    0,
      591,  591,  591,  591,  591,  591,  591,  591,  591,    0,
        0,    0,  591,  591,  593,  593,  593,  593,  593,  593,
      593,  593,  593,  593,    0,  593,  593,    0,    0, 1029,
        0,    0,    0,    0,  593,  593,  593,  593,  593, 1029,

     1029, 1029, 1029, 1029, 1029, 1029,    0, 1029,    0,    0,
     1029,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      593,  593,    0,    0,    0,    0,    0,    0,    0,  593,
      593,  593,    0,    0,    0,    0,    0,  593,    0,    0,
        0,    0,    0,  593,  594,    0,    0,    0,    0,    0,
        0,    0,    0,    0,  594,    0,    0,    0,    0,    0,
        0,    0,  594,    0,    0,  594,  594,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  594,
        0,    0,    0,    0,    0,  594,    0,  594,  594,  594,

        0,  594,    0,    0,    0,  594,  596,  596,  596,  596,
      596,  596,  596,  596,  596,  596,    0,  596,  596,    0,
        0,    0,    0,    0,    0,    0,  596,  596,  596,  596,
      596,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  596,  596,    0,    0,    0,    0,    0,    0,
        0,  596,  596,  596,    0,    0,    0,    0,    0,  596,
        0,    0,    0,    0,    0,  596,  603,  603,  603,  603,
      603,  603,  603,  603,  603,  603,    0,  603,  603,    0,
        0,    0,    0,    0,    0,    0,  603,  603,  603,  603,

      603,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  603,  603,    0,    0,    0,    0,    0,    0,
        0,  603,  603,  603,    0,    0,    0,    0,    0,  603,
        0,    0,    0,    0,    0,  603,  604,  604,  604,  604,
      604,  604,  604,  604,  604,  604,    0,  604,  604,    0,
        0,    0,    0,    0,    0,    0,  604,  604,  604,  604,
      604,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  604,  604,    0,    0,    0,    0,    0,    0,

        0,  604,  604,  604,    0,    0,    0,    0,    0,  604,
        0,    0,    0,    0,    0,  604,  605,  605,  605,  605,
      605,  605,  605,  605,  605,  605,    0,  605,  605,    0,
        0,    0,    0,    0,    0,    0,  605,  605,  605,  605,
      605,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  605,  605,    0,    0,    0,    0,    0,    0,
        0,  605,  605,  605,    0,    0,    0,    0,    0,  605,
        0,    0,    0,    0,    0,  605,  606,  606,  606,  606,
      606,  606,  606,  606,  606,  606,    0,  606,  606,    0,

        0,    0,    0,    0,    0,    0,  606,  606,  606,  606,
      606,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  606,  606,    0,    0,    0,    0,    0,    0,
        0,  606,  606,  606,    0,    0,    0,    0,    0,  606,
        0,    0,    0,    0,    0,  606,  609,  609,  609,  609,
      609,  609,  609,  609,  609,  609,    0,  609,  609,    0,
        0,    0,    0,    0,    0,    0,  609,  609,  609,  609,
      609,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,  609,  609,    0,    0,    0,    0,    0,    0,
        0,  609,  609,  609,    0,    0,    0,    0,    0,  609,
        0,    0,    0,    0,    0,  609,  610,  610,  610,  610,
      610,  610,  610,  610,  610,  610,    0,  610,  610,    0,
        0,    0,    0,    0,    0,    0,  610,  610,  610,  610,
      610,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  610,  610,    0,    0,    0,    0,    0,    0,
        0,  610,  610,  610,    0,    0,    0,    0,    0,  610,
        0,    0,    0,    0,    0,  610,  611,    0,    0,    0,

        0,    0,    0,    0,    0,    0,  611,    0,    0,    0,
        0,    0,    0,    0,  611,    0,    0,  611,  611,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  611,    0,    0,    0,    0,    0,  611,    0,  611,
      611,  611,    0,  611,    0,    0,    0,  611,  613,  613,
      613,  613,  613,  613,  613,  613,  613,  613,    0,  613,
      613,    0,    0,    0,    0,    0,    0,    0,  613,  613,
      613,  613,  613,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,  613,  613,    0,    0,    0,    0,
        0,    0,    0,  613,  613,  613,    0,    0,    0,    0,
        0,  613,    0,    0,    0,    0,    0,  613,  615,  615,
      615,    0,    0,    0,    0,  615,  615,    0,  615,  615,
        0,    0,    0,    0,    0,    0,    0,  615,  615,  615,
      615,  615,  616,  616,  616,    0,    0,    0,    0,  616,
      616,    0,  616,  616,  616,  616,  616,  616,  616,  616,
      616,  616,  616,  616,  616,  616,  620,  620,  620,  620,
      620,  620,  620,  620,  620,  620,    0,  620,  620,    0,
        0,    0,    0,    0,    0,    0,  620,  620,  620,  620,

      620,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  620,  620,    0,    0,    0,    0,    0,    0,
        0,  620,  620,  620,    0,  620,    0,    0,    0,  620,
        0,    0,    0,    0,    0,  620,  624,  624,  624,  624,
      624,  624,  624,  624,    0,  624,    0,    0,  624,    0,
        0,    0,    0,    0,    0,    0,  624,  624,  624,  624,
      624,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  624,    0,
        0,    0,  624,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  624,  625,  625,  625,  625,
      625,  625,  625,  625,    0,  625,    0,    0,  625,    0,
        0,    0,    0,    0,    0,    0,  625,  625,  625,  625,
      625,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  625,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  625,  630,  630,  630,  630,
      630,  630,  630,  630,  630,  630,    0,  630,  630,    0,

        0,    0,    0,    0,    0,    0,  630,  630,  630,  630,
      630,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  630,  630,    0,    0,    0,    0,    0,    0,
        0,  630,  630,  630,    0,    0,    0,    0,  630,  630,
        0,    0,    0,    0,    0,  630,  631,  631,  631,    0,
        0,    0,    0,  631,  631,    0,  631,  631,    0,    0,
        0,    0,    0,    0,    0,  631,  631,  631,  631,  631,
      667,    0,    0,    0,    0,    0,    0,    0,    0,  667,
      667,  667,  667,  667,  667,  667,  667,  667,    0,    0,

        0,  667,  667,  668,    0,    0,    0,    0,    0,    0,
        0,    0,  668,  668,  668,  668,  668,  668,  668,  668,
      668,    0,    0,    0,  668,  668,  669,    0,    0,    0,
        0,    0,    0,    0,    0,  669,  669,  669,  669,  669,
      669,  669,  669,  669,    0,    0,    0,  669,  669,  670,
      670,  670,  670,  670,  670,  670,  670,  670,  670,    0,
      670,  670,    0,    0,    0,    0,    0,    0,    0,  670,
      670,  670,  670,  670,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  670,  670,    0,    0,    0,

        0,    0,    0,    0,  670,  670,  670,    0,    0,  670,
        0,    0,  670,    0,    0,    0,    0,    0,  670,  676,
      676,  676,  676,  676,  676,  676,  676,  676,  676,    0,
      676,  676,    0,    0,    0,    0,    0,    0,    0,  676,
      676,  676,  676,  676,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  676,  676,    0,    0,    0,
        0,    0,    0,    0,  676,  676,  676,  676,    0,    0,
        0,    0,  676,    0,    0,    0,    0,    0,  676,  679,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  679,

      679,  679,  679,  679,  679,  679,  679,  679,    0,    0,
      679,  679,  680,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  680,  680,  680,  680,  680,  680,  680,  680,
      680,    0,    0,  680,  680,  681,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  681,  681,  681,  681,  681,
      681,  681,  681,  681,    0,    0,  681,  681,  682,  682,
      682,  682,  682,  682,  682,  682,  682,  682,    0,  682,
        0,    0,    0,    0,    0,    0,    0,    0,  682,  682,
      682,    0,  682,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,  682,  682,    0,    0,    0,    0,
        0,    0,    0,  682,  682,  682,    0,    0,    0,    0,
        0,  682,    0,    0,    0,    0,    0,  682,  688,    0,
        0,    0,    0,    0,    0,    0,    0,  688,  688,  688,
      688,  688,  688,  688,  688,  688,  688,    0,    0,  688,
      689,    0,    0,    0,    0,    0,    0,    0,    0,  689,
      689,  689,  689,  689,  689,  689,  689,  689,  689,    0,
        0,  689,  691,  691,  691,  691,  691,  691,  691,  691,
      691,  691,    0,  691,    0,    0,    0,    0,    0,    0,
        0,    0,  691,  691,  691,    0,  691,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  691,  691,
        0,    0,    0,    0,    0,    0,    0,  691,  691,  691,
        0,    0,    0,    0,  691,  691,    0,    0,    0,    0,
        0,  691,  700,    0,    0,    0,    0,    0,    0,    0,
        0,  700,  700,  700,  700,  700,  700,  700,  700,  700,
        0,    0,    0,  700,  700,  701,    0,    0,    0,    0,
        0,    0,    0,    0,  701,  701,  701,  701,  701,  701,
      701,  701,  701,    0,    0,    0,  701,  701,  702,    0,
        0,    0,    0,    0,    0,    0,    0,  702,  702,  702,

      702,  702,  702,  702,  702,  702,    0,    0,    0,  702,
      702,  704,  704,  704,  704,  704,  704,  704,  704,  704,
      704,    0,  704,  704,    0,    0,    0,    0,    0,    0,
        0,  704,  704,  704,  704,  704,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  704,  704,    0,
        0,    0,    0,    0,    0,    0,  704,  704,  704,    0,
      704,    0,    0,    0,  704,    0,    0,    0,    0,    0,
      704,  712,  712,  712,  712,  712,  712,  712,  712,  712,
      712,    0,  712,  712,    0,    0,    0,    0,    0,    0,

        0,  712,  712,  712,  712,  712,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  712,  712,    0,
        0,    0,    0,    0,    0,    0,  712,  712,  712,    0,
        0,    0,    0,    0,  712,    0,    0,    0,    0,    0,
      712,  715,  715,  715,  715,  715,  715,  715,  715,  715,
      715,    0,  715,  715,    0,    0,    0,    0,    0,    0,
        0,  715,  715,  715,  715,  715,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  715,  715,    0,

        0,    0,    0,    0,    0,    0,  715,  715,  715,    0,
        0,    0,    0,    0,  715,    0,    0,    0,    0,    0,
      715,  716,  716,  716,  716,  716,  716,  716,  716,  716,
      716,    0,  716,  716,    0,    0,    0,    0,    0,    0,
        0,  716,  716,  716,  716,  716,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  716,  716,    0,
        0,    0,    0,    0,    0,    0,  716,  716,  716,    0,
        0,    0,    0,    0,  716,    0,    0,    0,    0,    0,
      716,  719,  719,  719,  719,  719,  719,  719,  719,  719,

      719,    0,  719,  719,    0,    0,    0,    0,    0,    0,
        0,  719,  719,  719,  719,  719,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  719,  719,    0,
        0,    0,    0,    0,    0,    0,  719,  719,  719,    0,
        0,    0,    0,    0,  719,    0,    0,    0,    0,    0,
      719,  720,  720,  720,  720,  720,  720,  720,  720,  720,
      720,    0,  720,  720,    0,    0,    0,    0,    0,    0,
        0,  720,  720,  720,  720,  720,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,  720,  720,    0,
        0,    0,    0,    0,    0,    0,  720,  720,  720,    0,
        0,    0,    0,    0,  720,    0,    0,    0,    0,    0,
      720,  723,  723,  723,  723,  723,  723,  723,  723,  723,
      723,    0,  723,  723,    0,    0,    0,    0,    0,    0,
        0,  723,  723,  723,  723,  723,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  723,  723,    0,
        0,    0,    0,    0,    0,    0,  723,  723,  723,    0,
        0,    0,    0,    0,  723,    0,    0,    0,    0,    0,

      723,  725,  725,  725,    0,    0,    0,    0,  725,  725,
        0,    0,  725,  725,  725,  725,  725,  725,  725,  725,
      725,  725,  725,  725,  725,  726,  726,  726,    0,    0,
        0,    0,  726,  726,    0,  726,  726,  726,  726,  726,
      726,  726,  726,  726,  726,  726,  726,  726,  726,  729,
      729,  729,  729,  729,  729,  729,  729,  729,  729,    0,
      729,  729,    0,    0,    0,    0,    0,    0,    0,  729,
      729,  729,  729,  729,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  729,  729,    0,    0,    0,

        0,    0,    0,    0,  729,  729,  729,  729,    0,    0,
        0,    0,  729,    0,    0,    0,    0,    0,  729,  731,
      731,  731,  731,  731,  731,  731,  731,    0,  731,    0,
        0,  731,    0,    0,    0,    0,    0,    0,    0,  731,
      731,  731,  731,  731,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  731,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  731,  733,
      733,  733,  733,  733,  733,  733,  733,    0,  733,    0,

        0,  733,    0,    0,    0,    0,    0,    0,    0,  733,
      733,  733,  733,  733,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  733,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  733,  734,
      734,  734,  734,  734,  734,  734,  734,  734,  734,    0,
      734,  734,    0,    0,    0,    0,    0,    0,    0,  734,
      734,  734,  734,  734,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,  734,  734,    0,    0,    0,
        0,    0,    0,    0,  734,  734,  734,    0,    0,    0,
        0,    0,  734,    0,    0,    0,    0,    0,  734,  763,
        0,    0,    0,    0,    0,    0,    0,    0,  763,  763,
      763,  763,  763,  763,  763,  763,  763,    0,    0,    0,
      763,  763,  764,    0,    0,    0,    0,    0,    0,    0,
        0,  764,  764,  764,  764,  764,  764,  764,  764,  764,
        0,    0,    0,  764,  764,  766,  766,  766,  766,  766,
      766,  766,  766,  766,  766,    0,  766,  766,    0,    0,
        0,    0,    0,    0,    0,  766,  766,  766,  766,  766,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  766,  766,    0,    0,    0,    0,    0,    0,    0,
      766,  766,  766,    0,    0,    0,    0,  766,  766,    0,
        0,    0,    0,    0,  766,  772,  772,  772,  772,  772,
      772,  772,  772,  772,  772,    0,  772,  772,    0,    0,
        0,    0,    0,    0,    0,  772,  772,  772,  772,  772,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  772,  772,    0,    0,    0,    0,    0,    0,    0,

      772,  772,  772,    0,    0,  772,    0,    0,  772,    0,
        0,    0,    0,    0,  772,  774,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  774,  774,  774,  774,  774,
      774,  774,  774,  774,    0,    0,  774,  774,  775,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  775,  775,
      775,  775,  775,  775,  775,  775,  775,    0,    0,  775,
      775,  785,  785,  785,  785,  785,  785,  785,  785,  785,
      785,    0,  785,    0,    0,    0,    0,    0,    0,    0,
        0,  785,  785,  785,    0,  785,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,  785,  785,    0,
        0,    0,    0,    0,    0,    0,  785,  785,  785,    0,
        0,    0,    0,    0,  785,    0,    0,    0,    0,    0,
      785,  793,    0,    0,    0,    0,    0,    0,    0,    0,
      793,  793,  793,  793,  793,  793,  793,  793,  793,    0,
        0,    0,  793,  793,  794,    0,    0,    0,    0,    0,
        0,    0,    0,  794,  794,  794,  794,  794,  794,  794,
      794,  794,    0,    0,    0,  794,  794,  796,  796,  796,
      796,  796,  796,  796,  796,  796,  796,    0,  796,  796,
        0,    0,    0,    0,    0,    0,    0,  796,  796,  796,

      796,  796,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  796,  796,    0,    0,    0,    0,    0,
        0,    0,  796,  796,  796,  796,    0,    0,    0,    0,
      796,    0,    0,    0,    0,    0,  796,  803,  803,  803,
      803,  803,  803,  803,  803,  803,  803,    0,  803,  803,
        0,    0,    0,    0,    0,    0,    0,  803,  803,  803,
      803,  803,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  803,  803,    0,    0,    0,    0,    0,

        0,    0,  803,  803,  803,    0,  803,    0,    0,    0,
      803,    0,    0,    0,    0,    0,  803,  811,  811,  811,
      811,  811,  811,  811,  811,  811,  811,    0,  811,  811,
        0,    0,    0,    0,    0,    0,    0,  811,  811,  811,
      811,  811,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  811,  811,    0,    0,    0,    0,    0,
        0,    0,  811,  811,  811,    0,    0,  811,    0,    0,
      811,    0,    0,    0,    0,    0,  811,  838,    0,    0,
        0,    0,    0,    0,    0,    0,    0,  838,  838,  838,

      838,  838,  838,  838,  838,  838,    0,    0,  838,  838,
      839,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      839,  839,  839,  839,  839,  839,  839,  839,  839,    0,
        0,  839,  839,  840,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  840,  840,  840,  840,  840,  840,  840,
      840,  840,    0,    0,  840,  840,  841,  841,  841,  841,
      841,  841,  841,  841,  841,  841,    0,  841,  841,    0,
        0,    0,    0,    0,    0,    0,  841,  841,  841,  841,
      841,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,  841,  841,    0,    0,    0,    0,    0,    0,
        0,  841,  841,  841,    0,    0,    0,    0,    0,  841,
        0,    0,    0,    0,    0,  841,  846,  846,  846,  846,
      846,  846,  846,  846,  846,  846,    0,  846,  846,    0,
        0,    0,    0,    0,    0,    0,  846,  846,  846,  846,
      846,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,  846,  846,    0,    0,    0,    0,    0,    0,
        0,  846,  846,  846,    0,    0,    0,    0,  846,  846,
        0,    0,    0,    0,    0,  846,  860,    0,    0,    0,

        0,    0,    0,    0,    0,  860,  860,  860,  860,  860,
      860,  860,  860,  860,    0,    0,    0,  860,  860,  861,
        0,    0,    0,    0,    0,    0,    0,    0,  861,  861,
      861,  861,  861,  861,  861,  861,  861,    0,    0,    0,
      861,  861,  862,    0,    0,    0,    0,    0,    0,    0,
        0,  862,  862,  862,  862,  862,  862,  862,  862,  862,
        0,    0,    0,  862,  862,  863,  863,  863,  863,  863,
      863,  863,  863,  863,  863,    0,  863,  863,    0,    0,
        0,    0,    0,    0,    0,  863,  863,  863,  863,  863,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,

        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  863,  863,    0,    0,    0,    0,    0,    0,    0,
      863,  863,  863,    0,    0,  863,    0,    0,  863,    0,
        0,    0,    0,    0,  863,  869,  869,  869,  869,  869,
      869,  869,  869,  869,  869,    0,  869,  869,    0,    0,
        0,    0,    0,    0,    0,  869,  869,  869,  869,  869,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
        0,  869,  869,    0,    0,    0,    0,    0,    0,    0,
      869,  869,  869,  869,    0,    0,    0,    0,  869,    0,

        0,    0,    0,    0,  869,  900,    0,    0,    0,    0,
        0,    0,    0,    0,    0,  900,  900,  900,  900,  900,
      900,  900,  900,  900,    0,    0,  900,  900,  901,    0,
        0,    0,    0,    0,    0,    0,    0,    0,  901,  901,
      901,  901,  901,  901,  901,  901,  901,    0,    0,  901,
      901,  914,    0,    0,    0,    0,    0,    0,    0,    0,
      914,  914,  914,  914,  914,  914,  914,  914,  914,    0,
        0,    0,  914,  914,  915,    0,    0,    0,    0,    0,
        0,    0,    0,  915,  915,  915,  915,  915,  915,  915,
      915,  915,    0,    0,    0,  915,  915,  960,    0,    0,

        0,    0,    0,    0,    0,    0,    0,  960,  960,  960,
      960,  960,  960,  960,  960,  960,    0,    0,  960,  960,
      961,    0,    0,    0,    0,    0,    0,    0,    0,    0,
      961,  961,  961,  961,  961,  961,  961,  961,  961,    0,
        0,  961,  961,  962,    0,    0,    0,    0,    0,    0,
        0,    0,    0,  962,  962,  962,  962,  962,  962,  962,
      962,  962,    0,    0,  962,  962,  997,    0,    0,    0,
        0,    0,    0,    0,    0,    0,  997,  997,  997,  997,
      997,  997,  997,  997,  997,    0,    0,  997,  997,  998,
        0,    0,    0,    0,    0,    0,    0,    0,    0,  998,

      998,  998,  998,  998,  998,  998,  998,  998,    0,    0,
      998,  998, 1095, 1095, 1095, 1095, 1095, 1095, 1095, 1096,
     1096, 1096, 1096, 1096, 1096, 1096, 1097, 1097, 1097, 1097,
     1097, 1099, 1099, 1099,    0, 1099, 1100,    0, 1100, 1100,
     1101, 1101, 1101, 1101, 1101, 1102, 1102, 1102, 1102, 1102,
     1103, 1103, 1103, 1103, 1103, 1104, 1104, 1104, 1104, 1104,
     1105,    0, 1105,    0, 1105, 1106,    0, 1106, 1106, 1107,
     1107, 1107, 1107, 1107, 1112,    0, 1112, 1112, 1113, 1113,
     1113, 1113, 1113, 1114, 1114, 1114, 1114, 1114, 1115, 1115,
     1115, 1115, 1115, 1116, 1116, 1116, 1116, 1116, 1117,    0,

     1117, 1117, 1117, 1117, 1117, 1119, 1119, 1119, 1119, 1119,
     1121,    0, 1121, 1122, 1122, 1122, 1122, 1122, 1124, 1124,
     1124, 1124, 1124, 1126,    0, 1126,    0, 1126, 1127, 1127,
     1127, 1127, 1127, 1128, 1128, 1128, 1128, 1128, 1129, 1129,
     1129, 1129, 1129, 1130, 1130, 1130, 1130, 1130, 1132,    0,
     1132, 1132, 1133,    0, 1133, 1133, 1134,    0, 1134, 1134,
     1135,    0, 1135, 1135, 1136,    0, 1136, 1136, 1138,    0,
     1138, 1138, 1139,    0, 1139, 1139, 1141, 1141, 1141, 1141,
     1141, 1142,    0, 1142, 1142, 1143, 1143, 1143, 1143, 1143,
     1144, 1144, 1144, 1144, 1144, 1145, 1145, 1145, 1145, 1145,

     1146, 1146, 1146, 1146, 1146, 1148, 1148, 1148,    0, 1148,
     1149, 1149, 1149, 1149, 1149, 1150, 1150, 1150, 1150, 1150,
     1151, 1151, 1151, 1151, 1151, 1152, 1152, 1152, 1152, 1152,
     1153, 1153, 1153, 1153, 1153, 1154, 1154, 1154, 1154, 1154,
     1155, 1155, 1155, 1155, 1155, 1156,    0, 1156, 1156, 1156,
     1156, 1156, 1157,    0, 1157, 1158, 1158, 1158, 1158, 1158,
     1161, 1161, 1161, 1161, 1161, 1163, 1163, 1163, 1163, 1163,
     1166, 1166, 1166, 1166, 1166, 1168, 1168, 1168, 1168, 1168,
     1169, 1169, 1169, 1169, 1169, 1170, 1170, 1170, 1170, 1170,
     1172, 1172, 1172, 1172, 1172, 1173, 1173, 1173, 1173, 1173,

     1174, 1174, 1174, 1174, 1174, 1175, 1175, 1175, 1175, 1175,
     1176, 1176, 1176, 1176, 1176, 1177, 1177, 1177, 1177, 1177,
     1178,    0, 1178, 1178, 1179,    0, 1179, 1179, 1180,    0,
     1180, 1180, 1181,    0, 1181, 1181, 1183,    0, 1183, 1183,
     1184,    0, 1184, 1184, 1185,    0, 1185, 1185, 1186, 1186,
     1186, 1186, 1186, 1187,    0, 1187, 1187, 1188, 1188, 1188,
     1188, 1188, 1190, 1190, 1190, 1190, 1190, 1192, 1192, 1192,
     1192, 1192, 1194, 1194, 1194, 1194, 1194, 1197, 1197, 1197,
     1197, 1197, 1198, 1198, 1198, 1198, 1198, 1199, 1199, 1199,
     1199, 1199, 1200, 1200, 1200, 1200, 1200, 1201, 1201, 1201,

     1201, 1201, 1202, 1202, 1202, 1202, 1202, 1203, 1203, 1203,
     1203, 1203, 1204, 1204, 1204, 1204, 1204, 1206, 1206, 1206,
     1206, 1206, 1208, 1208, 1208, 1208, 1208, 1211,    0, 1211,
     1212, 1212, 1212, 1212, 1212, 1214, 1214, 1214, 1214, 1214,
     1215, 1215, 1215, 1215, 1215, 1217, 1217, 1217, 1217, 1217,
     1218, 1218, 1218, 1218, 1218, 1219, 1219, 1219, 1219, 1219,
     1220, 1220, 1220, 1220, 1220, 1221, 1221, 1221, 1221, 1221,
     1222,    0, 1222, 1222, 1223,    0, 1223, 1223, 1224,    0,
     1224, 1224, 1225, 1225, 1225, 1225, 1225, 1226,    0, 1226,
     1226, 1228,    0, 1228, 1229, 1229, 1229, 1229, 1229, 1231,

     1231, 1231, 1231, 1231, 1233,    0, 1233,    0, 1233, 1234,
     1234, 1234, 1234, 1234, 1235, 1235, 1235, 1235, 1235, 1236,
     1236, 1236, 1236, 1236, 1237, 1237, 1237, 1237, 1237, 1241,
     1241, 1241, 1241, 1241, 1242, 1242, 1242, 1242, 1242, 1243,
     1243, 1243, 1243, 1243, 1244, 1244, 1244, 1244, 1244, 1245,
     1245, 1245, 1245, 1245, 1246,    0, 1246,    0, 1246, 1247,
     1247, 1247, 1247, 1247, 1248, 1248, 1248, 1248, 1248, 1249,
     1249, 1249, 1249, 1249, 1250, 1250, 1250, 1250, 1250, 1251,
     1251, 1251, 1251, 1251, 1254, 1254, 1254, 1254, 1254, 1256,
     1256, 1256, 1256, 1256, 1258, 1258, 1258, 1258, 1258, 1260,

     1260, 1260, 1260, 1260, 1261, 1261, 1261, 1261, 1261, 1262,
     1262, 1262, 1262, 1262, 1263, 1263, 1263, 1263, 1263, 1264,
     1264, 1264, 1264, 1264, 1265,    0, 1265, 1265, 1266,    0,
     1266, 1266, 1267,    0, 1267, 1267, 1268, 1268, 1268, 1268,
     1268, 1269,    0, 1269, 1269, 1270, 1270, 1270, 1270, 1270,
     1272, 1272, 1272, 1272, 1272, 1275, 1275, 1275, 1275, 1275,
     1277, 1277, 1277, 1277, 1277, 1278, 1278, 1278, 1278, 1278,
     1279, 1279, 1279, 1279, 1279, 1281, 1281, 1281, 1281, 1281,
     1282, 1282, 1282, 1282, 1282, 1283, 1283, 1283, 1283, 1283,
     1284, 1284, 1284, 1284, 1284, 1285, 1285, 1285, 1285, 1285,

     1287, 1287, 1287, 1287, 1287, 1288, 1288, 1288, 1288, 1288,
     1289, 1289, 1289, 1289, 1289, 1290, 1290, 1290, 1290, 1290,
     1291, 1291, 1291, 1291, 1291, 1292, 1292, 1292, 1292, 1292,
     1293, 1293, 1293, 1293, 1293, 1296, 1296, 1296, 1296, 1296,
     1299, 1299, 1299, 1299, 1299, 1300, 1300, 1300, 1300, 1300,
     1301, 1301, 1301, 1301, 1301, 1302, 1302, 1302, 1302, 1302,
     1303, 1303, 1303, 1303, 1303, 1304,    0, 1304, 1304, 1305,
        0, 1305, 1305, 1306, 1306, 1306, 1306, 1306, 1307,    0,
     1307, 1307, 1308, 1308, 1308, 1308, 1308, 1311,    0, 1311,
     1312, 1312, 1312, 1312, 1312, 1314, 1314, 1314, 1314, 1314,

     1315, 1315, 1315, 1315, 1315, 1317, 1317, 1317, 1317, 1317,
     1318, 1318, 1318, 1318, 1318, 1319, 1319, 1319, 1319, 1319,
     1320, 1320, 1320, 1320, 1320, 1321, 1321, 1321, 1321, 1321,
     1322, 1322, 1322, 1322, 1322, 1323, 1323, 1323, 1323, 1323,
     1324, 1324, 1324, 1324, 1324, 1325, 1325, 1325, 1325, 1325,
     1327, 1327, 1327, 1327, 1327, 1329, 1329, 1329, 1329, 1329,
     1330, 1330, 1330, 1330, 1330, 1331, 1331, 1331, 1331, 1331,
     1332, 1332, 1332, 1332, 1332, 1333, 1333, 1333, 1333, 1333,
     1334,    0, 1334, 1334, 1335, 1335, 1335, 1335, 1335, 1336,
        0, 1336, 1336, 1337, 1337, 1337, 1337, 1337, 1339, 1339,

     1339, 1339, 1339, 1341, 1341, 1341, 1341, 1341, 1343, 1343,
     1343, 1343, 1343, 1344, 1344, 1344, 1344, 1344, 1345, 1345,
     1345, 1345, 1345, 1348, 1348, 1348, 1348, 1348, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,
     1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094, 1094,

     1094, 1094, 1094
    } ;

/* Table of booleans, true if rule could match eol. */
static const flex_int32_t yy_rule_can_match_eol[67] =
    {   0,
0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
    0, 0, 0, 1, 0, 0, 0,     };

static const flex_int16_t yy_rule_linenum[66] =
    {   0,
       81,   83,   84,   85,   86,   87,   88,   89,   90,   91,
       92,   93,   94,   96,   97,   98,   99,  100,  101,  102,
      103,  104,  106,  107,  108,  109,  110,  111,  112,  113,
      114,  115,  116,  117,  118,  119,  120,  121,  122,  123,
      124,  125,  127,  128,  129,  130,  131,  132,  133,  134,
      135,  137,  138,  139,  140,  141,  142,  143,  144,  145,
      146,  148,  151,  152,  154
    } ;

/* The intent behind this definition is that it'll catch
 * any uses of REJECT which flex missed.
 */
#define REJECT reject_used_but_not_detected
#define yymore() yymore_used_but_not_detected
#define YY_MORE_ADJ 0
#define YY_RESTORE_YY_MORE_OFFSET
#line 1 "http11.l"
#line 2 "http11.l"
#include "http11.tab.hh"
#include "http11driver.hh"
#include <string>
#include <iostream>

#undef  YY_DECL
#define YY_DECL int iotcloud::http11scanner::yylex(iotcloud::parser::semantic_type * const lval, iotcloud::parser::location_type *loc)

using token = iotcloud::parser::token;

#define YY_USER_ACTION loc->step(); loc->columns(yyleng);

#define tokVOID(tok) { return token::tok; }
#define tokINT(tok) { yylval->emplace<int>(std::stoi(yytext)); return token::tok; }
#define tokFLOAT(tok) { yylval->emplace<float>(std::stof(yytext)); return token::tok; }
#define tokSTRING(tok) { yylval->emplace<std::string>(yytext); return token::tok; }
#define tokCHAR(tok) { yylval->emplace<char>(*yytext); return token::tok; }
#define tokMETHOD(value) { yylval->emplace<http_header_request::METHOD>(http_header_request::METHOD::value); return token::METHOD; }
#define tokVERSION(value) { BEGIN(HEADER); yylval->emplace<http_header::VERSION>(http_header::VERSION::value); return token::VERSION; }
#define tokFIELD(value) { yylval->emplace<http_header::FIELD>(http_header::FIELD::value); return token::FIELD; }
#define tokFIELDVALUE(tok) { yylval->emplace<std::string>(skipFirstAndSpace(yytext)); return token::tok; }
#define tokFIELDCOLON(tok) { return token::tok; }

#define yyterminate() tokVOID(END)

#line 4020 "lex.yy.cc"

#line 4022 "lex.yy.cc"

#define INITIAL 0
#define REQUEST 1
#define RESPONSE 2
#define HEADER 3
#define BODY 4

#ifndef YY_NO_UNISTD_H
/* Special case for "unistd.h", since it is non-ANSI. We include it way
 * down here because we want the user's section 1 to have been scanned first.
 * The user has a chance to override it with an option.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
#include <unistd.h>
/* %endif */
#endif

#ifndef YY_EXTRA_TYPE
#define YY_EXTRA_TYPE void *
#endif

/* %if-c-only Reentrant structure and macros (non-C++). */
/* %if-reentrant */
/* %if-c-only */
/* %endif */
/* %if-reentrant */
/* %endif */
/* %endif End reentrant structures and macros. */
/* %if-bison-bridge */
/* %endif */
/* %not-for-header */
/* %ok-for-header */

/* %endif */

#ifndef yytext_ptr
static void yy_flex_strncpy ( char *, const char *, int );
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen ( const char * );
#endif

#ifndef YY_NO_INPUT
/* %if-c-only Standard (non-C++) definition */
/* %not-for-header */
/* %ok-for-header */

/* %endif */
#endif

/* %if-c-only */
/* %endif */

/* Amount of stuff to slurp up with each read. */
#ifndef YY_READ_BUF_SIZE
#ifdef __ia64__
/* On IA-64, the buffer size is 16k, not 8k */
#define YY_READ_BUF_SIZE 16384
#else
#define YY_READ_BUF_SIZE 8192
#endif /* __ia64__ */
#endif

/* Copy whatever the last rule matched to the standard output. */
#ifndef ECHO
/* %if-c-only Standard (non-C++) definition */
/* %endif */
/* %if-c++-only C++ definition */
#define ECHO LexerOutput( yytext, yyleng )
/* %endif */
#endif

/* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
 * is returned in "result".
 */
#ifndef YY_INPUT
#define YY_INPUT(buf,result,max_size) \
/* %% [5.0] fread()/read() definition of YY_INPUT goes here unless we're doing C++ \ */\
\
/* %if-c++-only C++ definition \ */\
	if ( (int)(result = LexerInput( (char *) buf, max_size )) < 0 ) \
		YY_FATAL_ERROR( "input in flex scanner failed" );
/* %endif */

#endif

/* No semi-colon after return; correct usage is to write "yyterminate();" -
 * we don't want an extra ';' after the "return" because that will cause
 * some compilers to complain about unreachable statements.
 */
#ifndef yyterminate
#define yyterminate() return YY_NULL
#endif

/* Number of entries by which start-condition stack grows. */
#ifndef YY_START_STACK_INCR
#define YY_START_STACK_INCR 25
#endif

/* Report a fatal error. */
#ifndef YY_FATAL_ERROR
/* %if-c-only */
/* %endif */
/* %if-c++-only */
#define YY_FATAL_ERROR(msg) LexerError( msg )
/* %endif */
#endif

/* %if-tables-serialization structures and prototypes */
/* %not-for-header */
/* %ok-for-header */

/* %not-for-header */
/* %tables-yydmap generated elements */
/* %endif */
/* end tables serialization structures and prototypes */

/* %ok-for-header */

/* Default declaration of generated scanner - a define so the user can
 * easily add parameters.
 */
#ifndef YY_DECL
#define YY_DECL_IS_OURS 1
/* %if-c-only Standard (non-C++) definition */
/* %endif */
/* %if-c++-only C++ definition */
#define YY_DECL int yyFlexLexer::yylex()
/* %endif */
#endif /* !YY_DECL */

/* Code executed at the beginning of each rule, after yytext and yyleng
 * have been set up.
 */
#ifndef YY_USER_ACTION
#define YY_USER_ACTION
#endif

/* Code executed at the end of each rule. */
#ifndef YY_BREAK
#define YY_BREAK /*LINTED*/break;
#endif

/* %% [6.0] YY_RULE_SETUP definition goes here */
#define YY_RULE_SETUP \
	YY_USER_ACTION

/* %not-for-header */
/** The main scanner function which does all the work.
 */
YY_DECL
{
	yy_state_type yy_current_state;
	char *yy_cp, *yy_bp;
	int yy_act;
    
	if ( !(yy_init) )
		{
		(yy_init) = 1;

#ifdef YY_USER_INIT
		YY_USER_INIT;
#endif

		if ( ! (yy_start) )
			(yy_start) = 1;	/* first start state */

		if ( ! yyin )
/* %if-c-only */
/* %endif */
/* %if-c++-only */
			yyin.rdbuf(std::cin.rdbuf());
/* %endif */

		if ( ! yyout )
/* %if-c-only */
/* %endif */
/* %if-c++-only */
			yyout.rdbuf(std::cout.rdbuf());
/* %endif */

		if ( ! YY_CURRENT_BUFFER ) {
			yyensure_buffer_stack ();
			YY_CURRENT_BUFFER_LVALUE =
				yy_create_buffer( yyin, YY_BUF_SIZE );
		}

		yy_load_buffer_state(  );
		}

	{
/* %% [7.0] user's declarations go here */
#line 74 "http11.l"


#line 77 "http11.l"
    yylval = lval;
    loc->step();


#line 4226 "lex.yy.cc"

	while ( /*CONSTCOND*/1 )		/* loops until end-of-file is reached */
		{
/* %% [8.0] yymore()-related code goes here */
		yy_cp = (yy_c_buf_p);

		/* Support of yytext. */
		*yy_cp = (yy_hold_char);

		/* yy_bp points to the position in yy_ch_buf of the start of
		 * the current run.
		 */
		yy_bp = yy_cp;

/* %% [9.0] code to set up and find next match goes here */
		yy_current_state = (yy_start);
yy_match:
		do
			{
			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)] ;
			if ( yy_accept[yy_current_state] )
				{
				(yy_last_accepting_state) = yy_current_state;
				(yy_last_accepting_cpos) = yy_cp;
				}
			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
				{
				yy_current_state = (int) yy_def[yy_current_state];
				if ( yy_current_state >= 1095 )
					yy_c = yy_meta[yy_c];
				}
			yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
			++yy_cp;
			}
		while ( yy_current_state != 1094 );
		yy_cp = (yy_last_accepting_cpos);
		yy_current_state = (yy_last_accepting_state);

yy_find_action:
/* %% [10.0] code to find the action number goes here */
		yy_act = yy_accept[yy_current_state];

		YY_DO_BEFORE_ACTION;

/* %% [11.0] code for yylineno update goes here */

		if ( yy_act != YY_END_OF_BUFFER && yy_rule_can_match_eol[yy_act] )
			{
			int yyl;
			for ( yyl = 0; yyl < yyleng; ++yyl )
				if ( yytext[yyl] == '\n' )
					
    yylineno++;
;
			}

do_action:	/* This label is used only to access EOF actions. */

/* %% [12.0] debug code goes here */
		if ( yy_flex_debug )
			{
			if ( yy_act == 0 )
				std::cerr << "--scanner backing up\n";
			else if ( yy_act < 66 )
				std::cerr << "--accepting rule at line " << yy_rule_linenum[yy_act] <<
				         "(\"" << yytext << "\")\n";
			else if ( yy_act == 66 )
				std::cerr << "--accepting default rule (\"" << yytext << "\")\n";
			else if ( yy_act == 67 )
				std::cerr << "--(end of buffer or a NUL)\n";
			else
				std::cerr << "--EOF (start condition " << YY_START << ")\n";
			}

		switch ( yy_act )
	{ /* beginning of action switch */
/* %% [13.0] actions go here */
			case 0: /* must back up */
			/* undo the effects of YY_DO_BEFORE_ACTION */
			*yy_cp = (yy_hold_char);
			yy_cp = (yy_last_accepting_cpos);
			yy_current_state = (yy_last_accepting_state);
			goto yy_find_action;

case 1:
YY_RULE_SETUP
#line 81 "http11.l"
tokFIELDCOLON(COLON)
	YY_BREAK
case 2:
YY_RULE_SETUP
#line 83 "http11.l"
tokMETHOD(OPTIONS)
	YY_BREAK
case 3:
YY_RULE_SETUP
#line 84 "http11.l"
tokMETHOD(GET)
	YY_BREAK
case 4:
YY_RULE_SETUP
#line 85 "http11.l"
tokMETHOD(HEAD)
	YY_BREAK
case 5:
YY_RULE_SETUP
#line 86 "http11.l"
tokMETHOD(POST)
	YY_BREAK
case 6:
YY_RULE_SETUP
#line 87 "http11.l"
tokMETHOD(PUT)
	YY_BREAK
case 7:
YY_RULE_SETUP
#line 88 "http11.l"
tokMETHOD(DELETE)
	YY_BREAK
case 8:
YY_RULE_SETUP
#line 89 "http11.l"
tokMETHOD(TRACE)
	YY_BREAK
case 9:
YY_RULE_SETUP
#line 90 "http11.l"
tokMETHOD(CONNECT)
	YY_BREAK
case 10:
YY_RULE_SETUP
#line 91 "http11.l"
tokVERSION(VER_1_1)
	YY_BREAK
case 11:
YY_RULE_SETUP
#line 92 "http11.l"
tokVERSION(VER_2)
	YY_BREAK
case 12:
YY_RULE_SETUP
#line 93 "http11.l"
tokVERSION(VER_3)
	YY_BREAK
case 13:
YY_RULE_SETUP
#line 94 "http11.l"
tokSTRING(PATH)
	YY_BREAK
case 14:
YY_RULE_SETUP
#line 96 "http11.l"
tokFIELD(Cache_Control)
	YY_BREAK
case 15:
YY_RULE_SETUP
#line 97 "http11.l"
tokFIELD(Connection)
	YY_BREAK
case 16:
YY_RULE_SETUP
#line 98 "http11.l"
tokFIELD(Date)
	YY_BREAK
case 17:
YY_RULE_SETUP
#line 99 "http11.l"
tokFIELD(Pragma)
	YY_BREAK
case 18:
YY_RULE_SETUP
#line 100 "http11.l"
tokFIELD(Trailer)
	YY_BREAK
case 19:
YY_RULE_SETUP
#line 101 "http11.l"
tokFIELD(Transfer_Encoding)
	YY_BREAK
case 20:
YY_RULE_SETUP
#line 102 "http11.l"
tokFIELD(Upgrade)
	YY_BREAK
case 21:
YY_RULE_SETUP
#line 103 "http11.l"
tokFIELD(Via)
	YY_BREAK
case 22:
YY_RULE_SETUP
#line 104 "http11.l"
tokFIELD(Warning)
	YY_BREAK
case 23:
YY_RULE_SETUP
#line 106 "http11.l"
tokFIELD(Accept)
	YY_BREAK
case 24:
YY_RULE_SETUP
#line 107 "http11.l"
tokFIELD(Accept_Charset)
	YY_BREAK
case 25:
YY_RULE_SETUP
#line 108 "http11.l"
tokFIELD(Accept_Encoding)
	YY_BREAK
case 26:
YY_RULE_SETUP
#line 109 "http11.l"
tokFIELD(Accept_Language)
	YY_BREAK
case 27:
YY_RULE_SETUP
#line 110 "http11.l"
tokFIELD(Authorization)
	YY_BREAK
case 28:
YY_RULE_SETUP
#line 111 "http11.l"
tokFIELD(Expect)
	YY_BREAK
case 29:
YY_RULE_SETUP
#line 112 "http11.l"
tokFIELD(From)
	YY_BREAK
case 30:
YY_RULE_SETUP
#line 113 "http11.l"
tokFIELD(Host)
	YY_BREAK
case 31:
YY_RULE_SETUP
#line 114 "http11.l"
tokFIELD(If_Match)
	YY_BREAK
case 32:
YY_RULE_SETUP
#line 115 "http11.l"
tokFIELD(If_Modified_Since)
	YY_BREAK
case 33:
YY_RULE_SETUP
#line 116 "http11.l"
tokFIELD(If_None_Match)
	YY_BREAK
case 34:
YY_RULE_SETUP
#line 117 "http11.l"
tokFIELD(If_Range)
	YY_BREAK
case 35:
YY_RULE_SETUP
#line 118 "http11.l"
tokFIELD(If_Unmodified_Since)
	YY_BREAK
case 36:
YY_RULE_SETUP
#line 119 "http11.l"
tokFIELD(Max_Forwards)
	YY_BREAK
case 37:
YY_RULE_SETUP
#line 120 "http11.l"
tokFIELD(Proxy_Authorization)
	YY_BREAK
case 38:
YY_RULE_SETUP
#line 121 "http11.l"
tokFIELD(Range)
	YY_BREAK
case 39:
YY_RULE_SETUP
#line 122 "http11.l"
tokFIELD(Referer)
	YY_BREAK
case 40:
YY_RULE_SETUP
#line 123 "http11.l"
tokFIELD(TE)
	YY_BREAK
case 41:
YY_RULE_SETUP
#line 124 "http11.l"
tokFIELD(User_Agent)
	YY_BREAK
case 42:
YY_RULE_SETUP
#line 125 "http11.l"
tokFIELD(HTTP2_Settings)
	YY_BREAK
case 43:
YY_RULE_SETUP
#line 127 "http11.l"
tokFIELD(Accept_Ranges)
	YY_BREAK
case 44:
YY_RULE_SETUP
#line 128 "http11.l"
tokFIELD(Age)
	YY_BREAK
case 45:
YY_RULE_SETUP
#line 129 "http11.l"
tokFIELD(ETag)
	YY_BREAK
case 46:
YY_RULE_SETUP
#line 130 "http11.l"
tokFIELD(Location)
	YY_BREAK
case 47:
YY_RULE_SETUP
#line 131 "http11.l"
tokFIELD(Proxy_Authenticate)
	YY_BREAK
case 48:
YY_RULE_SETUP
#line 132 "http11.l"
tokFIELD(Retry_After)
	YY_BREAK
case 49:
YY_RULE_SETUP
#line 133 "http11.l"
tokFIELD(Server)
	YY_BREAK
case 50:
YY_RULE_SETUP
#line 134 "http11.l"
tokFIELD(Vary)
	YY_BREAK
case 51:
YY_RULE_SETUP
#line 135 "http11.l"
tokFIELD(WWW_Authenticate)
	YY_BREAK
case 52:
YY_RULE_SETUP
#line 137 "http11.l"
tokFIELD(Allow)
	YY_BREAK
case 53:
YY_RULE_SETUP
#line 138 "http11.l"
tokFIELD(Content_Encoding)
	YY_BREAK
case 54:
YY_RULE_SETUP
#line 139 "http11.l"
tokFIELD(Content_Language)
	YY_BREAK
case 55:
YY_RULE_SETUP
#line 140 "http11.l"
tokFIELD(Content_Length)
	YY_BREAK
case 56:
YY_RULE_SETUP
#line 141 "http11.l"
tokFIELD(Content_Location)
	YY_BREAK
case 57:
YY_RULE_SETUP
#line 142 "http11.l"
tokFIELD(Content_MD5)
	YY_BREAK
case 58:
YY_RULE_SETUP
#line 143 "http11.l"
tokFIELD(Content_Range)
	YY_BREAK
case 59:
YY_RULE_SETUP
#line 144 "http11.l"
tokFIELD(Content_Type)
	YY_BREAK
case 60:
YY_RULE_SETUP
#line 145 "http11.l"
tokFIELD(Expires)
	YY_BREAK
case 61:
YY_RULE_SETUP
#line 146 "http11.l"
tokFIELD(Last_Modified)
	YY_BREAK
case 62:
YY_RULE_SETUP
#line 148 "http11.l"
tokFIELDVALUE(FIELD_VALUE)
	YY_BREAK
case 63:
/* rule 63 can match eol */
YY_RULE_SETUP
#line 151 "http11.l"
{ loc->lines(); tokVOID(NEWLINE) }
	YY_BREAK
case 64:
YY_RULE_SETUP
#line 152 "http11.l"
tokVOID(SPACE)
	YY_BREAK
case 65:
YY_RULE_SETUP
#line 154 "http11.l"
tokCHAR(CHAR)
	YY_BREAK
case 66:
YY_RULE_SETUP
#line 156 "http11.l"
ECHO;
	YY_BREAK
#line 4642 "lex.yy.cc"
case YY_STATE_EOF(INITIAL):
case YY_STATE_EOF(REQUEST):
case YY_STATE_EOF(RESPONSE):
case YY_STATE_EOF(HEADER):
case YY_STATE_EOF(BODY):
	yyterminate();

	case YY_END_OF_BUFFER:
		{
		/* Amount of text matched not including the EOB char. */
		int yy_amount_of_matched_text = (int) (yy_cp - (yytext_ptr)) - 1;

		/* Undo the effects of YY_DO_BEFORE_ACTION. */
		*yy_cp = (yy_hold_char);
		YY_RESTORE_YY_MORE_OFFSET

		if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_NEW )
			{
			/* We're scanning a new file or input source.  It's
			 * possible that this happened because the user
			 * just pointed yyin at a new source and called
			 * yylex().  If so, then we have to assure
			 * consistency between YY_CURRENT_BUFFER and our
			 * globals.  Here is the right place to do so, because
			 * this is the first action (other than possibly a
			 * back-up) that will match for the new input source.
			 */
			(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
/* %if-c-only */
/* %endif */
/* %if-c++-only */
			YY_CURRENT_BUFFER_LVALUE->yy_input_file = yyin.rdbuf();
/* %endif */
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status = YY_BUFFER_NORMAL;
			}

		/* Note that here we test for yy_c_buf_p "<=" to the position
		 * of the first EOB in the buffer, since yy_c_buf_p will
		 * already have been incremented past the NUL character
		 * (since all states make transitions on EOB to the
		 * end-of-buffer state).  Contrast this with the test
		 * in input().
		 */
		if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			{ /* This was really a NUL. */
			yy_state_type yy_next_state;

			(yy_c_buf_p) = (yytext_ptr) + yy_amount_of_matched_text;

			yy_current_state = yy_get_previous_state(  );

			/* Okay, we're now positioned to make the NUL
			 * transition.  We couldn't have
			 * yy_get_previous_state() go ahead and do it
			 * for us because it doesn't know how to deal
			 * with the possibility of jamming (and we don't
			 * want to build jamming into it because then it
			 * will run more slowly).
			 */

			yy_next_state = yy_try_NUL_trans( yy_current_state );

			yy_bp = (yytext_ptr) + YY_MORE_ADJ;

			if ( yy_next_state )
				{
				/* Consume the NUL. */
				yy_cp = ++(yy_c_buf_p);
				yy_current_state = yy_next_state;
				goto yy_match;
				}

			else
				{
/* %% [14.0] code to do back-up for compressed tables and set up yy_cp goes here */
				yy_cp = (yy_last_accepting_cpos);
				yy_current_state = (yy_last_accepting_state);
				goto yy_find_action;
				}
			}

		else switch ( yy_get_next_buffer(  ) )
			{
			case EOB_ACT_END_OF_FILE:
				{
				(yy_did_buffer_switch_on_eof) = 0;

				if ( yywrap(  ) )
					{
					/* Note: because we've taken care in
					 * yy_get_next_buffer() to have set up
					 * yytext, we can now set up
					 * yy_c_buf_p so that if some total
					 * hoser (like flex itself) wants to
					 * call the scanner after we return the
					 * YY_NULL, it'll still work - another
					 * YY_NULL will get returned.
					 */
					(yy_c_buf_p) = (yytext_ptr) + YY_MORE_ADJ;

					yy_act = YY_STATE_EOF(YY_START);
					goto do_action;
					}

				else
					{
					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
					}
				break;
				}

			case EOB_ACT_CONTINUE_SCAN:
				(yy_c_buf_p) =
					(yytext_ptr) + yy_amount_of_matched_text;

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_match;

			case EOB_ACT_LAST_MATCH:
				(yy_c_buf_p) =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)];

				yy_current_state = yy_get_previous_state(  );

				yy_cp = (yy_c_buf_p);
				yy_bp = (yytext_ptr) + YY_MORE_ADJ;
				goto yy_find_action;
			}
		break;
		}

	default:
		YY_FATAL_ERROR(
			"fatal flex scanner internal error--no action found" );
	} /* end of action switch */
		} /* end of scanning one token */
	} /* end of user's declarations */
} /* end of yylex */
/* %ok-for-header */

/* %if-c++-only */
/* %not-for-header */
/* The contents of this function are C++ specific, so the () macro is not used.
 * This constructor simply maintains backward compatibility.
 * DEPRECATED
 */
yyFlexLexer::yyFlexLexer( std::istream* arg_yyin, std::ostream* arg_yyout ):
	yyin(arg_yyin ? arg_yyin->rdbuf() : std::cin.rdbuf()),
	yyout(arg_yyout ? arg_yyout->rdbuf() : std::cout.rdbuf())
{
	ctor_common();
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::yyFlexLexer( std::istream& arg_yyin, std::ostream& arg_yyout ):
	yyin(arg_yyin.rdbuf()),
	yyout(arg_yyout.rdbuf())
{
	ctor_common();
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::ctor_common()
{
	yy_c_buf_p = 0;
	yy_init = 0;
	yy_start = 0;
	yy_flex_debug = 0;
	yylineno = 1;	// this will only get updated if %option yylineno

	yy_did_buffer_switch_on_eof = 0;

	yy_looking_for_trail_begin = 0;
	yy_more_flag = 0;
	yy_more_len = 0;
	yy_more_offset = yy_prev_more_offset = 0;

	yy_start_stack_ptr = yy_start_stack_depth = 0;
	yy_start_stack = NULL;

	yy_buffer_stack = NULL;
	yy_buffer_stack_top = 0;
	yy_buffer_stack_max = 0;

	yy_state_buf = 0;

}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
yyFlexLexer::~yyFlexLexer()
{
	delete [] yy_state_buf;
	yyfree( yy_start_stack  );
	yy_delete_buffer( YY_CURRENT_BUFFER );
	yyfree( yy_buffer_stack  );
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::switch_streams( std::istream& new_in, std::ostream& new_out )
{
	// was if( new_in )
	yy_delete_buffer( YY_CURRENT_BUFFER );
	yy_switch_to_buffer( yy_create_buffer( new_in, YY_BUF_SIZE  ) );

	// was if( new_out )
	yyout.rdbuf(new_out.rdbuf());
}

/* The contents of this function are C++ specific, so the () macro is not used.
 */
void yyFlexLexer::switch_streams( std::istream* new_in, std::ostream* new_out )
{
	if( ! new_in ) {
		new_in = &yyin;
	}

	if ( ! new_out ) {
		new_out = &yyout;
	}

	switch_streams(*new_in, *new_out);
}

#ifdef YY_INTERACTIVE
int yyFlexLexer::LexerInput( char* buf, int /* max_size */ )
#else
int yyFlexLexer::LexerInput( char* buf, int max_size )
#endif
{
	if ( yyin.eof() || yyin.fail() )
		return 0;

#ifdef YY_INTERACTIVE
	yyin.get( buf[0] );

	if ( yyin.eof() )
		return 0;

	if ( yyin.bad() )
		return -1;

	return 1;

#else
	(void) yyin.read( buf, max_size );

	if ( yyin.bad() )
		return -1;
	else
		return yyin.gcount();
#endif
}

void yyFlexLexer::LexerOutput( const char* buf, int size )
{
	(void) yyout.write( buf, size );
}
/* %ok-for-header */

/* %endif */

/* yy_get_next_buffer - try to read in a new buffer
 *
 * Returns a code representing an action:
 *	EOB_ACT_LAST_MATCH -
 *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
 *	EOB_ACT_END_OF_FILE - end of file
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
int yyFlexLexer::yy_get_next_buffer()
/* %endif */
{
    	char *dest = YY_CURRENT_BUFFER_LVALUE->yy_ch_buf;
	char *source = (yytext_ptr);
	int number_to_move, i;
	int ret_val;

	if ( (yy_c_buf_p) > &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] )
		YY_FATAL_ERROR(
		"fatal flex scanner internal error--end of buffer missed" );

	if ( YY_CURRENT_BUFFER_LVALUE->yy_fill_buffer == 0 )
		{ /* Don't try to fill the buffer, so this is an EOF. */
		if ( (yy_c_buf_p) - (yytext_ptr) - YY_MORE_ADJ == 1 )
			{
			/* We matched a single character, the EOB, so
			 * treat this as a final EOF.
			 */
			return EOB_ACT_END_OF_FILE;
			}

		else
			{
			/* We matched some text prior to the EOB, first
			 * process it.
			 */
			return EOB_ACT_LAST_MATCH;
			}
		}

	/* Try to read more data. */

	/* First move last chars to start of buffer. */
	number_to_move = (int) ((yy_c_buf_p) - (yytext_ptr) - 1);

	for ( i = 0; i < number_to_move; ++i )
		*(dest++) = *(source++);

	if ( YY_CURRENT_BUFFER_LVALUE->yy_buffer_status == YY_BUFFER_EOF_PENDING )
		/* don't do the read, it's not guaranteed to return an EOF,
		 * just force an EOF
		 */
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars) = 0;

	else
		{
			int num_to_read =
			YY_CURRENT_BUFFER_LVALUE->yy_buf_size - number_to_move - 1;

		while ( num_to_read <= 0 )
			{ /* Not enough room in the buffer - grow it. */

			/* just a shorter name for the current buffer */
			YY_BUFFER_STATE b = YY_CURRENT_BUFFER_LVALUE;

			int yy_c_buf_p_offset =
				(int) ((yy_c_buf_p) - b->yy_ch_buf);

			if ( b->yy_is_our_buffer )
				{
				int new_size = b->yy_buf_size * 2;

				if ( new_size <= 0 )
					b->yy_buf_size += b->yy_buf_size / 8;
				else
					b->yy_buf_size *= 2;

				b->yy_ch_buf = (char *)
					/* Include room in for 2 EOB chars. */
					yyrealloc( (void *) b->yy_ch_buf,
							 (yy_size_t) (b->yy_buf_size + 2)  );
				}
			else
				/* Can't grow it, we don't own it. */
				b->yy_ch_buf = NULL;

			if ( ! b->yy_ch_buf )
				YY_FATAL_ERROR(
				"fatal error - scanner input buffer overflow" );

			(yy_c_buf_p) = &b->yy_ch_buf[yy_c_buf_p_offset];

			num_to_read = YY_CURRENT_BUFFER_LVALUE->yy_buf_size -
						number_to_move - 1;

			}

		if ( num_to_read > YY_READ_BUF_SIZE )
			num_to_read = YY_READ_BUF_SIZE;

		/* Read in more data. */
		YY_INPUT( (&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move]),
			(yy_n_chars), num_to_read );

		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	if ( (yy_n_chars) == 0 )
		{
		if ( number_to_move == YY_MORE_ADJ )
			{
			ret_val = EOB_ACT_END_OF_FILE;
			yyrestart( yyin  );
			}

		else
			{
			ret_val = EOB_ACT_LAST_MATCH;
			YY_CURRENT_BUFFER_LVALUE->yy_buffer_status =
				YY_BUFFER_EOF_PENDING;
			}
		}

	else
		ret_val = EOB_ACT_CONTINUE_SCAN;

	if (((yy_n_chars) + number_to_move) > YY_CURRENT_BUFFER_LVALUE->yy_buf_size) {
		/* Extend the array by 50%, plus the number we really need. */
		int new_size = (yy_n_chars) + number_to_move + ((yy_n_chars) >> 1);
		YY_CURRENT_BUFFER_LVALUE->yy_ch_buf = (char *) yyrealloc(
			(void *) YY_CURRENT_BUFFER_LVALUE->yy_ch_buf, (yy_size_t) new_size  );
		if ( ! YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			YY_FATAL_ERROR( "out of dynamic memory in yy_get_next_buffer()" );
		/* "- 2" to take care of EOB's */
		YY_CURRENT_BUFFER_LVALUE->yy_buf_size = (int) (new_size - 2);
	}

	(yy_n_chars) += number_to_move;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] = YY_END_OF_BUFFER_CHAR;
	YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars) + 1] = YY_END_OF_BUFFER_CHAR;

	(yytext_ptr) = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[0];

	return ret_val;
}

/* yy_get_previous_state - get the state just before the EOB char was reached */

/* %if-c-only */
/* %not-for-header */
/* %endif */
/* %if-c++-only */
    yy_state_type yyFlexLexer::yy_get_previous_state()
/* %endif */
{
	yy_state_type yy_current_state;
	char *yy_cp;
    
/* %% [15.0] code to get the start state into yy_current_state goes here */
	yy_current_state = (yy_start);

	for ( yy_cp = (yytext_ptr) + YY_MORE_ADJ; yy_cp < (yy_c_buf_p); ++yy_cp )
		{
/* %% [16.0] code to find the next state goes here */
		YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
		if ( yy_accept[yy_current_state] )
			{
			(yy_last_accepting_state) = yy_current_state;
			(yy_last_accepting_cpos) = yy_cp;
			}
		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
			{
			yy_current_state = (int) yy_def[yy_current_state];
			if ( yy_current_state >= 1095 )
				yy_c = yy_meta[yy_c];
			}
		yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
		}

	return yy_current_state;
}

/* yy_try_NUL_trans - try to make a transition on the NUL character
 *
 * synopsis
 *	next_state = yy_try_NUL_trans( current_state );
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    yy_state_type yyFlexLexer::yy_try_NUL_trans( yy_state_type yy_current_state )
/* %endif */
{
	int yy_is_jam;
    /* %% [17.0] code to find the next state, and perhaps do backing up, goes here */
	char *yy_cp = (yy_c_buf_p);

	YY_CHAR yy_c = 1;
	if ( yy_accept[yy_current_state] )
		{
		(yy_last_accepting_state) = yy_current_state;
		(yy_last_accepting_cpos) = yy_cp;
		}
	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
		{
		yy_current_state = (int) yy_def[yy_current_state];
		if ( yy_current_state >= 1095 )
			yy_c = yy_meta[yy_c];
		}
	yy_current_state = yy_nxt[yy_base[yy_current_state] + yy_c];
	yy_is_jam = (yy_current_state == 1094);

		return yy_is_jam ? 0 : yy_current_state;
}

#ifndef YY_NO_UNPUT
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yyunput( int c, char* yy_bp)
/* %endif */
{
	char *yy_cp;
    
    yy_cp = (yy_c_buf_p);

	/* undo effects of setting up yytext */
	*yy_cp = (yy_hold_char);

	if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
		{ /* need to shift things up to make room */
		/* +2 for EOB chars. */
		int number_to_move = (yy_n_chars) + 2;
		char *dest = &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[
					YY_CURRENT_BUFFER_LVALUE->yy_buf_size + 2];
		char *source =
				&YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[number_to_move];

		while ( source > YY_CURRENT_BUFFER_LVALUE->yy_ch_buf )
			*--dest = *--source;

		yy_cp += (int) (dest - source);
		yy_bp += (int) (dest - source);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars =
			(yy_n_chars) = (int) YY_CURRENT_BUFFER_LVALUE->yy_buf_size;

		if ( yy_cp < YY_CURRENT_BUFFER_LVALUE->yy_ch_buf + 2 )
			YY_FATAL_ERROR( "flex scanner push-back overflow" );
		}

	*--yy_cp = (char) c;

/* %% [18.0] update yylineno here */

    if ( c == '\n' ){
        --yylineno;
    }

	(yytext_ptr) = yy_bp;
	(yy_hold_char) = *yy_cp;
	(yy_c_buf_p) = yy_cp;
}
/* %if-c-only */
/* %endif */
#endif

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    int yyFlexLexer::yyinput()
/* %endif */
{
	int c;
    
	*(yy_c_buf_p) = (yy_hold_char);

	if ( *(yy_c_buf_p) == YY_END_OF_BUFFER_CHAR )
		{
		/* yy_c_buf_p now points to the character we want to return.
		 * If this occurs *before* the EOB characters, then it's a
		 * valid NUL; if not, then we've hit the end of the buffer.
		 */
		if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )
			/* This was really a NUL. */
			*(yy_c_buf_p) = '\0';

		else
			{ /* need more input */
			int offset = (int) ((yy_c_buf_p) - (yytext_ptr));
			++(yy_c_buf_p);

			switch ( yy_get_next_buffer(  ) )
				{
				case EOB_ACT_LAST_MATCH:
					/* This happens because yy_g_n_b()
					 * sees that we've accumulated a
					 * token and flags that we need to
					 * try matching the token before
					 * proceeding.  But for input(),
					 * there's no matching to consider.
					 * So convert the EOB_ACT_LAST_MATCH
					 * to EOB_ACT_END_OF_FILE.
					 */

					/* Reset buffer status. */
					yyrestart( yyin );

					/*FALLTHROUGH*/

				case EOB_ACT_END_OF_FILE:
					{
					if ( yywrap(  ) )
						return 0;

					if ( ! (yy_did_buffer_switch_on_eof) )
						YY_NEW_FILE;
#ifdef __cplusplus
					return yyinput();
#else
					return input();
#endif
					}

				case EOB_ACT_CONTINUE_SCAN:
					(yy_c_buf_p) = (yytext_ptr) + offset;
					break;
				}
			}
		}

	c = *(unsigned char *) (yy_c_buf_p);	/* cast for 8-bit char's */
	*(yy_c_buf_p) = '\0';	/* preserve yytext */
	(yy_hold_char) = *++(yy_c_buf_p);

/* %% [19.0] update BOL and yylineno */
	if ( c == '\n' )
		
    yylineno++;
;

	return c;
}
/* %if-c-only */
/* %endif */

/** Immediately switch to a different input stream.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yyrestart( std::istream& input_file )
/* %endif */
{
    
	if ( ! YY_CURRENT_BUFFER ){
        yyensure_buffer_stack ();
		YY_CURRENT_BUFFER_LVALUE =
            yy_create_buffer( yyin, YY_BUF_SIZE );
	}

	yy_init_buffer( YY_CURRENT_BUFFER, input_file );
	yy_load_buffer_state(  );
}

/* %if-c++-only */
/** Delegate to the new version that takes an istream reference.
 * @param input_file A readable stream.
 * 
 * @note This function does not reset the start condition to @c INITIAL .
 */
void yyFlexLexer::yyrestart( std::istream* input_file )
{
	if( ! input_file ) {
		input_file = &yyin;
	}
	yyrestart( *input_file );
}
/* %endif */

/** Switch to a different input buffer.
 * @param new_buffer The new input buffer.
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
/* %endif */
{
    
	/* TODO. We should be able to replace this entire function body
	 * with
	 *		yypop_buffer_state();
	 *		yypush_buffer_state(new_buffer);
     */
	yyensure_buffer_stack ();
	if ( YY_CURRENT_BUFFER == new_buffer )
		return;

	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	YY_CURRENT_BUFFER_LVALUE = new_buffer;
	yy_load_buffer_state(  );

	/* We don't actually know whether we did this switch during
	 * EOF (yywrap()) processing, but the only time this flag
	 * is looked at is after yywrap() is called, so it's safe
	 * to go ahead and always set it.
	 */
	(yy_did_buffer_switch_on_eof) = 1;
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_load_buffer_state()
/* %endif */
{
    	(yy_n_chars) = YY_CURRENT_BUFFER_LVALUE->yy_n_chars;
	(yytext_ptr) = (yy_c_buf_p) = YY_CURRENT_BUFFER_LVALUE->yy_buf_pos;
/* %if-c-only */
/* %endif */
/* %if-c++-only */
	yyin.rdbuf(YY_CURRENT_BUFFER_LVALUE->yy_input_file);
/* %endif */
	(yy_hold_char) = *(yy_c_buf_p);
}

/** Allocate and initialize an input buffer state.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream& file, int size )
/* %endif */
{
	YY_BUFFER_STATE b;
    
	b = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );
	if ( ! b )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_buf_size = size;

	/* yy_ch_buf has to be 2 characters longer than the size given because
	 * we need to put in 2 end-of-buffer characters.
	 */
	b->yy_ch_buf = (char *) yyalloc( (yy_size_t) (b->yy_buf_size + 2)  );
	if ( ! b->yy_ch_buf )
		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );

	b->yy_is_our_buffer = 1;

	yy_init_buffer( b, file );

	return b;
}

/* %if-c++-only */
/** Delegate creation of buffers to the new version that takes an istream reference.
 * @param file A readable stream.
 * @param size The character buffer size in bytes. When in doubt, use @c YY_BUF_SIZE.
 * 
 * @return the allocated buffer state.
 */
	YY_BUFFER_STATE yyFlexLexer::yy_create_buffer( std::istream* file, int size )
{
	return yy_create_buffer( *file, size );
}
/* %endif */

/** Destroy the buffer.
 * @param b a buffer created with yy_create_buffer()
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_delete_buffer( YY_BUFFER_STATE b )
/* %endif */
{
    
	if ( ! b )
		return;

	if ( b == YY_CURRENT_BUFFER ) /* Not sure if we should pop here. */
		YY_CURRENT_BUFFER_LVALUE = (YY_BUFFER_STATE) 0;

	if ( b->yy_is_our_buffer )
		yyfree( (void *) b->yy_ch_buf  );

	yyfree( (void *) b  );
}

/* Initializes or reinitializes a buffer.
 * This function is sometimes called more than once on the same buffer,
 * such as during a yyrestart() or at EOF.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_init_buffer( YY_BUFFER_STATE b, std::istream& file )
/* %endif */

{
	int oerrno = errno;
    
	yy_flush_buffer( b );

/* %if-c-only */
/* %endif */
/* %if-c++-only */
	b->yy_input_file = file.rdbuf();
/* %endif */
	b->yy_fill_buffer = 1;

    /* If b is the current buffer, then yy_init_buffer was _probably_
     * called from yyrestart() or through yy_get_next_buffer.
     * In that case, we don't want to reset the lineno or column.
     */
    if (b != YY_CURRENT_BUFFER){
        b->yy_bs_lineno = 1;
        b->yy_bs_column = 0;
    }

/* %if-c-only */
/* %endif */
/* %if-c++-only */
	b->yy_is_interactive = 0;
/* %endif */
	errno = oerrno;
}

/** Discard all buffered characters. On the next scan, YY_INPUT will be called.
 * @param b the buffer state to be flushed, usually @c YY_CURRENT_BUFFER.
 * 
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_flush_buffer( YY_BUFFER_STATE b )
/* %endif */
{
    	if ( ! b )
		return;

	b->yy_n_chars = 0;

	/* We always need two end-of-buffer characters.  The first causes
	 * a transition to the end-of-buffer state.  The second causes
	 * a jam in that state.
	 */
	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;

	b->yy_buf_pos = &b->yy_ch_buf[0];

	b->yy_at_bol = 1;
	b->yy_buffer_status = YY_BUFFER_NEW;

	if ( b == YY_CURRENT_BUFFER )
		yy_load_buffer_state(  );
}

/* %if-c-or-c++ */
/** Pushes the new state onto the stack. The new state becomes
 *  the current state. This function will allocate the stack
 *  if necessary.
 *  @param new_buffer The new state.
 *  
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yypush_buffer_state (YY_BUFFER_STATE new_buffer)
/* %endif */
{
    	if (new_buffer == NULL)
		return;

	yyensure_buffer_stack();

	/* This block is copied from yy_switch_to_buffer. */
	if ( YY_CURRENT_BUFFER )
		{
		/* Flush out information for old buffer. */
		*(yy_c_buf_p) = (yy_hold_char);
		YY_CURRENT_BUFFER_LVALUE->yy_buf_pos = (yy_c_buf_p);
		YY_CURRENT_BUFFER_LVALUE->yy_n_chars = (yy_n_chars);
		}

	/* Only push if top exists. Otherwise, replace top. */
	if (YY_CURRENT_BUFFER)
		(yy_buffer_stack_top)++;
	YY_CURRENT_BUFFER_LVALUE = new_buffer;

	/* copied from yy_switch_to_buffer. */
	yy_load_buffer_state(  );
	(yy_did_buffer_switch_on_eof) = 1;
}
/* %endif */

/* %if-c-or-c++ */
/** Removes and deletes the top of the stack, if present.
 *  The next element becomes the new top.
 *  
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yypop_buffer_state (void)
/* %endif */
{
    	if (!YY_CURRENT_BUFFER)
		return;

	yy_delete_buffer(YY_CURRENT_BUFFER );
	YY_CURRENT_BUFFER_LVALUE = NULL;
	if ((yy_buffer_stack_top) > 0)
		--(yy_buffer_stack_top);

	if (YY_CURRENT_BUFFER) {
		yy_load_buffer_state(  );
		(yy_did_buffer_switch_on_eof) = 1;
	}
}
/* %endif */

/* %if-c-or-c++ */
/* Allocates the stack if it does not exist.
 *  Guarantees space for at least one push.
 */
/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::yyensure_buffer_stack(void)
/* %endif */
{
	yy_size_t num_to_alloc;
    
	if (!(yy_buffer_stack)) {

		/* First allocation is just for 2 elements, since we don't know if this
		 * scanner will even need a stack. We use 2 instead of 1 to avoid an
		 * immediate realloc on the next call.
         */
      num_to_alloc = 1; /* After all that talk, this was set to 1 anyways... */
		(yy_buffer_stack) = (struct yy_buffer_state**)yyalloc
								(num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		memset((yy_buffer_stack), 0, num_to_alloc * sizeof(struct yy_buffer_state*));

		(yy_buffer_stack_max) = num_to_alloc;
		(yy_buffer_stack_top) = 0;
		return;
	}

	if ((yy_buffer_stack_top) >= ((yy_buffer_stack_max)) - 1){

		/* Increase the buffer to prepare for a possible push. */
		yy_size_t grow_size = 8 /* arbitrary grow size */;

		num_to_alloc = (yy_buffer_stack_max) + grow_size;
		(yy_buffer_stack) = (struct yy_buffer_state**)yyrealloc
								((yy_buffer_stack),
								num_to_alloc * sizeof(struct yy_buffer_state*)
								);
		if ( ! (yy_buffer_stack) )
			YY_FATAL_ERROR( "out of dynamic memory in yyensure_buffer_stack()" );

		/* zero only the new slots.*/
		memset((yy_buffer_stack) + (yy_buffer_stack_max), 0, grow_size * sizeof(struct yy_buffer_state*));
		(yy_buffer_stack_max) = num_to_alloc;
	}
}
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_push_state( int _new_state )
/* %endif */
{
    	if ( (yy_start_stack_ptr) >= (yy_start_stack_depth) )
		{
		yy_size_t new_size;

		(yy_start_stack_depth) += YY_START_STACK_INCR;
		new_size = (yy_size_t) (yy_start_stack_depth) * sizeof( int );

		if ( ! (yy_start_stack) )
			(yy_start_stack) = (int *) yyalloc( new_size  );

		else
			(yy_start_stack) = (int *) yyrealloc(
					(void *) (yy_start_stack), new_size  );

		if ( ! (yy_start_stack) )
			YY_FATAL_ERROR( "out of memory expanding start-condition stack" );
		}

	(yy_start_stack)[(yy_start_stack_ptr)++] = YY_START;

	BEGIN(_new_state);
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    void yyFlexLexer::yy_pop_state()
/* %endif */
{
    	if ( --(yy_start_stack_ptr) < 0 )
		YY_FATAL_ERROR( "start-condition stack underflow" );

	BEGIN((yy_start_stack)[(yy_start_stack_ptr)]);
}

/* %if-c-only */
/* %endif */
/* %if-c++-only */
    int yyFlexLexer::yy_top_state()
/* %endif */
{
    	return (yy_start_stack)[(yy_start_stack_ptr) - 1];
}

#ifndef YY_EXIT_FAILURE
#define YY_EXIT_FAILURE 2
#endif

/* %if-c-only */
/* %endif */
/* %if-c++-only */
void yyFlexLexer::LexerError( const char* msg )
{
    	std::cerr << msg << std::endl;
	exit( YY_EXIT_FAILURE );
}
/* %endif */

/* Redefine yyless() so it works in section 3 code. */

#undef yyless
#define yyless(n) \
	do \
		{ \
		/* Undo effects of setting up yytext. */ \
        int yyless_macro_arg = (n); \
        YY_LESS_LINENO(yyless_macro_arg);\
		yytext[yyleng] = (yy_hold_char); \
		(yy_c_buf_p) = yytext + yyless_macro_arg; \
		(yy_hold_char) = *(yy_c_buf_p); \
		*(yy_c_buf_p) = '\0'; \
		yyleng = yyless_macro_arg; \
		} \
	while ( 0 )

/* Accessor  methods (get/set functions) to struct members. */

/* %if-c-only */
/* %if-reentrant */
/* %endif */
/* %if-reentrant */
/* %endif */
/* %endif */

/* %if-reentrant */
/* %if-bison-bridge */
/* %endif */
/* %endif if-c-only */

/* %if-c-only */
/* %endif */

/* %if-c-only SNIP! this currently causes conflicts with the c++ scanner */
/* %if-reentrant */
/* %endif */
/* %endif */

/*
 * Internal utility routines.
 */

#ifndef yytext_ptr
static void yy_flex_strncpy (char* s1, const char * s2, int n )
{
		
	int i;
	for ( i = 0; i < n; ++i )
		s1[i] = s2[i];
}
#endif

#ifdef YY_NEED_STRLEN
static int yy_flex_strlen (const char * s )
{
	int n;
	for ( n = 0; s[n]; ++n )
		;

	return n;
}
#endif

void *yyalloc (yy_size_t  size )
{
			return malloc(size);
}

void *yyrealloc  (void * ptr, yy_size_t  size )
{
		
	/* The cast to (char *) in the following accommodates both
	 * implementations that use char* generic pointers, and those
	 * that use void* generic pointers.  It works with the latter
	 * because both ANSI C and C++ allow castless assignment from
	 * any pointer type to void*, and deal with argument conversions
	 * as though doing an assignment.
	 */
	return realloc(ptr, size);
}

void yyfree (void * ptr )
{
			free( (char *) ptr );	/* see yyrealloc() for (char *) cast */
}

/* %if-tables-serialization definitions */
/* %define-yytables   The name for this specific scanner's tables. */
#define YYTABLES_NAME "yytables"
/* %endif */

/* %ok-for-header */

#line 156 "http11.l"


void iotcloud::http11scanner::BEGIN_REQUEST() {
    BEGIN(REQUEST);
}

